# Generated by carnix 0.6.6: carnix -o server.nix Cargo.lock --standalone
with import <nixpkgs> {};
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  server = f: server_0_1_0 { features = server_0_1_0_features { server_0_1_0 = f; }; };
  tools = f: tools_0_1_0 { features = tools_0_1_0_features { tools_0_1_0 = f; }; };
  adler32_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "adler32";
    version = "1.0.2";
    authors = [ "Remi Rampin <remirampin@gmail.com>" ];
    sha256 = "1974q3nysai026zhz24df506cxwi09jdzqksll4h7ibpb5n9g1d4";
    inherit dependencies buildDependencies features;
  };
  aho_corasick_0_6_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aho-corasick";
    version = "0.6.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "189v919mp6rzzgjp1khpn4zlq8ls81gh43x1lmc8kbkagdlpq888";
    libName = "aho_corasick";
    crateBin = [ {  name = "aho-corasick-dot"; } ];
    inherit dependencies buildDependencies features;
  };
  antidote_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "antidote";
    version = "1.0.0";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1x2wgaw603jcjwsfvc8s2rpaqjv0aqj8mvws2ahhkvfnwkdf7icw";
    inherit dependencies buildDependencies features;
  };
  arrayref_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "arrayref";
    version = "0.3.4";
    authors = [ "David Roundy <roundyd@physics.oregonstate.edu>" ];
    sha256 = "1sy70y5kg4j0r2kqv25nwvlcpgjyziznsa4kq89vjsy51blv57gj";
    inherit dependencies buildDependencies features;
  };
  arrayvec_0_4_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "arrayvec";
    version = "0.4.7";
    authors = [ "bluss" ];
    sha256 = "0fzgv7z1x1qnyd7j32vdcadk4k9wfx897y06mr3bw1yi52iqf4z4";
    inherit dependencies buildDependencies features;
  };
  backtrace_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.3.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "0vj1dgsivxci5r43w9d56yb98g3r7ff75zr5f592j7yizznshh2r";
    inherit dependencies buildDependencies features;
  };
  backtrace_sys_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace-sys";
    version = "0.1.16";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1cn2c8q3dn06crmnk0p62czkngam4l8nf57wy33nz1y5g25pszwy";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  base64_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.6.0";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "0ql1rmczbnww3iszc0pfc6mqa47ravpsdf525vp6s8r32nyzspl5";
    inherit dependencies buildDependencies features;
  };
  base64_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.8.0";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "13vksngkp1nmjmnw80nlly71afqi8sqva4di7vd1gxnxr3i5awk5";
    inherit dependencies buildDependencies features;
  };
  base64_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.9.0";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "1hsl1fgjpgl0ssg471m827svlfij8yhax0l6ldaqkrip78049fz3";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_9_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.9.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "18h073l5jd88rx4qdr95fjddr9rk79pb1aqnshzdnw16cfmb9rws";
    inherit dependencies buildDependencies features;
  };
  bitflags_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "1.0.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0p4b3nr0s5nda2qmm7xdhnvh4lkqk3xd8l9ffmwbvqw137vx7mj1";
    inherit dependencies buildDependencies features;
  };
  block_buffer_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "block-buffer";
    version = "0.3.3";
    authors = [ "RustCrypto Developers" ];
    sha256 = "0ka14535hlndyig1dqxqvdv60mgmnnhfi6x87npha3x3yg5sx201";
    inherit dependencies buildDependencies features;
  };
  build_const_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "build_const";
    version = "0.2.0";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "1k84ln9mp4dbdp2lk44dbq5b2z9rsmzrbyd8mszrkc1bckrrjljs";
    inherit dependencies buildDependencies features;
  };
  byte_tools_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byte-tools";
    version = "0.2.0";
    authors = [ "The Rust-Crypto Project Developers" ];
    sha256 = "15cm6sxkk2ikrz8sxld3hv9g419j4kjzwdjp4fn53gjq07awq6il";
    inherit dependencies buildDependencies features;
  };
  byteorder_1_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "1.2.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1wsxnqcscg4gchdmgdbwc78lw2qx2i6bnjd564xq7h7qc4fp2157";
    inherit dependencies buildDependencies features;
  };
  bytes_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bytes";
    version = "0.4.6";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0q7adalpqd09qhxgszw72rd55whgpchpc4r523qhlmaw4gipjsa2";
    inherit dependencies buildDependencies features;
  };
  cc_1_0_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.7";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1772x525wgmkk1kmf05bdlq8hyc7nwifk85nmvq205ga7blbq2lz";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0x06hvrrqy96m97593823vvxcgvjaxckghwyy2jcyc8qc7c6cyhi";
    inherit dependencies buildDependencies features;
  };
  chrono_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "chrono";
    version = "0.4.0";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "0hm53hi6v7b6b1va6vn96lx26wvj8gzi2g51s1j02nlz0jcprw6a";
    inherit dependencies buildDependencies features;
  };
  constant_time_eq_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "constant_time_eq";
    version = "0.1.3";
    authors = [ "Cesar Eduardo Barros <cesarb@cesarb.eti.br>" ];
    sha256 = "03qri9hjf049gwqg9q527lybpg918q6y5q4g9a5lma753nff49wd";
    inherit dependencies buildDependencies features;
  };
  core_foundation_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-foundation";
    version = "0.2.3";
    authors = [ "The Servo Project Developers" ];
    sha256 = "1g0vpya5h2wa0nlz4a74jar6y8z09f0p76zbzfqrm3dbfsrld1pm";
    inherit dependencies buildDependencies features;
  };
  core_foundation_sys_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-foundation-sys";
    version = "0.2.3";
    authors = [ "The Servo Project Developers" ];
    sha256 = "19s0d03294m9s5j8cvy345db3gkhs2y02j5268ap0c6ky5apl53s";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  crc_1_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crc";
    version = "1.7.0";
    authors = [ "Rui Hu <code@mrhooray.com>" ];
    sha256 = "1m4lfnjf5qvgy7is97kyi5jjpk6kw0hp088fi59cl7ms1gc9knv0";
    inherit dependencies buildDependencies features;
  };
  crossbeam_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam";
    version = "0.3.2";
    authors = [ "Aaron Turon <aturon@mozilla.com>" ];
    sha256 = "1y0fhf8lapczpk49achg29hg6s3y7jh8j4a7yf0lfx0x888lqcin";
    inherit dependencies buildDependencies features;
  };
  crossbeam_deque_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-deque";
    version = "0.2.0";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "1h3n1p1qy45b6388j3svfy1m72xlcx9j9a5y0mww6jz8fmknipnb";
    inherit dependencies buildDependencies features;
  };
  crossbeam_deque_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-deque";
    version = "0.3.0";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "0skpja7ri6q34li5plq8yk7xinc853014ra59ra9l5sdspcbdypa";
    inherit dependencies buildDependencies features;
  };
  crossbeam_epoch_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-epoch";
    version = "0.3.0";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "115qp2pgs2nymqpjsbrfl07b1raikcl3msijw1n8iaifn4f59fvq";
    inherit dependencies buildDependencies features;
  };
  crossbeam_epoch_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-epoch";
    version = "0.4.0";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "1jsn2ym55r0zgxjp74xz5mzf1wprjfmmbbd1vs6qywqpha6j0hq9";
    inherit dependencies buildDependencies features;
  };
  crossbeam_utils_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-utils";
    version = "0.2.2";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "0jiwzxv0lysjq68yk4bzkygrf69zhdidyw55nxlmimxlm6xv0j4m";
    inherit dependencies buildDependencies features;
  };
  crypto_mac_0_5_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crypto-mac";
    version = "0.5.2";
    authors = [ "RustCrypto Developers" ];
    sha256 = "0lm5blwpl5bdg128218z7yphgjfsazi7vg1xq807cdd36mxdbgny";
    inherit dependencies buildDependencies features;
  };
  cssparser_0_23_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cssparser";
    version = "0.23.2";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "0qijr2wcds668c4fssdwq7nmv63x2vl7hz49kb5l4bv7k77gykyf";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  cssparser_macros_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cssparser-macros";
    version = "0.3.2";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "0zlzfs4g8wfq675411j65k0zzaj44d24viq2ahh56jfnb98vikif";
    libPath = "lib.rs";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  csv_1_0_0_beta_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "csv";
    version = "1.0.0-beta.5";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0bffwp4bqw5xh1zwdsxly3i1yqi7rl1h72y94fi7v4ciklw7hqp6";
    inherit dependencies buildDependencies features;
  };
  csv_core_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "csv-core";
    version = "0.1.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1lpc300vvbmdkn3lhdsq9p9lyn81pszrg8kpkw672dd1d2dpp64w";
    inherit dependencies buildDependencies features;
  };
  debug_unreachable_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "debug_unreachable";
    version = "0.1.1";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0fznxvrbf54c3imgrqy1fzpdrilih2kmixlin7ch25rfh6az581p";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  derive_error_chain_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "derive-error-chain";
    version = "0.11.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" "Arnav Singh <arnavion@gmail.com>" ];
    sha256 = "0sww75zqy9wbqkyh2n9rra0y98zbl6zp64577nd1h46x4crf8s9b";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  diesel_1_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel";
    version = "1.1.1";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "13gnhaazdv5amisdx0af282w23c7mkil7kqnvp8fgxznpkh83c16";
    inherit dependencies buildDependencies features;
  };
  diesel_derives_1_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_derives";
    version = "1.1.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "1dlksapa6b1qif5f82iwwn64fmhnin0sw0nz2fwv2ckzbza70z38";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  diesel_full_text_search_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "diesel_full_text_search";
    version = "1.0.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "02pbyg240fkkjssp6hc2wghl9zd11p9h2wkpn1wyvi9v4bq38jn9";
    inherit dependencies buildDependencies features;
  };
  digest_0_7_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "digest";
    version = "0.7.2";
    authors = [ "RustCrypto Developers" ];
    sha256 = "1aqrvkyiymgf12nnn6ivfdry479czcv69z35szgr8jiiymrmp0v4";
    inherit dependencies buildDependencies features;
  };
  docopt_0_8_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "docopt";
    version = "0.8.3";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1f8zzkgsakpdb5zqck13jkxj5f2sv397hjlbqiyfa57cq7sd0jvd";
    crateBin = [ {  name = "docopt-wordlist";  path = "src/wordlist.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  dotenv_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dotenv";
    version = "0.11.0";
    authors = [ "Noemi Lapresta <noemi.lapresta@gmail.com>" "Craig Hills <chills@gmail.com>" "Mike Piccolo <mfpiccolo@gmail.com>" "Alice Maz <alice@alicemaz.com>" "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "0ql1rjjy9iffiqmlbwhgmd2qylg4bzalmvaz0n7q9l1rqxz4r7ci";
    inherit dependencies buildDependencies features;
  };
  dtoa_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dtoa";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1bxsh6fags7nr36vlz07ik2a1rzyipc8x1y30kjk832hf2pzadmw";
    inherit dependencies buildDependencies features;
  };
  dtoa_short_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dtoa-short";
    version = "0.3.2";
    authors = [ "Xidorn Quan <me@upsuper.org>" ];
    sha256 = "10ahw0qfrss941f8fmyhjz4w5h5j2lan2a200av1i31243gfqh4k";
    inherit dependencies buildDependencies features;
  };
  encoding_rs_0_7_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding_rs";
    version = "0.7.2";
    authors = [ "Henri Sivonen <hsivonen@hsivonen.fi>" ];
    sha256 = "1c23bi3q4qmi2ci8g7p5j4b4i5abyggvyg6hkl7w4p4r527c9g3q";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.11.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "19nz17q6dzp0mx2jhh9qbj45gkvvgcl7zq9z2ai5a8ihbisfj6d7";
    inherit dependencies buildDependencies features;
  };
  fake_simd_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fake-simd";
    version = "0.1.2";
    authors = [ "The Rust-Crypto Project Developers" ];
    sha256 = "1a0f1j66nkwfy17s06vm2bn9vh8vy8llcijfhh9m10p58v08661a";
    inherit dependencies buildDependencies features;
  };
  fallible_iterator_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fallible-iterator";
    version = "0.1.4";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "12v5xmbj5363ra440h3nkm0mf6zpq59b4iiqcfcvnriszjcpnw8q";
    inherit dependencies buildDependencies features;
  };
  flate2_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "flate2";
    version = "1.0.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0hi1r0sz8ca750hq9ym6d3n99g6rmmm8m8hadz2v49pfh6jd6svc";
    inherit dependencies buildDependencies features;
  };
  fnv_1_0_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fnv";
    version = "1.0.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "128mlh23y3gg6ag5h8iiqlcbl59smisdzraqy88ldrf75kbw27ip";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  foreign_types_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "foreign-types";
    version = "0.3.2";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "105n8sp2djb1s5lzrw04p7ss3dchr5qa3canmynx396nh3vwm2p8";
    inherit dependencies buildDependencies features;
  };
  foreign_types_shared_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "foreign-types-shared";
    version = "0.1.1";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0b6cnvqbflws8dxywk4589vgbz80049lz4x1g9dfy4s1ppd3g4z5";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "0jrf4shb1699r4la8z358vri8318w4mdi6qzfqy30p2ymjlca4gk";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_sys_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon-sys";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "08jp1zxrm9jbrr6l26bjal4dbm8bxfy57ickdgibsqxr1n9j3hf5";
    inherit dependencies buildDependencies features;
  };
  futf_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "futf";
    version = "0.1.3";
    authors = [ "Keegan McAllister <kmcallister@mozilla.com>" ];
    sha256 = "0b9j1iz1fcdf7f8s7mpkc3khr1qk5r6qcj2hh6s6nvrkm5lwzr7k";
    inherit dependencies buildDependencies features;
  };
  futures_0_1_18_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "futures";
    version = "0.1.18";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "00vkvblhchf8k18hy5gmpv6mkk7py8lmhd0y20r50yrfjgkavls1";
    inherit dependencies buildDependencies features;
  };
  futures_cpupool_0_1_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "futures-cpupool";
    version = "0.1.8";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0ficd31n5ljiixy6x0vjglhq4fp0v1p4qzxm3v6ymsrb3z080l5c";
    inherit dependencies buildDependencies features;
  };
  futures_state_stream_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "futures-state-stream";
    version = "0.2.0";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1gbxzr57fppfiskc1x9rngfwgb9ia0xd8jsvv1iwnwzqdlm8iz1h";
    inherit dependencies buildDependencies features;
  };
  gcc_0_3_54_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "gcc";
    version = "0.3.54";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "07a5i47r8achc6gxsba3ga17h9gnh4b9a2cak8vjg4hx62aajkr4";
    inherit dependencies buildDependencies features;
  };
  generic_array_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "generic-array";
    version = "0.9.0";
    authors = [ "Bartłomiej Kamiński <fizyk20@gmail.com>" ];
    sha256 = "1gk3g5yxvh361syfz38nlf6vg7d0qx7crpa83mnqzaf9dymz19g7";
    libName = "generic_array";
    inherit dependencies buildDependencies features;
  };
  hex_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hex";
    version = "0.2.0";
    authors = [ "KokaKiwi <kokakiwi@kokakiwi.net>" ];
    sha256 = "0yd68d709w1z8133n9hny9dfj2fvil0r6802c3bb63czyis8rfbp";
    inherit dependencies buildDependencies features;
  };
  hex_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hex";
    version = "0.3.1";
    authors = [ "KokaKiwi <kokakiwi@kokakiwi.net>" ];
    sha256 = "15s97gqbw2czri6v0ikf0432i8wdw1d5c3mxcv8cmh3a00vm5w66";
    inherit dependencies buildDependencies features;
  };
  hmac_0_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hmac";
    version = "0.5.0";
    authors = [ "RustCrypto Developers" ];
    sha256 = "0zh24045j67cwbm5bm9xrbdigxrjmqki105m03xmkq3zb8dj869b";
    inherit dependencies buildDependencies features;
  };
  html5ever_0_22_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "html5ever";
    version = "0.22.0";
    authors = [ "The html5ever Project Developers" ];
    sha256 = "1cnd27818fa5ic48hg90pxnvrsqlfy8zl0y320xvbrvninqawyfc";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  httparse_1_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "httparse";
    version = "1.2.4";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "169grgxpsq0jaa2fk913z692a6qi8c2n1kypsay124b37720d8ll";
    inherit dependencies buildDependencies features;
  };
  humantime_1_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "humantime";
    version = "1.1.1";
    authors = [ "Paul Colomiets <paul@colomiets.name>" ];
    sha256 = "1lzdfsfzdikcp1qb6wcdvnsdv16pmzr7p7cv171vnbnyz2lrwbgn";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  hyper_0_11_22_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hyper";
    version = "0.11.22";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "13w9ywbbcf505s6051p3r9b5hf9rdjwizxxgcyds1jhd4d5cg9zi";
    inherit dependencies buildDependencies features;
  };
  hyper_tls_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hyper-tls";
    version = "0.1.2";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "0n39sb8sc2pzdg501nshmv35q0r9pnrfjh8r1pdlygwxgcni9n3d";
    inherit dependencies buildDependencies features;
  };
  idna_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "idna";
    version = "0.1.4";
    authors = [ "The rust-url developers" ];
    sha256 = "15j44qgjx1skwg9i7f4cm36ni4n99b1ayx23yxx7axxcw8vjf336";
    inherit dependencies buildDependencies features;
  };
  iovec_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "iovec";
    version = "0.1.2";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0vjymmb7wj4v4kza5jjn48fcdb85j3k37y7msjl3ifz0p9yiyp2r";
    inherit dependencies buildDependencies features;
  };
  itoa_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itoa";
    version = "0.3.4";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1nfkzz6vrgj0d9l3yzjkkkqzdgs68y294fjdbl7jq118qi8xc9d9";
    inherit dependencies buildDependencies features;
  };
  jsonwebtoken_4_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "jsonwebtoken";
    version = "4.0.0";
    authors = [ "Vincent Prouillet <prouillet.vincent@gmail.com>" ];
    sha256 = "041jf0hg3rld1c9c9wxpldfj9fiv8349b60w9iilr9jgsr0sa038";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  kuchiki_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kuchiki";
    version = "0.7.0";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "11cjc9a9l4a7k4a9wni89x6g6s6lg573f5yj21mvpgcivrb7x2wd";
    inherit dependencies buildDependencies features;
  };
  language_tags_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "language-tags";
    version = "0.2.2";
    authors = [ "Pyfisch <pyfisch@gmail.com>" ];
    sha256 = "1zkrdzsqzzc7509kd7nngdwrp461glm2g09kqpzaqksp82frjdvy";
    inherit dependencies buildDependencies features;
  };
  lazy_static_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "0.2.11";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "1x6871cvpy5b96yv4c7jvpq316fp5d4609s9py7qk6cd6x9k34vm";
    inherit dependencies buildDependencies features;
  };
  lazy_static_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "1.0.0";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "0wfvqyr2nvx2mbsrscg5y7gfa9skhb8p72ayanl8vl49pw24v4fh";
    inherit dependencies buildDependencies features;
  };
  lazycell_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazycell";
    version = "0.6.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Nikita Pekin <contact@nikitapek.in>" ];
    sha256 = "1ax148clinbvp6alxcih8s5i2bg3mc5mi69n3hvzvzbwlm6k532r";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_39_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.39";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0sv0abs2msd0f9x0gf00v6ha7g8hfl3kbbd8d61kn3zwnpsgb8fw";
    inherit dependencies buildDependencies features;
  };
  libflate_0_1_14_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libflate";
    version = "0.1.14";
    authors = [ "Takeru Ohta <phjgt308@gmail.com>" ];
    sha256 = "03zq769bfffg3iyp2vkkjsmkskabrxiyh5khzppyyngm8w9xpdsc";
    inherit dependencies buildDependencies features;
  };
  linked_hash_map_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "linked-hash-map";
    version = "0.5.1";
    authors = [ "Stepan Koltsov <stepan.koltsov@gmail.com>" "Andrew Paseltiner <apaseltiner@gmail.com>" ];
    sha256 = "1f29c7j53z7w5v0g115yii9dmmbsahr93ak375g48vi75v3p4030";
    inherit dependencies buildDependencies features;
  };
  log_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.3.9";
    authors = [ "The Rust Project Developers" ];
    sha256 = "19i9pwp7lhaqgzangcpw00kc3zsgcqcx84crv07xgz3v7d3kvfa2";
    inherit dependencies buildDependencies features;
  };
  log_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.4.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "01vm8yy3wngvyj6qp1x3xpcb4xq7v67yn9l7fsma8kz28mliz90d";
    inherit dependencies buildDependencies features;
  };
  log_mdc_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log-mdc";
    version = "0.1.0";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0lqdid3dbi6ikikbqnmnlm7rm488x58k4b5mw39qmkxl3i00v74h";
    inherit dependencies buildDependencies features;
  };
  log4rs_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log4rs";
    version = "0.8.0";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "08r9jxclsikdk7j9r26z7mrxjq4i0yprmbcal58bdib1b7b6j48r";
    inherit dependencies buildDependencies features;
  };
  mac_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mac";
    version = "0.1.1";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "17fq2w1q33swr37dvpdc50xiaslym2jak4jrix83a075kk18c8fm";
    inherit dependencies buildDependencies features;
  };
  markup5ever_0_7_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "markup5ever";
    version = "0.7.2";
    authors = [ "The html5ever Project Developers" ];
    sha256 = "120wgx76qy3a7vbzv2gg8wp0ghsh8wkch8qqa4qj5b542f5jxqx3";
    libPath = "lib.rs";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  matches_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "matches";
    version = "0.1.6";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "1zlrqlbvzxdil8z8ial2ihvxjwvlvg3g8dr0lcdpsjclkclasjan";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  md5_0_3_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "md5";
    version = "0.3.7";
    authors = [ "Ivan Ukhov <ivan.ukhov@gmail.com>" "Kamal Ahmad <shibe@openmailbox.org>" "Konstantin Stepanov <milezv@gmail.com>" "Lukas Kalbertodt <lukas.kalbertodt@gmail.com>" "Nathan Musoke <nathan.musoke@gmail.com>" "Tony Arcieri <bascule@gmail.com>" ];
    sha256 = "1ga55k7asxln553m89ccka2hnp5gkvacxl98r3nmx4d9mzvwn352";
    inherit dependencies buildDependencies features;
  };
  memchr_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "1.0.2";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0dfb8ifl9nrc9kzgd5z91q6qg87sh285q1ih7xgrsglmqfav9lg7";
    inherit dependencies buildDependencies features;
  };
  memchr_2_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "2.0.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0ls2y47rjwapjdax6bp974gdp06ggm1v8d1h69wyydmh1nhgm5gr";
    inherit dependencies buildDependencies features;
  };
  memoffset_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memoffset";
    version = "0.2.1";
    authors = [ "Gilad Naaman <gilad.naaman@gmail.com>" ];
    sha256 = "00vym01jk9slibq2nsiilgffp7n6k52a4q3n4dqp0xf5kzxvffcf";
    inherit dependencies buildDependencies features;
  };
  mime_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mime";
    version = "0.3.5";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "032y8q6h7yzmji1cznw04grbi0inbl1m6rcwgsqfwiw8gflcgy0l";
    inherit dependencies buildDependencies features;
  };
  mime_guess_2_0_0_alpha_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mime_guess";
    version = "2.0.0-alpha.4";
    authors = [ "Austin Bonander <austin.bonander@gmail.com>" ];
    sha256 = "1kz8j1hb4azgyzcs6bnrrygv0ykjp170llri0is031q01vi7fgnh";
    inherit dependencies buildDependencies features;
  };
  miniz_sys_0_1_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "miniz-sys";
    version = "0.1.10";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "11vg6phafxil87nbxgrlhcx5hjr3145wsbwwkfmibvnmzxfdmvln";
    libPath = "lib.rs";
    libName = "miniz_sys";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  mio_0_6_14_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mio";
    version = "0.6.14";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0zws9p0d734qps4wdv47d32mmpb85caf9l2arwhxc7pslqk4icap";
    inherit dependencies buildDependencies features;
  };
  mio_uds_0_6_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mio-uds";
    version = "0.6.4";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0migvjj2psaln6169rmyci5v6kvx5b7ylj5a6i2dkw98dylf2s1m";
    inherit dependencies buildDependencies features;
  };
  miow_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "miow";
    version = "0.2.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "14f8zkc6ix7mkyis1vsqnim8m29b6l55abkba3p2yz7j1ibcvrl0";
    inherit dependencies buildDependencies features;
  };
  native_tls_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "native-tls";
    version = "0.1.5";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "11f75qmbny5pnn6zp0vlvadrvc9ph9qsxiyn4n6q02xyd93pxxlf";
    inherit dependencies buildDependencies features;
  };
  net2_0_2_32_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "net2";
    version = "0.2.32";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "15q3il71qaqrwz8q1nz0jyw5q4fl0vrkajgaj909zradxsxv1mcq";
    inherit dependencies buildDependencies features;
  };
  nodrop_0_1_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nodrop";
    version = "0.1.12";
    authors = [ "bluss" ];
    sha256 = "1b9rxvdg8061gxjc239l9slndf0ds3m6fy2sf3gs8f9kknqgl49d";
    inherit dependencies buildDependencies features;
  };
  nom_3_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nom";
    version = "3.2.1";
    authors = [ "contact@geoffroycouprie.com" ];
    sha256 = "1vcllxrz9hdw6j25kn020ka3psz1vkaqh1hm3yfak2240zrxgi07";
    inherit dependencies buildDependencies features;
  };
  num_0_1_42_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num";
    version = "0.1.42";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1632gczzrmmxdsj3jignwcr793jq8vxw3qkdzpdvbip3vaf1ljgq";
    inherit dependencies buildDependencies features;
  };
  num_integer_0_1_36_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-integer";
    version = "0.1.36";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1fjprz9h8b04zrsnfmkkfhiw4w852bbh16hy8w9ahlcdhg77i66y";
    inherit dependencies buildDependencies features;
  };
  num_iter_0_1_35_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-iter";
    version = "0.1.35";
    authors = [ "The Rust Project Developers" ];
    sha256 = "12w49r9als1ihg6rc3qkj673vwi0bmh47pzy6x4samlb07w074mi";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_1_43_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.1.43";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1zdzx78vrcg3f39w94pqjs1mwxl1phyv7843hwgwkzggwcxhhf6s";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.2.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1k27bqbvpghrind428shhndgwyfr6mgldvm5ja63fgjvbyfa700q";
    inherit dependencies buildDependencies features;
  };
  num_cpus_1_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num_cpus";
    version = "1.8.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1y6qnd9r8ga6y8mvlabdrr73nc8cshjjlzbvnanzyj9b8zzkfwk2";
    inherit dependencies buildDependencies features;
  };
  openssl_0_9_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl";
    version = "0.9.24";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0wzm3c11g3ndaqyzq36mcdcm1q4a8pmsyi33ibybhjz28g2z0f79";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  openssl_sys_0_9_27_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl-sys";
    version = "0.9.27";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1bga1f4lw464j1qwc176y7h50b016fnx4z6dc7azdsvaxyh53sv9";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  ordered_float_0_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ordered-float";
    version = "0.5.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1ynkrk88ddzpfm42mnmzyzxzmgj32w5al0v3r6caqpdh188s3iaj";
    inherit dependencies buildDependencies features;
  };
  percent_encoding_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "percent-encoding";
    version = "1.0.1";
    authors = [ "The rust-url developers" ];
    sha256 = "04ahrp7aw4ip7fmadb0bknybmkfav0kk0gw4ps3ydq5w6hr0ib5i";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  phf_0_7_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf";
    version = "0.7.21";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "11m2rzm2s8s35m0s97gjxxb181xz352kjlhr387xj5c8q3qp5afg";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  phf_codegen_0_7_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf_codegen";
    version = "0.7.21";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0kgy8s2q4zr0iqcm21mgq4ppc45wy6z7b5wn98xyfsrcad6lwmmj";
    inherit dependencies buildDependencies features;
  };
  phf_generator_0_7_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf_generator";
    version = "0.7.21";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1jxjfzc6d6d4l9nv0r2bb66if5brk9lnncmg4dpjjifn6zhhqd9g";
    inherit dependencies buildDependencies features;
  };
  phf_shared_0_7_21_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf_shared";
    version = "0.7.21";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0lxpg3wgxfhzfalmf9ha9my1lsvfjy74ah9f6mfw88xlp545jlln";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  pkg_config_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pkg-config";
    version = "0.3.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "06k8fxgrsrxj8mjpjcq1n7mn2p1shpxif4zg9y5h09c7vy20s146";
    inherit dependencies buildDependencies features;
  };
  postgres_protocol_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "postgres-protocol";
    version = "0.3.2";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1gidwknw3nm1divj0l1y2iwccpmvv22181h4p1ghv3bgv90xnjad";
    inherit dependencies buildDependencies features;
  };
  postgres_shared_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "postgres-shared";
    version = "0.4.1";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "10yhq6ngadqlwqrkdcqpgvch02a5qykqwm4vdvgar50rvkf4wpza";
    inherit dependencies buildDependencies features;
  };
  pq_sys_0_4_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pq-sys";
    version = "0.4.4";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "1iqgs12mzx711ab1idiq4ryj27f8srwh83syj0ahvmbp5b8szggg";
    libName = "pq_sys";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  precomputed_hash_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "precomputed-hash";
    version = "0.1.1";
    authors = [ "Emilio Cobos Álvarez <emilio@crisal.io>" ];
    sha256 = "1x37xiarlc39772glsrbb9ic5cpaky4q0fi0ax42bwwrn4jfqgyj";
    inherit dependencies buildDependencies features;
  };
  proc_macro2_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro2";
    version = "0.2.3";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1y47qagi1r1f13b4b66xagr3dn9hjlvba7i6f5mcb77qhkn8yg9c";
    inherit dependencies buildDependencies features;
  };
  procedural_masquerade_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "procedural-masquerade";
    version = "0.1.5";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "1mhgi89g2168wv2bpjlah31lzmjc7iigfc08a6c5pip5l0hc2z21";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  quick_error_1_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quick-error";
    version = "1.2.1";
    authors = [ "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" ];
    sha256 = "0vq41csw68ynaq2fy5dvldh4lx7pnbw6pr332kv5rvrz4pz0jnq6";
    inherit dependencies buildDependencies features;
  };
  quote_0_3_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.3.15";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "09il61jv4kd1360spaj46qwyl21fv1qz18fsv2jra8wdnlgl5jsg";
    inherit dependencies buildDependencies features;
  };
  quote_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0rzka356p113f9hdcdc8ha78qar3qd6jpap9wnf5dza9hfs2k4bc";
    inherit dependencies buildDependencies features;
  };
  r2d2_0_8_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "r2d2";
    version = "0.8.2";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1m8cvw9gpc5r922alyha2qq9nl79q3ldsjk1qwax36zrca0akvdi";
    inherit dependencies buildDependencies features;
  };
  r2d2_diesel_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "r2d2-diesel";
    version = "1.0.0";
    authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "0mq73lzxhn08n5ra7lvdjxrhx4qwb7f1a3vqmz2zwijlyir1yphf";
    inherit dependencies buildDependencies features;
  };
  rand_0_3_22_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.3.22";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0wrj12acx7l4hr7ag3nz8b50yhp8ancyq988bzmnnsxln67rsys0";
    inherit dependencies buildDependencies features;
  };
  rand_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.4.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0h8pkg23wb67i8904sm76iyr1jlmhklb85vbpz9c9191a24xzkfm";
    inherit dependencies buildDependencies features;
  };
  rayon_0_8_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rayon";
    version = "0.8.2";
    authors = [ "Niko Matsakis <niko@alum.mit.edu>" "Josh Stone <cuviper@gmail.com>" ];
    sha256 = "0d0mddg1k75hb9138pn8lysy2095jijrinskqbpgfr73s0jx6dq8";
    inherit dependencies buildDependencies features;
  };
  rayon_core_1_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rayon-core";
    version = "1.4.0";
    authors = [ "Niko Matsakis <niko@alum.mit.edu>" "Josh Stone <cuviper@gmail.com>" ];
    sha256 = "1gmg5fmgvhzks7b05g3ms7x8h1xxqnfkg28wvhzwpdzjljcbnr23";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_37_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.37";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "0qa0jl9cr3qp80an8vshp2mcn8rzvwiavs1398hq1vsjw7pc3h2v";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  regex_0_2_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "0.2.9";
    authors = [ "The Rust Project Developers" ];
    sha256 = "09kwp9s6dyclcq09x9rsk5a1525zzgdf8xkn41b4z0klx276ap1y";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_5_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.5.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "03c105s0nd1yjbinrgp92z52g34ahp960fy4n2acxwy2jgvrm62f";
    inherit dependencies buildDependencies features;
  };
  relay_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "relay";
    version = "0.1.1";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "16csfaslbmj25iaxs88p8wcfh2zfpkh9isg9adid0nxjxvknh07r";
    inherit dependencies buildDependencies features;
  };
  remove_dir_all_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "remove_dir_all";
    version = "0.3.0";
    authors = [ "Aaronepower <theaaronepower@gmail.com>" ];
    sha256 = "1m9n4fh3ivadmdvmr5q0la19r6xi56q9r48vc3vv27p1w0z5hy7n";
    inherit dependencies buildDependencies features;
  };
  reqwest_0_8_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "reqwest";
    version = "0.8.5";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1wrrv3kwh0pm5yzajf986z21pyf48vxskvn7pflzhrm9y11kalnf";
    inherit dependencies buildDependencies features;
  };
  ring_0_12_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ring";
    version = "0.12.1";
    authors = [ "Brian Smith <brian@briansmith.org>" ];
    sha256 = "1i47apwkpa0wz9fwp4iqf0xks95b9nmhhlgvk5fsgbg0aphhw0p7";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  rusoto_core_0_32_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rusoto_core";
    version = "0.32.0";
    authors = [ "Anthony DiMarco <ocramida@gmail.com>" "Jimmy Cuadra <jimmy@jimmycuadra.com>" "Matthew Mayer <matthewkmayer@gmail.com>" "Nikita Pekin <contact@nikitapek.in>" ];
    sha256 = "1bgpzz25p2is49j0inb908q3a03dhxa18ibxn6297x0nwprc1ava";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  rusoto_credential_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rusoto_credential";
    version = "0.11.0";
    authors = [ "Anthony DiMarco <ocramida@gmail.com>" "Jimmy Cuadra <jimmy@jimmycuadra.com>" "Matthew Mayer <matthewkmayer@gmail.com>" "Nikita Pekin <contact@nikitapek.in>" ];
    sha256 = "0mdgwnz8vmsf1pmbkalbbv7ggdck8lvkbilpxnxd1bmgjvc344ha";
    inherit dependencies buildDependencies features;
  };
  rusoto_s3_0_32_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rusoto_s3";
    version = "0.32.0";
    authors = [ "Anthony DiMarco <ocramida@gmail.com>" "Jimmy Cuadra <jimmy@jimmycuadra.com>" "Matthew Mayer <matthewkmayer@gmail.com>" "Nikita Pekin <contact@nikitapek.in>" ];
    sha256 = "1nhmg1hvd6d70d9cap32yh136xjf40z11xz8dyh06vrpx9b11lka";
    inherit dependencies buildDependencies features;
  };
  rustc_demangle_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-demangle";
    version = "0.1.7";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0wrln6jvwmqrhyvqlw5vq9a2s4r04ja8mrybxjj9aaaar1fyvns6";
    inherit dependencies buildDependencies features;
  };
  rustc_version_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc_version";
    version = "0.2.2";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "0riklqahq81d5jay5426cqqpm8shrzr1g4s896kx8xcx9l60d3p6";
    inherit dependencies buildDependencies features;
  };
  safemem_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "safemem";
    version = "0.2.0";
    authors = [ "Austin Bonander <austin.bonander@gmail.com>" ];
    sha256 = "058m251q202n479ip1h6s91yw3plg66vsk5mpaflssn6rs5hijdm";
    inherit dependencies buildDependencies features;
  };
  schannel_0_1_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "schannel";
    version = "0.1.11";
    authors = [ "Steven Fackler <sfackler@gmail.com>" "Steffen Butzer <steffen.butzer@outlook.com>" ];
    sha256 = "0a55193kk3a5sm4blwll745lyzl7cyrc8yf8ysd9s6rmd4yryppw";
    inherit dependencies buildDependencies features;
  };
  scheduled_thread_pool_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scheduled-thread-pool";
    version = "0.2.0";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0x8jxh3l4irj5hm7rwfwmfd0iazcpvcfvnqbsngrrn3dmzpy0ig9";
    inherit dependencies buildDependencies features;
  };
  scoped_tls_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scoped-tls";
    version = "0.1.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1csp1bp0cc1hvdk0ml293zqjpblh7254cd88q22yx63xmszj1dh4";
    inherit dependencies buildDependencies features;
  };
  scopeguard_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scopeguard";
    version = "0.3.3";
    authors = [ "bluss" ];
    sha256 = "0i1l013csrqzfz6c68pr5pi01hg5v5yahq8fsdmaxy6p8ygsjf3r";
    inherit dependencies buildDependencies features;
  };
  security_framework_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "security-framework";
    version = "0.1.16";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1kxczsaj8gz4922jl5af2gkxh71rasb6khaf3dp7ldlnw9qf2sbm";
    inherit dependencies buildDependencies features;
  };
  security_framework_sys_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "security-framework-sys";
    version = "0.1.16";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0ai2pivdr5fyc7czbkpcrwap0imyy0r8ndarrl3n5kiv0jha1js3";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  selectors_0_19_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "selectors";
    version = "0.19.0";
    authors = [ "The Servo Project Developers" ];
    sha256 = "1gl11j836yqrzldn9ld4vz5bcyishcslnnbhk39d5mksb1mmkbnw";
    libPath = "lib.rs";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  semver_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "semver";
    version = "0.9.0";
    authors = [ "Steve Klabnik <steve@steveklabnik.com>" "The Rust Project Developers" ];
    sha256 = "0azak2lb2wc36s3x15az886kck7rpnksrw14lalm157rg9sc9z63";
    inherit dependencies buildDependencies features;
  };
  semver_parser_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "semver-parser";
    version = "0.7.0";
    authors = [ "Steve Klabnik <steve@steveklabnik.com>" ];
    sha256 = "1da66c8413yakx0y15k8c055yna5lyb6fr0fw9318kdwkrk5k12h";
    inherit dependencies buildDependencies features;
  };
  serde_1_0_32_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde";
    version = "1.0.32";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "135dnk4wnij5445yjxsajrahc4dfd9ippmj3w2yacj85wlm6b2yk";
    inherit dependencies buildDependencies features;
  };
  serde_value_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde-value";
    version = "0.5.1";
    authors = [ "arcnmx" ];
    sha256 = "1milqg05bkd2dqn09a3m8scw7fzsca1k4a1nmkai5y55jqjp086l";
    inherit dependencies buildDependencies features;
  };
  serde_derive_1_0_32_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive";
    version = "1.0.32";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1jkrdshi71y56s9vw3gr9n3g3dlk83jiji20i2mlis5261hanr5j";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  serde_derive_internals_0_20_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive_internals";
    version = "0.20.1";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "11hifbcmh0x27pw0kl3ibmpqm3h4myl3gcsxi3mnpx91nlfb2aqi";
    inherit dependencies buildDependencies features;
  };
  serde_json_1_0_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_json";
    version = "1.0.11";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0dmzywhac86rl3fdl2fp464n77flmz29gfrmfga6iawsdw4qd2kr";
    inherit dependencies buildDependencies features;
  };
  serde_urlencoded_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_urlencoded";
    version = "0.5.1";
    authors = [ "Anthony Ramine <n.oxyde@gmail.com>" ];
    sha256 = "0zh2wlnapmcwqhxnnq1mdlmg8vily7j54wvj01s7cvapzg5jphdl";
    inherit dependencies buildDependencies features;
  };
  serde_yaml_0_7_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_yaml";
    version = "0.7.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1nxfrin7m6hip0mv5kw01wdwry4wx651kknxj02baya985k9hgrs";
    inherit dependencies buildDependencies features;
  };
  server_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "server";
    version = "0.1.0";
    authors = [ "Jeff Larson <thejefflarson@gmail.com>" ];
    src = ../backend/server;
    inherit dependencies buildDependencies features;
  };
  servo_arc_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "servo_arc";
    version = "0.1.1";
    authors = [ "The Servo Project Developers" ];
    sha256 = "0c01b1fpdbpaij4k3h1jhlr01bsmjm6p6ls8qbrnid1rk5svs5dq";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  sha2_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "sha2";
    version = "0.7.0";
    authors = [ "RustCrypto Developers" ];
    sha256 = "1hfsxixpbcmxzh61xqk67f7xpxgqdvx2iz964h2ahdcmhn6ccfkv";
    inherit dependencies buildDependencies features;
  };
  siphasher_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "siphasher";
    version = "0.2.2";
    authors = [ "Frank Denis <github@pureftpd.org>" ];
    sha256 = "0iyx7nlzfny9ly1634a6zcq0yvrinhxhypwas4p8ry3zqnn76qqr";
    inherit dependencies buildDependencies features;
  };
  slab_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "slab";
    version = "0.3.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0y6lhjggksh57hyfd3l6p9wgv5nhvw9c6djrysq7jnalz8fih21k";
    inherit dependencies buildDependencies features;
  };
  slab_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "slab";
    version = "0.4.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "1qy2vkgwqgj5z4ygdkh040n9yh1vz80v5flxb1xrvw3i4wxs7yx0";
    inherit dependencies buildDependencies features;
  };
  smallvec_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "smallvec";
    version = "0.2.1";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "0rnsll9af52bpjngz0067dpm1ndqmh76i64a58fc118l4lvnjxw2";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  smallvec_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "smallvec";
    version = "0.6.0";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "1k75p20zzdm6r5ka55dmiywpb6wr6p87gr6ha6p2s73mycmjc4ln";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  stable_deref_trait_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "stable_deref_trait";
    version = "1.0.0";
    authors = [ "Robert Grosse <n210241048576@gmail.com>" ];
    sha256 = "0ya5fms9qdwkd52d3a111w4vcz18j4rbfx4p88z44116cqd6cczr";
    inherit dependencies buildDependencies features;
  };
  string_cache_0_7_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "string_cache";
    version = "0.7.1";
    authors = [ "The Servo Project Developers" ];
    sha256 = "0gkd2jqf0g1bknf9ladnn702vnf0z36s247psmska6nnbdbd4iqr";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  string_cache_codegen_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "string_cache_codegen";
    version = "0.4.0";
    authors = [ "The Servo Project Developers" ];
    sha256 = "0wjf6mqppz3yw7sqm29jh7bi4pglrfzbpvpw65cfgs02ip4x0np1";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  string_cache_shared_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "string_cache_shared";
    version = "0.3.0";
    authors = [ "The Servo Project Developers" ];
    sha256 = "0yc59f5npg4ip56aha03yzc7nxgl7c31hv6kq7zrx7rvs3h1cb8j";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  stringprep_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "stringprep";
    version = "0.1.2";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "19spyjb44j3iv3x3a22cf70w1m847six5d9gkfaxmjbxcv3ynn8j";
    inherit dependencies buildDependencies features;
  };
  strsim_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strsim";
    version = "0.6.0";
    authors = [ "Danny Guo <dannyguo91@gmail.com>" ];
    sha256 = "1lz85l6y68hr62lv4baww29yy7g8pg20dlr0lbaswxmmcb0wl7gd";
    inherit dependencies buildDependencies features;
  };
  syn_0_11_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.11.11";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0yw8ng7x1dn5a6ykg0ib49y7r9nhzgpiq2989rqdp7rdz3n85502";
    inherit dependencies buildDependencies features;
  };
  syn_0_12_14_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.12.14";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1f4d8zy31yan86lq6k54x0s2fn2ad7wkm68d6k0hwx1jfq5inshc";
    inherit dependencies buildDependencies features;
  };
  synom_0_11_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "synom";
    version = "0.11.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1l6d1s9qjfp6ng2s2z8219igvlv7gyk8gby97sdykqc1r93d8rhc";
    inherit dependencies buildDependencies features;
  };
  take_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "take";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "17rfh39di5n8w9aghpic2r94cndi3dr04l60nkjylmxfxr3iwlhd";
    inherit dependencies buildDependencies features;
  };
  tempdir_0_3_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempdir";
    version = "0.3.6";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1gp7r78p1wianwph2c6hjfrm3npkrsv2yabfri70a9w7q6j53x82";
    inherit dependencies buildDependencies features;
  };
  tendril_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tendril";
    version = "0.4.0";
    authors = [ "Keegan McAllister <mcallister.keegan@gmail.com>" "Simon Sapin <simon.sapin@exyr.org>" "Chris Morgan <me@chrismorgan.info>" ];
    sha256 = "052h12p551mjc8m733ipqpsvhffp3049qn5032fkibbrylng5mis";
    inherit dependencies buildDependencies features;
  };
  thread_local_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread_local";
    version = "0.3.5";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0mkp0sp91aqsk7brgygai4igv751r1754rsxn37mig3ag5rx8np6";
    inherit dependencies buildDependencies features;
  };
  time_0_1_39_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "time";
    version = "0.1.39";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1ryy3bwhvyzj6fym123il38mk9ranm4vradj2a47l5ij8jd7w5if";
    inherit dependencies buildDependencies features;
  };
  tokio_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio";
    version = "0.1.3";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "1lyz3gsl763kicirjw4mq8ks4h2h58pfdgn2xn2ni1njnfnas1s6";
    inherit dependencies buildDependencies features;
  };
  tokio_core_0_1_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-core";
    version = "0.1.15";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0yvcyc7264a8qs1s9a1p4hpfmkvwy4n2yng0zzdwvdi5wxvvza5h";
    inherit dependencies buildDependencies features;
  };
  tokio_dns_unofficial_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-dns-unofficial";
    version = "0.1.1";
    authors = [ "Simon Bernier St-Pierre <sbernierstpierre@gmail.com>" ];
    sha256 = "0mflz0sb6m0rgas7vcpswgs0agc8832cwcvfaw294sy9frd9aqz3";
    libPath = "src/lib.rs";
    libName = "tokio_dns";
    inherit dependencies buildDependencies features;
  };
  tokio_executor_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-executor";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "05i1yk3paaj5x506ynk4a84nqidjxb25a6l0ppkadi9kyzklwd27";
    inherit dependencies buildDependencies features;
  };
  tokio_io_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-io";
    version = "0.1.6";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0awvw1cfylws2lqdls615hcnrz7x7krr7gm57bgj55xai14rmk9k";
    inherit dependencies buildDependencies features;
  };
  tokio_postgres_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-postgres";
    version = "0.3.0";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1wl7brg1paza6pgj9zxjiwrmjxfpsmi240a5wnkjn7yf2g78ba19";
    inherit dependencies buildDependencies features;
  };
  tokio_proto_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-proto";
    version = "0.1.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "030q9h8pn1ngm80klff5irglxxki60hf5maw0mppmmr46k773z66";
    inherit dependencies buildDependencies features;
  };
  tokio_reactor_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-reactor";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0hmxvr2mrbs7pyjdddy6l0phk801giskrqg6k27qyyjv9jnr0f9p";
    inherit dependencies buildDependencies features;
  };
  tokio_service_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-service";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0c85wm5qz9fabg0k6k763j89m43n6max72d3a8sxcs940id6qmih";
    inherit dependencies buildDependencies features;
  };
  tokio_threadpool_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-threadpool";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "09wcb8llry4xmbxnwynfqzmx5wc0gg2rwxwqc82qws7pf8m9xais";
    inherit dependencies buildDependencies features;
  };
  tokio_timer_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-timer";
    version = "0.1.2";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0ngmxv7dzzkbs9bs39wzx11527hanpjdlyvi6gdxzi9q41q0kz7y";
    inherit dependencies buildDependencies features;
  };
  tokio_tls_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-tls";
    version = "0.1.4";
    authors = [ "Carl Lerche <me@carllerche.com>" "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "07rwv3q6jbg65ln1ahzb4g648l8lcn4hvc0ax3r12bnsi1py7agp";
    inherit dependencies buildDependencies features;
  };
  tokio_uds_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-uds";
    version = "0.1.7";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "08z1534hxdrc78d21k8qszcv7iw16hppbak1yg5m20rsdd75dbbs";
    inherit dependencies buildDependencies features;
  };
  tools_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tools";
    version = "0.1.0";
    authors = [ "Jeff Larson <thejefflarson@gmail.com>" ];
    src = ../backend/tools;
    inherit dependencies buildDependencies features;
  };
  traitobject_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "traitobject";
    version = "0.1.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "10hi8pl361l539g4kg74mcrhn7grmwlar4jl528ddn2z2jvb7lw3";
    inherit dependencies buildDependencies features;
  };
  typemap_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "typemap";
    version = "0.3.3";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1whvpcq2slamy310z5hd3hl214v91sdxmd9avlqa1bn3l258svkx";
    inherit dependencies buildDependencies features;
  };
  typenum_1_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "typenum";
    version = "1.10.0";
    authors = [ "Paho Lurie-Gregg <paho@paholg.com>" "Andre Bogus <bogusandre@gmail.com>" ];
    sha256 = "1v2cgg0mlzkg5prs7swysckgk2ay6bpda8m83c2sn3z77dcsx3bc";
    build = "build/main.rs";
    inherit dependencies buildDependencies features;
  };
  ucd_util_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ucd-util";
    version = "0.1.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "02a8h3siipx52b832xc8m8rwasj6nx9jpiwfldw8hp6k205hgkn0";
    inherit dependencies buildDependencies features;
  };
  unicase_1_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicase";
    version = "1.4.2";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "0rbnhw2mnhcwrij3vczp0sl8zdfmvf2dlh8hly81kj7132kfj0mf";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  unicase_2_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicase";
    version = "2.1.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1zzn16hh8fdx5pnbbnl32q8m2mh4vpd1jm9pdcv969ik83dw4byp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  unicode_bidi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-bidi";
    version = "0.3.4";
    authors = [ "The Servo Project Developers" ];
    sha256 = "0lcd6jasrf8p9p0q20qyf10c6xhvw40m2c4rr105hbk6zy26nj1q";
    libName = "unicode_bidi";
    inherit dependencies buildDependencies features;
  };
  unicode_normalization_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-normalization";
    version = "0.1.5";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "0hg29g86fca7b65mwk4sm5s838js6bqrl0gabadbazvbsgjam0j5";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.0.4";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "1dc8wkkcd3s6534s5aw4lbjn8m67flkkbnajp5bl8408wdg8rh9v";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.1.0";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
    inherit dependencies buildDependencies features;
  };
  unreachable_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unreachable";
    version = "0.1.1";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "12nkmw2a491xwrn6shpbfbd648srhcfnaqy2hhw5mqrzpz7rdqmb";
    inherit dependencies buildDependencies features;
  };
  unreachable_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unreachable";
    version = "1.0.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
    inherit dependencies buildDependencies features;
  };
  unsafe_any_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unsafe-any";
    version = "0.4.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1zcvx5s71fbx4l691bg770g9yx947b8mmp4yf0mczcric07sh44s";
    inherit dependencies buildDependencies features;
  };
  untrusted_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "untrusted";
    version = "0.5.1";
    authors = [ "Brian Smith <brian@briansmith.org>" ];
    sha256 = "10nbd2nd9asx0v2g59i188rbpclh2xjaj10cjmp8h8a7in4i9pvd";
    inherit dependencies buildDependencies features;
  };
  url_1_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "url";
    version = "1.7.0";
    authors = [ "The rust-url developers" ];
    sha256 = "0333ynhkp47hna88aamz1zpk4lxyzx4ab9n7yhc75g14w27cv8jj";
    inherit dependencies buildDependencies features;
  };
  utf_8_0_7_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf-8";
    version = "0.7.2";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "07miz76fs4qg6ypdhwik0xc41jjnzg0bnz8ij6bzl4hp5dy1mnbb";
    libName = "utf8";
    inherit dependencies buildDependencies features;
  };
  utf8_ranges_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8-ranges";
    version = "1.0.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0rzmqprwjv9yp1n0qqgahgm24872x6c0xddfym5pfndy7a36vkn0";
    inherit dependencies buildDependencies features;
  };
  uuid_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "uuid";
    version = "0.5.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "17d4csjmy7fa3ckrm40d3c3v411rw5d4400w756mcrzyw2pm1i2r";
    inherit dependencies buildDependencies features;
  };
  vcpkg_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vcpkg";
    version = "0.2.2";
    authors = [ "Jim McGrath <jimmc2@gmail.com>" ];
    sha256 = "1fl5j0ksnwrnsrf1b1a9lqbjgnajdipq0030vsbhx81mb7d9478a";
    inherit dependencies buildDependencies features;
  };
  version_check_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "version_check";
    version = "0.1.3";
    authors = [ "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "0z635wdclv9bvafj11fpgndn7y79ibpsnc364pm61i1m4wwg8msg";
    inherit dependencies buildDependencies features;
  };
  void_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "void";
    version = "1.0.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.3.4";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1qbrf5dcnd8j36cawby5d9r5vx07r0l4ryf672pfncnp8895k9lx";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  winapi_i686_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_x86_64_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  ws2_32_sys_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ws2_32-sys";
    version = "0.2.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1zpy9d9wk11sj17fczfngcj28w4xxjs3b4n036yzpy38dxp4f7kc";
    libName = "ws2_32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  xml_rs_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "xml-rs";
    version = "0.7.0";
    authors = [ "Vladimir Matveev <vladimir.matweev@gmail.com>" ];
    sha256 = "12rynhqjgkg2hzy9x1d1232p9d9jm40bc3by5yzjv8gx089mflyb";
    libPath = "src/lib.rs";
    libName = "xml";
    crateBin = [ {  name = "xml-analyze";  path = "src/analyze.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  yaml_rust_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "yaml-rust";
    version = "0.4.0";
    authors = [ "Yuheng Chen <yuhengchen@sensetime.com>" ];
    sha256 = "1mqv1jagn9hfym28ypp2dq6hw9kcyilzil9ydlpls0ivb8d9i3h8";
    inherit dependencies buildDependencies features;
  };
  adler32_1_0_2 = { features?(adler32_1_0_2_features {}) }: adler32_1_0_2_ {};
  adler32_1_0_2_features = f: updateFeatures f (rec {
    adler32_1_0_2.default = (f.adler32_1_0_2.default or true);
  }) [];
  aho_corasick_0_6_4 = { features?(aho_corasick_0_6_4_features {}) }: aho_corasick_0_6_4_ {
    dependencies = mapFeatures features ([ memchr_2_0_1 ]);
  };
  aho_corasick_0_6_4_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = (f.aho_corasick_0_6_4.default or true);
    memchr_2_0_1.default = true;
  }) [ memchr_2_0_1_features ];
  antidote_1_0_0 = { features?(antidote_1_0_0_features {}) }: antidote_1_0_0_ {};
  antidote_1_0_0_features = f: updateFeatures f (rec {
    antidote_1_0_0.default = (f.antidote_1_0_0.default or true);
  }) [];
  arrayref_0_3_4 = { features?(arrayref_0_3_4_features {}) }: arrayref_0_3_4_ {};
  arrayref_0_3_4_features = f: updateFeatures f (rec {
    arrayref_0_3_4.default = (f.arrayref_0_3_4.default or true);
  }) [];
  arrayvec_0_4_7 = { features?(arrayvec_0_4_7_features {}) }: arrayvec_0_4_7_ {
    dependencies = mapFeatures features ([ nodrop_0_1_12 ]);
    features = mkFeatures (features.arrayvec_0_4_7 or {});
  };
  arrayvec_0_4_7_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or true);
    arrayvec_0_4_7.serde =
      (f.arrayvec_0_4_7.serde or false) ||
      (f.arrayvec_0_4_7.serde-1 or false) ||
      (arrayvec_0_4_7.serde-1 or false);
    arrayvec_0_4_7.std =
      (f.arrayvec_0_4_7.std or false) ||
      (f.arrayvec_0_4_7.default or false) ||
      (arrayvec_0_4_7.default or false);
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or false);
  }) [ nodrop_0_1_12_features ];
  backtrace_0_3_5 = { features?(backtrace_0_3_5_features {}) }: backtrace_0_3_5_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 rustc_demangle_0_1_7 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "fuchsia") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_5.backtrace-sys or false then [ backtrace_sys_0_1_16 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_39 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_5.winapi or false then [ winapi_0_3_4 ] else [])) else []);
    features = mkFeatures (features.backtrace_0_3_5 or {});
  };
  backtrace_0_3_5_features = f: updateFeatures f (rec {
    backtrace_0_3_5.addr2line =
      (f.backtrace_0_3_5.addr2line or false) ||
      (f.backtrace_0_3_5.gimli-symbolize or false) ||
      (backtrace_0_3_5.gimli-symbolize or false);
    backtrace_0_3_5.backtrace-sys =
      (f.backtrace_0_3_5.backtrace-sys or false) ||
      (f.backtrace_0_3_5.libbacktrace or false) ||
      (backtrace_0_3_5.libbacktrace or false);
    backtrace_0_3_5.coresymbolication =
      (f.backtrace_0_3_5.coresymbolication or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.dbghelp =
      (f.backtrace_0_3_5.dbghelp or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.default = (f.backtrace_0_3_5.default or true);
    backtrace_0_3_5.dladdr =
      (f.backtrace_0_3_5.dladdr or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.findshlibs =
      (f.backtrace_0_3_5.findshlibs or false) ||
      (f.backtrace_0_3_5.gimli-symbolize or false) ||
      (backtrace_0_3_5.gimli-symbolize or false);
    backtrace_0_3_5.libbacktrace =
      (f.backtrace_0_3_5.libbacktrace or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.libunwind =
      (f.backtrace_0_3_5.libunwind or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.rustc-serialize =
      (f.backtrace_0_3_5.rustc-serialize or false) ||
      (f.backtrace_0_3_5.serialize-rustc or false) ||
      (backtrace_0_3_5.serialize-rustc or false);
    backtrace_0_3_5.serde =
      (f.backtrace_0_3_5.serde or false) ||
      (f.backtrace_0_3_5.serialize-serde or false) ||
      (backtrace_0_3_5.serialize-serde or false);
    backtrace_0_3_5.serde_derive =
      (f.backtrace_0_3_5.serde_derive or false) ||
      (f.backtrace_0_3_5.serialize-serde or false) ||
      (backtrace_0_3_5.serialize-serde or false);
    backtrace_0_3_5.winapi =
      (f.backtrace_0_3_5.winapi or false) ||
      (f.backtrace_0_3_5.dbghelp or false) ||
      (backtrace_0_3_5.dbghelp or false);
    backtrace_sys_0_1_16.default = true;
    cfg_if_0_1_2.default = true;
    libc_0_2_39.default = true;
    rustc_demangle_0_1_7.default = true;
    winapi_0_3_4.dbghelp = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processthreadsapi = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.winnt = true;
  }) [ cfg_if_0_1_2_features rustc_demangle_0_1_7_features backtrace_sys_0_1_16_features libc_0_2_39_features winapi_0_3_4_features ];
  backtrace_sys_0_1_16 = { features?(backtrace_sys_0_1_16_features {}) }: backtrace_sys_0_1_16_ {
    dependencies = mapFeatures features ([ libc_0_2_39 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_7 ]);
  };
  backtrace_sys_0_1_16_features = f: updateFeatures f (rec {
    backtrace_sys_0_1_16.default = (f.backtrace_sys_0_1_16.default or true);
    cc_1_0_7.default = true;
    libc_0_2_39.default = true;
  }) [ libc_0_2_39_features cc_1_0_7_features ];
  base64_0_6_0 = { features?(base64_0_6_0_features {}) }: base64_0_6_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_1 safemem_0_2_0 ]);
  };
  base64_0_6_0_features = f: updateFeatures f (rec {
    base64_0_6_0.default = (f.base64_0_6_0.default or true);
    byteorder_1_2_1.default = true;
    safemem_0_2_0.default = true;
  }) [ byteorder_1_2_1_features safemem_0_2_0_features ];
  base64_0_8_0 = { features?(base64_0_8_0_features {}) }: base64_0_8_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_1 safemem_0_2_0 ]);
  };
  base64_0_8_0_features = f: updateFeatures f (rec {
    base64_0_8_0.default = (f.base64_0_8_0.default or true);
    byteorder_1_2_1.default = true;
    safemem_0_2_0.default = true;
  }) [ byteorder_1_2_1_features safemem_0_2_0_features ];
  base64_0_9_0 = { features?(base64_0_9_0_features {}) }: base64_0_9_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_1 safemem_0_2_0 ]);
  };
  base64_0_9_0_features = f: updateFeatures f (rec {
    base64_0_9_0.default = (f.base64_0_9_0.default or true);
    byteorder_1_2_1.default = true;
    safemem_0_2_0.default = true;
  }) [ byteorder_1_2_1_features safemem_0_2_0_features ];
  bitflags_0_9_1 = { features?(bitflags_0_9_1_features {}) }: bitflags_0_9_1_ {
    features = mkFeatures (features.bitflags_0_9_1 or {});
  };
  bitflags_0_9_1_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = (f.bitflags_0_9_1.default or true);
    bitflags_0_9_1.example_generated =
      (f.bitflags_0_9_1.example_generated or false) ||
      (f.bitflags_0_9_1.default or false) ||
      (bitflags_0_9_1.default or false);
  }) [];
  bitflags_1_0_1 = { features?(bitflags_1_0_1_features {}) }: bitflags_1_0_1_ {
    features = mkFeatures (features.bitflags_1_0_1 or {});
  };
  bitflags_1_0_1_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = (f.bitflags_1_0_1.default or true);
    bitflags_1_0_1.example_generated =
      (f.bitflags_1_0_1.example_generated or false) ||
      (f.bitflags_1_0_1.default or false) ||
      (bitflags_1_0_1.default or false);
  }) [];
  block_buffer_0_3_3 = { features?(block_buffer_0_3_3_features {}) }: block_buffer_0_3_3_ {
    dependencies = mapFeatures features ([ arrayref_0_3_4 byte_tools_0_2_0 ]);
  };
  block_buffer_0_3_3_features = f: updateFeatures f (rec {
    arrayref_0_3_4.default = true;
    block_buffer_0_3_3.default = (f.block_buffer_0_3_3.default or true);
    byte_tools_0_2_0.default = true;
  }) [ arrayref_0_3_4_features byte_tools_0_2_0_features ];
  build_const_0_2_0 = { features?(build_const_0_2_0_features {}) }: build_const_0_2_0_ {
    features = mkFeatures (features.build_const_0_2_0 or {});
  };
  build_const_0_2_0_features = f: updateFeatures f (rec {
    build_const_0_2_0.default = (f.build_const_0_2_0.default or true);
    build_const_0_2_0.std =
      (f.build_const_0_2_0.std or false) ||
      (f.build_const_0_2_0.default or false) ||
      (build_const_0_2_0.default or false);
  }) [];
  byte_tools_0_2_0 = { features?(byte_tools_0_2_0_features {}) }: byte_tools_0_2_0_ {};
  byte_tools_0_2_0_features = f: updateFeatures f (rec {
    byte_tools_0_2_0.default = (f.byte_tools_0_2_0.default or true);
  }) [];
  byteorder_1_2_1 = { features?(byteorder_1_2_1_features {}) }: byteorder_1_2_1_ {
    features = mkFeatures (features.byteorder_1_2_1 or {});
  };
  byteorder_1_2_1_features = f: updateFeatures f (rec {
    byteorder_1_2_1.default = (f.byteorder_1_2_1.default or true);
    byteorder_1_2_1.std =
      (f.byteorder_1_2_1.std or false) ||
      (f.byteorder_1_2_1.default or false) ||
      (byteorder_1_2_1.default or false);
  }) [];
  bytes_0_4_6 = { features?(bytes_0_4_6_features {}) }: bytes_0_4_6_ {
    dependencies = mapFeatures features ([ byteorder_1_2_1 iovec_0_1_2 ]);
  };
  bytes_0_4_6_features = f: updateFeatures f (rec {
    byteorder_1_2_1.default = true;
    bytes_0_4_6.default = (f.bytes_0_4_6.default or true);
    iovec_0_1_2.default = true;
  }) [ byteorder_1_2_1_features iovec_0_1_2_features ];
  cc_1_0_7 = { features?(cc_1_0_7_features {}) }: cc_1_0_7_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.cc_1_0_7 or {});
  };
  cc_1_0_7_features = f: updateFeatures f (rec {
    cc_1_0_7.default = (f.cc_1_0_7.default or true);
    cc_1_0_7.rayon =
      (f.cc_1_0_7.rayon or false) ||
      (f.cc_1_0_7.parallel or false) ||
      (cc_1_0_7.parallel or false);
  }) [];
  cfg_if_0_1_2 = { features?(cfg_if_0_1_2_features {}) }: cfg_if_0_1_2_ {};
  cfg_if_0_1_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = (f.cfg_if_0_1_2.default or true);
  }) [];
  chrono_0_4_0 = { features?(chrono_0_4_0_features {}) }: chrono_0_4_0_ {
    dependencies = mapFeatures features ([ num_0_1_42 time_0_1_39 ]
      ++ (if features.chrono_0_4_0.serde or false then [ serde_1_0_32 ] else []));
    features = mkFeatures (features.chrono_0_4_0 or {});
  };
  chrono_0_4_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = (f.chrono_0_4_0.default or true);
    num_0_1_42.default = (f.num_0_1_42.default or false);
    serde_1_0_32.default = true;
    time_0_1_39.default = true;
  }) [ num_0_1_42_features serde_1_0_32_features time_0_1_39_features ];
  constant_time_eq_0_1_3 = { features?(constant_time_eq_0_1_3_features {}) }: constant_time_eq_0_1_3_ {};
  constant_time_eq_0_1_3_features = f: updateFeatures f (rec {
    constant_time_eq_0_1_3.default = (f.constant_time_eq_0_1_3.default or true);
  }) [];
  core_foundation_0_2_3 = { features?(core_foundation_0_2_3_features {}) }: core_foundation_0_2_3_ {
    dependencies = mapFeatures features ([ core_foundation_sys_0_2_3 libc_0_2_39 ]);
  };
  core_foundation_0_2_3_features = f: updateFeatures f (rec {
    core_foundation_0_2_3.default = (f.core_foundation_0_2_3.default or true);
    core_foundation_sys_0_2_3.default = true;
    libc_0_2_39.default = true;
  }) [ core_foundation_sys_0_2_3_features libc_0_2_39_features ];
  core_foundation_sys_0_2_3 = { features?(core_foundation_sys_0_2_3_features {}) }: core_foundation_sys_0_2_3_ {
    dependencies = mapFeatures features ([ libc_0_2_39 ]);
  };
  core_foundation_sys_0_2_3_features = f: updateFeatures f (rec {
    core_foundation_sys_0_2_3.default = (f.core_foundation_sys_0_2_3.default or true);
    libc_0_2_39.default = true;
  }) [ libc_0_2_39_features ];
  crc_1_7_0 = { features?(crc_1_7_0_features {}) }: crc_1_7_0_ {
    buildDependencies = mapFeatures features ([ build_const_0_2_0 ]);
    features = mkFeatures (features.crc_1_7_0 or {});
  };
  crc_1_7_0_features = f: updateFeatures f (rec {
    build_const_0_2_0.default = true;
    crc_1_7_0.default = (f.crc_1_7_0.default or true);
    crc_1_7_0.std =
      (f.crc_1_7_0.std or false) ||
      (f.crc_1_7_0.default or false) ||
      (crc_1_7_0.default or false);
  }) [ build_const_0_2_0_features ];
  crossbeam_0_3_2 = { features?(crossbeam_0_3_2_features {}) }: crossbeam_0_3_2_ {
    features = mkFeatures (features.crossbeam_0_3_2 or {});
  };
  crossbeam_0_3_2_features = f: updateFeatures f (rec {
    crossbeam_0_3_2.default = (f.crossbeam_0_3_2.default or true);
  }) [];
  crossbeam_deque_0_2_0 = { features?(crossbeam_deque_0_2_0_features {}) }: crossbeam_deque_0_2_0_ {
    dependencies = mapFeatures features ([ crossbeam_epoch_0_3_0 crossbeam_utils_0_2_2 ]);
  };
  crossbeam_deque_0_2_0_features = f: updateFeatures f (rec {
    crossbeam_deque_0_2_0.default = (f.crossbeam_deque_0_2_0.default or true);
    crossbeam_epoch_0_3_0.default = true;
    crossbeam_utils_0_2_2.default = true;
  }) [ crossbeam_epoch_0_3_0_features crossbeam_utils_0_2_2_features ];
  crossbeam_deque_0_3_0 = { features?(crossbeam_deque_0_3_0_features {}) }: crossbeam_deque_0_3_0_ {
    dependencies = mapFeatures features ([ crossbeam_epoch_0_4_0 crossbeam_utils_0_2_2 ]);
  };
  crossbeam_deque_0_3_0_features = f: updateFeatures f (rec {
    crossbeam_deque_0_3_0.default = (f.crossbeam_deque_0_3_0.default or true);
    crossbeam_epoch_0_4_0.default = true;
    crossbeam_utils_0_2_2.default = true;
  }) [ crossbeam_epoch_0_4_0_features crossbeam_utils_0_2_2_features ];
  crossbeam_epoch_0_3_0 = { features?(crossbeam_epoch_0_3_0_features {}) }: crossbeam_epoch_0_3_0_ {
    dependencies = mapFeatures features ([ arrayvec_0_4_7 cfg_if_0_1_2 crossbeam_utils_0_2_2 memoffset_0_2_1 nodrop_0_1_12 scopeguard_0_3_3 ]
      ++ (if features.crossbeam_epoch_0_3_0.lazy_static or false then [ lazy_static_0_2_11 ] else []));
    features = mkFeatures (features.crossbeam_epoch_0_3_0 or {});
  };
  crossbeam_epoch_0_3_0_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or false);
    arrayvec_0_4_7.use_union =
      (f.arrayvec_0_4_7.use_union or false) ||
      (crossbeam_epoch_0_3_0.nightly or false) ||
      (f.crossbeam_epoch_0_3_0.nightly or false);
    cfg_if_0_1_2.default = true;
    crossbeam_epoch_0_3_0.default = (f.crossbeam_epoch_0_3_0.default or true);
    crossbeam_epoch_0_3_0.lazy_static =
      (f.crossbeam_epoch_0_3_0.lazy_static or false) ||
      (f.crossbeam_epoch_0_3_0.use_std or false) ||
      (crossbeam_epoch_0_3_0.use_std or false);
    crossbeam_epoch_0_3_0.use_std =
      (f.crossbeam_epoch_0_3_0.use_std or false) ||
      (f.crossbeam_epoch_0_3_0.default or false) ||
      (crossbeam_epoch_0_3_0.default or false);
    crossbeam_utils_0_2_2.default = (f.crossbeam_utils_0_2_2.default or false);
    crossbeam_utils_0_2_2.use_std =
      (f.crossbeam_utils_0_2_2.use_std or false) ||
      (crossbeam_epoch_0_3_0.use_std or false) ||
      (f.crossbeam_epoch_0_3_0.use_std or false);
    lazy_static_0_2_11.default = true;
    memoffset_0_2_1.default = true;
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or false);
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or false);
  }) [ arrayvec_0_4_7_features cfg_if_0_1_2_features crossbeam_utils_0_2_2_features lazy_static_0_2_11_features memoffset_0_2_1_features nodrop_0_1_12_features scopeguard_0_3_3_features ];
  crossbeam_epoch_0_4_0 = { features?(crossbeam_epoch_0_4_0_features {}) }: crossbeam_epoch_0_4_0_ {
    dependencies = mapFeatures features ([ arrayvec_0_4_7 cfg_if_0_1_2 crossbeam_utils_0_2_2 memoffset_0_2_1 scopeguard_0_3_3 ]
      ++ (if features.crossbeam_epoch_0_4_0.lazy_static or false then [ lazy_static_0_2_11 ] else []));
    features = mkFeatures (features.crossbeam_epoch_0_4_0 or {});
  };
  crossbeam_epoch_0_4_0_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or false);
    arrayvec_0_4_7.use_union =
      (f.arrayvec_0_4_7.use_union or false) ||
      (crossbeam_epoch_0_4_0.nightly or false) ||
      (f.crossbeam_epoch_0_4_0.nightly or false);
    cfg_if_0_1_2.default = true;
    crossbeam_epoch_0_4_0.default = (f.crossbeam_epoch_0_4_0.default or true);
    crossbeam_epoch_0_4_0.lazy_static =
      (f.crossbeam_epoch_0_4_0.lazy_static or false) ||
      (f.crossbeam_epoch_0_4_0.use_std or false) ||
      (crossbeam_epoch_0_4_0.use_std or false);
    crossbeam_epoch_0_4_0.use_std =
      (f.crossbeam_epoch_0_4_0.use_std or false) ||
      (f.crossbeam_epoch_0_4_0.default or false) ||
      (crossbeam_epoch_0_4_0.default or false);
    crossbeam_utils_0_2_2.default = (f.crossbeam_utils_0_2_2.default or false);
    crossbeam_utils_0_2_2.use_std =
      (f.crossbeam_utils_0_2_2.use_std or false) ||
      (crossbeam_epoch_0_4_0.use_std or false) ||
      (f.crossbeam_epoch_0_4_0.use_std or false);
    lazy_static_0_2_11.default = true;
    memoffset_0_2_1.default = true;
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or false);
  }) [ arrayvec_0_4_7_features cfg_if_0_1_2_features crossbeam_utils_0_2_2_features lazy_static_0_2_11_features memoffset_0_2_1_features scopeguard_0_3_3_features ];
  crossbeam_utils_0_2_2 = { features?(crossbeam_utils_0_2_2_features {}) }: crossbeam_utils_0_2_2_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ]);
    features = mkFeatures (features.crossbeam_utils_0_2_2 or {});
  };
  crossbeam_utils_0_2_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    crossbeam_utils_0_2_2.default = (f.crossbeam_utils_0_2_2.default or true);
    crossbeam_utils_0_2_2.use_std =
      (f.crossbeam_utils_0_2_2.use_std or false) ||
      (f.crossbeam_utils_0_2_2.default or false) ||
      (crossbeam_utils_0_2_2.default or false);
  }) [ cfg_if_0_1_2_features ];
  crypto_mac_0_5_2 = { features?(crypto_mac_0_5_2_features {}) }: crypto_mac_0_5_2_ {
    dependencies = mapFeatures features ([ constant_time_eq_0_1_3 generic_array_0_9_0 ]);
    features = mkFeatures (features.crypto_mac_0_5_2 or {});
  };
  crypto_mac_0_5_2_features = f: updateFeatures f (rec {
    constant_time_eq_0_1_3.default = true;
    crypto_mac_0_5_2.default = (f.crypto_mac_0_5_2.default or true);
    generic_array_0_9_0.default = true;
  }) [ constant_time_eq_0_1_3_features generic_array_0_9_0_features ];
  cssparser_0_23_2 = { features?(cssparser_0_23_2_features {}) }: cssparser_0_23_2_ {
    dependencies = mapFeatures features ([ cssparser_macros_0_3_2 dtoa_short_0_3_2 itoa_0_3_4 matches_0_1_6 phf_0_7_21 procedural_masquerade_0_1_5 smallvec_0_6_0 ]);
    buildDependencies = mapFeatures features ([ quote_0_3_15 syn_0_11_11 ]);
    features = mkFeatures (features.cssparser_0_23_2 or {});
  };
  cssparser_0_23_2_features = f: updateFeatures f (rec {
    cssparser_0_23_2.default = (f.cssparser_0_23_2.default or true);
    cssparser_macros_0_3_2.default = true;
    dtoa_short_0_3_2.default = true;
    itoa_0_3_4.default = true;
    matches_0_1_6.default = true;
    phf_0_7_21.default = true;
    procedural_masquerade_0_1_5.default = true;
    quote_0_3_15.default = true;
    smallvec_0_6_0.default = true;
    syn_0_11_11.default = true;
  }) [ cssparser_macros_0_3_2_features dtoa_short_0_3_2_features itoa_0_3_4_features matches_0_1_6_features phf_0_7_21_features procedural_masquerade_0_1_5_features smallvec_0_6_0_features quote_0_3_15_features syn_0_11_11_features ];
  cssparser_macros_0_3_2 = { features?(cssparser_macros_0_3_2_features {}) }: cssparser_macros_0_3_2_ {
    dependencies = mapFeatures features ([ phf_codegen_0_7_21 proc_macro2_0_2_3 procedural_masquerade_0_1_5 quote_0_4_2 syn_0_12_14 ]);
  };
  cssparser_macros_0_3_2_features = f: updateFeatures f (rec {
    cssparser_macros_0_3_2.default = (f.cssparser_macros_0_3_2.default or true);
    phf_codegen_0_7_21.default = true;
    proc_macro2_0_2_3.default = true;
    procedural_masquerade_0_1_5.default = true;
    quote_0_4_2.default = true;
    syn_0_12_14.default = true;
    syn_0_12_14.extra-traits = true;
    syn_0_12_14.full = true;
  }) [ phf_codegen_0_7_21_features proc_macro2_0_2_3_features procedural_masquerade_0_1_5_features quote_0_4_2_features syn_0_12_14_features ];
  csv_1_0_0_beta_5 = { features?(csv_1_0_0_beta_5_features {}) }: csv_1_0_0_beta_5_ {
    dependencies = mapFeatures features ([ csv_core_0_1_4 serde_1_0_32 ]);
  };
  csv_1_0_0_beta_5_features = f: updateFeatures f (rec {
    csv_1_0_0_beta_5.default = (f.csv_1_0_0_beta_5.default or true);
    csv_core_0_1_4.default = true;
    serde_1_0_32.default = true;
  }) [ csv_core_0_1_4_features serde_1_0_32_features ];
  csv_core_0_1_4 = { features?(csv_core_0_1_4_features {}) }: csv_core_0_1_4_ {
    dependencies = mapFeatures features ([ memchr_2_0_1 ]);
    features = mkFeatures (features.csv_core_0_1_4 or {});
  };
  csv_core_0_1_4_features = f: updateFeatures f (rec {
    csv_core_0_1_4.default = (f.csv_core_0_1_4.default or true);
    csv_core_0_1_4.libc =
      (f.csv_core_0_1_4.libc or false) ||
      (f.csv_core_0_1_4.default or false) ||
      (csv_core_0_1_4.default or false);
    memchr_2_0_1.default = (f.memchr_2_0_1.default or false);
    memchr_2_0_1.libc =
      (f.memchr_2_0_1.libc or false) ||
      (csv_core_0_1_4.libc or false) ||
      (f.csv_core_0_1_4.libc or false);
  }) [ memchr_2_0_1_features ];
  debug_unreachable_0_1_1 = { features?(debug_unreachable_0_1_1_features {}) }: debug_unreachable_0_1_1_ {
    dependencies = mapFeatures features ([ unreachable_0_1_1 ]);
  };
  debug_unreachable_0_1_1_features = f: updateFeatures f (rec {
    debug_unreachable_0_1_1.default = (f.debug_unreachable_0_1_1.default or true);
    unreachable_0_1_1.default = true;
  }) [ unreachable_0_1_1_features ];
  derive_error_chain_0_11_0 = { features?(derive_error_chain_0_11_0_features {}) }: derive_error_chain_0_11_0_ {
    dependencies = mapFeatures features ([ quote_0_3_15 syn_0_11_11 ]);
  };
  derive_error_chain_0_11_0_features = f: updateFeatures f (rec {
    derive_error_chain_0_11_0.default = (f.derive_error_chain_0_11_0.default or true);
    quote_0_3_15.default = true;
    syn_0_11_11.default = true;
    syn_0_11_11.full = true;
    syn_0_11_11.parsing = true;
  }) [ quote_0_3_15_features syn_0_11_11_features ];
  diesel_1_1_1 = { features?(diesel_1_1_1_features {}) }: diesel_1_1_1_ {
    dependencies = mapFeatures features ([ byteorder_1_2_1 diesel_derives_1_1_0 ]
      ++ (if features.diesel_1_1_1.bitflags or false then [ bitflags_1_0_1 ] else [])
      ++ (if features.diesel_1_1_1.chrono or false then [ chrono_0_4_0 ] else [])
      ++ (if features.diesel_1_1_1.pq-sys or false then [ pq_sys_0_4_4 ] else [])
      ++ (if features.diesel_1_1_1.r2d2 or false then [ r2d2_0_8_2 ] else [])
      ++ (if features.diesel_1_1_1.serde_json or false then [ serde_json_1_0_11 ] else []));
    features = mkFeatures (features.diesel_1_1_1 or {});
  };
  diesel_1_1_1_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = true;
    byteorder_1_2_1.default = true;
    chrono_0_4_0.default = true;
    diesel_1_1_1.bigdecimal =
      (f.diesel_1_1_1.bigdecimal or false) ||
      (f.diesel_1_1_1.numeric or false) ||
      (diesel_1_1_1.numeric or false);
    diesel_1_1_1.bitflags =
      (f.diesel_1_1_1.bitflags or false) ||
      (f.diesel_1_1_1.postgres or false) ||
      (diesel_1_1_1.postgres or false);
    diesel_1_1_1.chrono =
      (f.diesel_1_1_1.chrono or false) ||
      (f.diesel_1_1_1.extras or false) ||
      (diesel_1_1_1.extras or false);
    diesel_1_1_1.clippy =
      (f.diesel_1_1_1.clippy or false) ||
      (f.diesel_1_1_1.lint or false) ||
      (diesel_1_1_1.lint or false);
    diesel_1_1_1.default = (f.diesel_1_1_1.default or true);
    diesel_1_1_1.deprecated-time =
      (f.diesel_1_1_1.deprecated-time or false) ||
      (f.diesel_1_1_1.extras or false) ||
      (diesel_1_1_1.extras or false);
    diesel_1_1_1.ipnetwork =
      (f.diesel_1_1_1.ipnetwork or false) ||
      (f.diesel_1_1_1.network-address or false) ||
      (diesel_1_1_1.network-address or false);
    diesel_1_1_1.large-tables =
      (f.diesel_1_1_1.large-tables or false) ||
      (f.diesel_1_1_1.huge-tables or false) ||
      (diesel_1_1_1.huge-tables or false);
    diesel_1_1_1.libc =
      (f.diesel_1_1_1.libc or false) ||
      (f.diesel_1_1_1.network-address or false) ||
      (diesel_1_1_1.network-address or false);
    diesel_1_1_1.libsqlite3-sys =
      (f.diesel_1_1_1.libsqlite3-sys or false) ||
      (f.diesel_1_1_1.sqlite or false) ||
      (diesel_1_1_1.sqlite or false);
    diesel_1_1_1.mysqlclient-sys =
      (f.diesel_1_1_1.mysqlclient-sys or false) ||
      (f.diesel_1_1_1.mysql or false) ||
      (diesel_1_1_1.mysql or false);
    diesel_1_1_1.network-address =
      (f.diesel_1_1_1.network-address or false) ||
      (f.diesel_1_1_1.extras or false) ||
      (diesel_1_1_1.extras or false);
    diesel_1_1_1.num-bigint =
      (f.diesel_1_1_1.num-bigint or false) ||
      (f.diesel_1_1_1.numeric or false) ||
      (diesel_1_1_1.numeric or false);
    diesel_1_1_1.num-integer =
      (f.diesel_1_1_1.num-integer or false) ||
      (f.diesel_1_1_1.numeric or false) ||
      (diesel_1_1_1.numeric or false);
    diesel_1_1_1.num-traits =
      (f.diesel_1_1_1.num-traits or false) ||
      (f.diesel_1_1_1.numeric or false) ||
      (diesel_1_1_1.numeric or false);
    diesel_1_1_1.numeric =
      (f.diesel_1_1_1.numeric or false) ||
      (f.diesel_1_1_1.extras or false) ||
      (diesel_1_1_1.extras or false);
    diesel_1_1_1.pq-sys =
      (f.diesel_1_1_1.pq-sys or false) ||
      (f.diesel_1_1_1.postgres or false) ||
      (diesel_1_1_1.postgres or false);
    diesel_1_1_1.r2d2 =
      (f.diesel_1_1_1.r2d2 or false) ||
      (f.diesel_1_1_1.extras or false) ||
      (diesel_1_1_1.extras or false);
    diesel_1_1_1.serde_json =
      (f.diesel_1_1_1.serde_json or false) ||
      (f.diesel_1_1_1.extras or false) ||
      (diesel_1_1_1.extras or false);
    diesel_1_1_1.time =
      (f.diesel_1_1_1.time or false) ||
      (f.diesel_1_1_1.deprecated-time or false) ||
      (diesel_1_1_1.deprecated-time or false);
    diesel_1_1_1.url =
      (f.diesel_1_1_1.url or false) ||
      (f.diesel_1_1_1.mysql or false) ||
      (diesel_1_1_1.mysql or false);
    diesel_1_1_1.uuid =
      (f.diesel_1_1_1.uuid or false) ||
      (f.diesel_1_1_1.extras or false) ||
      (diesel_1_1_1.extras or false);
    diesel_1_1_1.with-deprecated =
      (f.diesel_1_1_1.with-deprecated or false) ||
      (f.diesel_1_1_1.default or false) ||
      (diesel_1_1_1.default or false);
    diesel_derives_1_1_0.default = true;
    diesel_derives_1_1_0.mysql =
      (f.diesel_derives_1_1_0.mysql or false) ||
      (diesel_1_1_1.mysql or false) ||
      (f.diesel_1_1_1.mysql or false);
    diesel_derives_1_1_0.postgres =
      (f.diesel_derives_1_1_0.postgres or false) ||
      (diesel_1_1_1.postgres or false) ||
      (f.diesel_1_1_1.postgres or false);
    diesel_derives_1_1_0.sqlite =
      (f.diesel_derives_1_1_0.sqlite or false) ||
      (diesel_1_1_1.sqlite or false) ||
      (f.diesel_1_1_1.sqlite or false);
    pq_sys_0_4_4.default = true;
    r2d2_0_8_2.default = true;
    serde_json_1_0_11.default = true;
  }) [ bitflags_1_0_1_features byteorder_1_2_1_features chrono_0_4_0_features diesel_derives_1_1_0_features pq_sys_0_4_4_features r2d2_0_8_2_features serde_json_1_0_11_features ];
  diesel_derives_1_1_0 = { features?(diesel_derives_1_1_0_features {}) }: diesel_derives_1_1_0_ {
    dependencies = mapFeatures features ([ quote_0_3_15 syn_0_11_11 ]);
    features = mkFeatures (features.diesel_derives_1_1_0 or {});
  };
  diesel_derives_1_1_0_features = f: updateFeatures f (rec {
    diesel_derives_1_1_0.clippy =
      (f.diesel_derives_1_1_0.clippy or false) ||
      (f.diesel_derives_1_1_0.lint or false) ||
      (diesel_derives_1_1_0.lint or false);
    diesel_derives_1_1_0.default = (f.diesel_derives_1_1_0.default or true);
    quote_0_3_15.default = true;
    syn_0_11_11.aster = true;
    syn_0_11_11.default = true;
  }) [ quote_0_3_15_features syn_0_11_11_features ];
  diesel_full_text_search_1_0_0 = { features?(diesel_full_text_search_1_0_0_features {}) }: diesel_full_text_search_1_0_0_ {
    dependencies = mapFeatures features ([ diesel_1_1_1 ]);
  };
  diesel_full_text_search_1_0_0_features = f: updateFeatures f (rec {
    diesel_1_1_1.default = true;
    diesel_1_1_1.postgres = true;
    diesel_full_text_search_1_0_0.default = (f.diesel_full_text_search_1_0_0.default or true);
  }) [ diesel_1_1_1_features ];
  digest_0_7_2 = { features?(digest_0_7_2_features {}) }: digest_0_7_2_ {
    dependencies = mapFeatures features ([ generic_array_0_9_0 ]);
    features = mkFeatures (features.digest_0_7_2 or {});
  };
  digest_0_7_2_features = f: updateFeatures f (rec {
    digest_0_7_2.default = (f.digest_0_7_2.default or true);
    generic_array_0_9_0.default = true;
  }) [ generic_array_0_9_0_features ];
  docopt_0_8_3 = { features?(docopt_0_8_3_features {}) }: docopt_0_8_3_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_0 regex_0_2_9 serde_1_0_32 serde_derive_1_0_32 strsim_0_6_0 ]);
  };
  docopt_0_8_3_features = f: updateFeatures f (rec {
    docopt_0_8_3.default = (f.docopt_0_8_3.default or true);
    lazy_static_1_0_0.default = true;
    regex_0_2_9.default = true;
    serde_1_0_32.default = true;
    serde_derive_1_0_32.default = true;
    strsim_0_6_0.default = true;
  }) [ lazy_static_1_0_0_features regex_0_2_9_features serde_1_0_32_features serde_derive_1_0_32_features strsim_0_6_0_features ];
  dotenv_0_11_0 = { features?(dotenv_0_11_0_features {}) }: dotenv_0_11_0_ {
    dependencies = mapFeatures features ([ derive_error_chain_0_11_0 error_chain_0_11_0 regex_0_2_9 ]);
    features = mkFeatures (features.dotenv_0_11_0 or {});
  };
  dotenv_0_11_0_features = f: updateFeatures f (rec {
    derive_error_chain_0_11_0.default = true;
    dotenv_0_11_0.backtrace =
      (f.dotenv_0_11_0.backtrace or false) ||
      (f.dotenv_0_11_0.default or false) ||
      (dotenv_0_11_0.default or false);
    dotenv_0_11_0.default = (f.dotenv_0_11_0.default or true);
    error_chain_0_11_0.backtrace =
      (f.error_chain_0_11_0.backtrace or false) ||
      (dotenv_0_11_0.backtrace or false) ||
      (f.dotenv_0_11_0.backtrace or false);
    error_chain_0_11_0.default = (f.error_chain_0_11_0.default or false);
    regex_0_2_9.default = true;
  }) [ derive_error_chain_0_11_0_features error_chain_0_11_0_features regex_0_2_9_features ];
  dtoa_0_4_2 = { features?(dtoa_0_4_2_features {}) }: dtoa_0_4_2_ {};
  dtoa_0_4_2_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = (f.dtoa_0_4_2.default or true);
  }) [];
  dtoa_short_0_3_2 = { features?(dtoa_short_0_3_2_features {}) }: dtoa_short_0_3_2_ {
    dependencies = mapFeatures features ([ dtoa_0_4_2 ]);
  };
  dtoa_short_0_3_2_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = true;
    dtoa_short_0_3_2.default = (f.dtoa_short_0_3_2.default or true);
  }) [ dtoa_0_4_2_features ];
  encoding_rs_0_7_2 = { features?(encoding_rs_0_7_2_features {}) }: encoding_rs_0_7_2_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ]);
    features = mkFeatures (features.encoding_rs_0_7_2 or {});
  };
  encoding_rs_0_7_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    encoding_rs_0_7_2.default = (f.encoding_rs_0_7_2.default or true);
    encoding_rs_0_7_2.simd =
      (f.encoding_rs_0_7_2.simd or false) ||
      (f.encoding_rs_0_7_2.simd-accel or false) ||
      (encoding_rs_0_7_2.simd-accel or false);
  }) [ cfg_if_0_1_2_features ];
  error_chain_0_11_0 = { features?(error_chain_0_11_0_features {}) }: error_chain_0_11_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.error_chain_0_11_0.backtrace or false then [ backtrace_0_3_5 ] else []));
    features = mkFeatures (features.error_chain_0_11_0 or {});
  };
  error_chain_0_11_0_features = f: updateFeatures f (rec {
    backtrace_0_3_5.default = true;
    error_chain_0_11_0.backtrace =
      (f.error_chain_0_11_0.backtrace or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
    error_chain_0_11_0.default = (f.error_chain_0_11_0.default or true);
    error_chain_0_11_0.example_generated =
      (f.error_chain_0_11_0.example_generated or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
  }) [ backtrace_0_3_5_features ];
  fake_simd_0_1_2 = { features?(fake_simd_0_1_2_features {}) }: fake_simd_0_1_2_ {};
  fake_simd_0_1_2_features = f: updateFeatures f (rec {
    fake_simd_0_1_2.default = (f.fake_simd_0_1_2.default or true);
  }) [];
  fallible_iterator_0_1_4 = { features?(fallible_iterator_0_1_4_features {}) }: fallible_iterator_0_1_4_ {
    features = mkFeatures (features.fallible_iterator_0_1_4 or {});
  };
  fallible_iterator_0_1_4_features = f: updateFeatures f (rec {
    fallible_iterator_0_1_4.default = (f.fallible_iterator_0_1_4.default or true);
    fallible_iterator_0_1_4.std =
      (f.fallible_iterator_0_1_4.std or false) ||
      (f.fallible_iterator_0_1_4.default or false) ||
      (fallible_iterator_0_1_4.default or false);
  }) [];
  flate2_1_0_1 = { features?(flate2_1_0_1_features {}) }: flate2_1_0_1_ {
    dependencies = mapFeatures features ([ libc_0_2_39 ]
      ++ (if features.flate2_1_0_1.miniz-sys or false then [ miniz_sys_0_1_10 ] else []));
    features = mkFeatures (features.flate2_1_0_1 or {});
  };
  flate2_1_0_1_features = f: updateFeatures f (rec {
    flate2_1_0_1.default = (f.flate2_1_0_1.default or true);
    flate2_1_0_1.futures =
      (f.flate2_1_0_1.futures or false) ||
      (f.flate2_1_0_1.tokio or false) ||
      (flate2_1_0_1.tokio or false);
    flate2_1_0_1.libz-sys =
      (f.flate2_1_0_1.libz-sys or false) ||
      (f.flate2_1_0_1.zlib or false) ||
      (flate2_1_0_1.zlib or false);
    flate2_1_0_1.miniz-sys =
      (f.flate2_1_0_1.miniz-sys or false) ||
      (f.flate2_1_0_1.default or false) ||
      (flate2_1_0_1.default or false);
    flate2_1_0_1.miniz_oxide_c_api =
      (f.flate2_1_0_1.miniz_oxide_c_api or false) ||
      (f.flate2_1_0_1.rust_backend or false) ||
      (flate2_1_0_1.rust_backend or false);
    flate2_1_0_1.tokio-io =
      (f.flate2_1_0_1.tokio-io or false) ||
      (f.flate2_1_0_1.tokio or false) ||
      (flate2_1_0_1.tokio or false);
    libc_0_2_39.default = true;
    miniz_sys_0_1_10.default = true;
  }) [ libc_0_2_39_features miniz_sys_0_1_10_features ];
  fnv_1_0_6 = { features?(fnv_1_0_6_features {}) }: fnv_1_0_6_ {};
  fnv_1_0_6_features = f: updateFeatures f (rec {
    fnv_1_0_6.default = (f.fnv_1_0_6.default or true);
  }) [];
  foreign_types_0_3_2 = { features?(foreign_types_0_3_2_features {}) }: foreign_types_0_3_2_ {
    dependencies = mapFeatures features ([ foreign_types_shared_0_1_1 ]);
  };
  foreign_types_0_3_2_features = f: updateFeatures f (rec {
    foreign_types_0_3_2.default = (f.foreign_types_0_3_2.default or true);
    foreign_types_shared_0_1_1.default = true;
  }) [ foreign_types_shared_0_1_1_features ];
  foreign_types_shared_0_1_1 = { features?(foreign_types_shared_0_1_1_features {}) }: foreign_types_shared_0_1_1_ {};
  foreign_types_shared_0_1_1_features = f: updateFeatures f (rec {
    foreign_types_shared_0_1_1.default = (f.foreign_types_shared_0_1_1.default or true);
  }) [];
  fuchsia_zircon_0_3_3 = { features?(fuchsia_zircon_0_3_3_features {}) }: fuchsia_zircon_0_3_3_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 fuchsia_zircon_sys_0_3_3 ]);
  };
  fuchsia_zircon_0_3_3_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = true;
    fuchsia_zircon_0_3_3.default = (f.fuchsia_zircon_0_3_3.default or true);
    fuchsia_zircon_sys_0_3_3.default = true;
  }) [ bitflags_1_0_1_features fuchsia_zircon_sys_0_3_3_features ];
  fuchsia_zircon_sys_0_3_3 = { features?(fuchsia_zircon_sys_0_3_3_features {}) }: fuchsia_zircon_sys_0_3_3_ {};
  fuchsia_zircon_sys_0_3_3_features = f: updateFeatures f (rec {
    fuchsia_zircon_sys_0_3_3.default = (f.fuchsia_zircon_sys_0_3_3.default or true);
  }) [];
  futf_0_1_3 = { features?(futf_0_1_3_features {}) }: futf_0_1_3_ {
    dependencies = mapFeatures features ([ debug_unreachable_0_1_1 mac_0_1_1 ]);
  };
  futf_0_1_3_features = f: updateFeatures f (rec {
    debug_unreachable_0_1_1.default = true;
    futf_0_1_3.default = (f.futf_0_1_3.default or true);
    mac_0_1_1.default = true;
  }) [ debug_unreachable_0_1_1_features mac_0_1_1_features ];
  futures_0_1_18 = { features?(futures_0_1_18_features {}) }: futures_0_1_18_ {
    features = mkFeatures (features.futures_0_1_18 or {});
  };
  futures_0_1_18_features = f: updateFeatures f (rec {
    futures_0_1_18.default = (f.futures_0_1_18.default or true);
    futures_0_1_18.use_std =
      (f.futures_0_1_18.use_std or false) ||
      (f.futures_0_1_18.default or false) ||
      (futures_0_1_18.default or false);
    futures_0_1_18.with-deprecated =
      (f.futures_0_1_18.with-deprecated or false) ||
      (f.futures_0_1_18.default or false) ||
      (futures_0_1_18.default or false);
  }) [];
  futures_cpupool_0_1_8 = { features?(futures_cpupool_0_1_8_features {}) }: futures_cpupool_0_1_8_ {
    dependencies = mapFeatures features ([ futures_0_1_18 num_cpus_1_8_0 ]);
    features = mkFeatures (features.futures_cpupool_0_1_8 or {});
  };
  futures_cpupool_0_1_8_features = f: updateFeatures f (rec {
    futures_0_1_18.default = (f.futures_0_1_18.default or false);
    futures_0_1_18.use_std = true;
    futures_0_1_18.with-deprecated =
      (f.futures_0_1_18.with-deprecated or false) ||
      (futures_cpupool_0_1_8.with-deprecated or false) ||
      (f.futures_cpupool_0_1_8.with-deprecated or false);
    futures_cpupool_0_1_8.default = (f.futures_cpupool_0_1_8.default or true);
    futures_cpupool_0_1_8.with-deprecated =
      (f.futures_cpupool_0_1_8.with-deprecated or false) ||
      (f.futures_cpupool_0_1_8.default or false) ||
      (futures_cpupool_0_1_8.default or false);
    num_cpus_1_8_0.default = true;
  }) [ futures_0_1_18_features num_cpus_1_8_0_features ];
  futures_state_stream_0_2_0 = { features?(futures_state_stream_0_2_0_features {}) }: futures_state_stream_0_2_0_ {
    dependencies = mapFeatures features ([ futures_0_1_18 ]);
  };
  futures_state_stream_0_2_0_features = f: updateFeatures f (rec {
    futures_0_1_18.default = true;
    futures_state_stream_0_2_0.default = (f.futures_state_stream_0_2_0.default or true);
  }) [ futures_0_1_18_features ];
  gcc_0_3_54 = { features?(gcc_0_3_54_features {}) }: gcc_0_3_54_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.gcc_0_3_54 or {});
  };
  gcc_0_3_54_features = f: updateFeatures f (rec {
    gcc_0_3_54.default = (f.gcc_0_3_54.default or true);
    gcc_0_3_54.rayon =
      (f.gcc_0_3_54.rayon or false) ||
      (f.gcc_0_3_54.parallel or false) ||
      (gcc_0_3_54.parallel or false);
  }) [];
  generic_array_0_9_0 = { features?(generic_array_0_9_0_features {}) }: generic_array_0_9_0_ {
    dependencies = mapFeatures features ([ typenum_1_10_0 ]);
  };
  generic_array_0_9_0_features = f: updateFeatures f (rec {
    generic_array_0_9_0.default = (f.generic_array_0_9_0.default or true);
    typenum_1_10_0.default = true;
  }) [ typenum_1_10_0_features ];
  hex_0_2_0 = { features?(hex_0_2_0_features {}) }: hex_0_2_0_ {};
  hex_0_2_0_features = f: updateFeatures f (rec {
    hex_0_2_0.default = (f.hex_0_2_0.default or true);
  }) [];
  hex_0_3_1 = { features?(hex_0_3_1_features {}) }: hex_0_3_1_ {};
  hex_0_3_1_features = f: updateFeatures f (rec {
    hex_0_3_1.default = (f.hex_0_3_1.default or true);
  }) [];
  hmac_0_5_0 = { features?(hmac_0_5_0_features {}) }: hmac_0_5_0_ {
    dependencies = mapFeatures features ([ crypto_mac_0_5_2 digest_0_7_2 ]);
  };
  hmac_0_5_0_features = f: updateFeatures f (rec {
    crypto_mac_0_5_2.default = true;
    digest_0_7_2.default = true;
    hmac_0_5_0.default = (f.hmac_0_5_0.default or true);
  }) [ crypto_mac_0_5_2_features digest_0_7_2_features ];
  html5ever_0_22_0 = { features?(html5ever_0_22_0_features {}) }: html5ever_0_22_0_ {
    dependencies = mapFeatures features ([ log_0_3_9 mac_0_1_1 markup5ever_0_7_2 ]);
    buildDependencies = mapFeatures features ([ quote_0_3_15 syn_0_11_11 ]);
  };
  html5ever_0_22_0_features = f: updateFeatures f (rec {
    html5ever_0_22_0.default = (f.html5ever_0_22_0.default or true);
    log_0_3_9.default = true;
    mac_0_1_1.default = true;
    markup5ever_0_7_2.default = true;
    quote_0_3_15.default = true;
    syn_0_11_11.default = true;
    syn_0_11_11.full = true;
    syn_0_11_11.visit = true;
  }) [ log_0_3_9_features mac_0_1_1_features markup5ever_0_7_2_features quote_0_3_15_features syn_0_11_11_features ];
  httparse_1_2_4 = { features?(httparse_1_2_4_features {}) }: httparse_1_2_4_ {
    features = mkFeatures (features.httparse_1_2_4 or {});
  };
  httparse_1_2_4_features = f: updateFeatures f (rec {
    httparse_1_2_4.default = (f.httparse_1_2_4.default or true);
    httparse_1_2_4.std =
      (f.httparse_1_2_4.std or false) ||
      (f.httparse_1_2_4.default or false) ||
      (httparse_1_2_4.default or false);
  }) [];
  humantime_1_1_1 = { features?(humantime_1_1_1_features {}) }: humantime_1_1_1_ {
    dependencies = mapFeatures features ([ quick_error_1_2_1 ]);
  };
  humantime_1_1_1_features = f: updateFeatures f (rec {
    humantime_1_1_1.default = (f.humantime_1_1_1.default or true);
    quick_error_1_2_1.default = true;
  }) [ quick_error_1_2_1_features ];
  hyper_0_11_22 = { features?(hyper_0_11_22_features {}) }: hyper_0_11_22_ {
    dependencies = mapFeatures features ([ base64_0_9_0 bytes_0_4_6 futures_0_1_18 futures_cpupool_0_1_8 httparse_1_2_4 iovec_0_1_2 language_tags_0_2_2 log_0_4_1 mime_0_3_5 percent_encoding_1_0_1 relay_0_1_1 time_0_1_39 tokio_core_0_1_15 tokio_io_0_1_6 tokio_service_0_1_0 unicase_2_1_0 ]
      ++ (if features.hyper_0_11_22.tokio-proto or false then [ tokio_proto_0_1_1 ] else []));
    features = mkFeatures (features.hyper_0_11_22 or {});
  };
  hyper_0_11_22_features = f: updateFeatures f (rec {
    base64_0_9_0.default = true;
    bytes_0_4_6.default = true;
    futures_0_1_18.default = true;
    futures_cpupool_0_1_8.default = true;
    httparse_1_2_4.default = true;
    hyper_0_11_22.default = (f.hyper_0_11_22.default or true);
    hyper_0_11_22.http =
      (f.hyper_0_11_22.http or false) ||
      (f.hyper_0_11_22.compat or false) ||
      (hyper_0_11_22.compat or false);
    hyper_0_11_22.server-proto =
      (f.hyper_0_11_22.server-proto or false) ||
      (f.hyper_0_11_22.default or false) ||
      (hyper_0_11_22.default or false);
    hyper_0_11_22.tokio-proto =
      (f.hyper_0_11_22.tokio-proto or false) ||
      (f.hyper_0_11_22.server-proto or false) ||
      (hyper_0_11_22.server-proto or false);
    iovec_0_1_2.default = true;
    language_tags_0_2_2.default = true;
    log_0_4_1.default = true;
    mime_0_3_5.default = true;
    percent_encoding_1_0_1.default = true;
    relay_0_1_1.default = true;
    time_0_1_39.default = true;
    tokio_core_0_1_15.default = true;
    tokio_io_0_1_6.default = true;
    tokio_proto_0_1_1.default = true;
    tokio_service_0_1_0.default = true;
    unicase_2_1_0.default = true;
  }) [ base64_0_9_0_features bytes_0_4_6_features futures_0_1_18_features futures_cpupool_0_1_8_features httparse_1_2_4_features iovec_0_1_2_features language_tags_0_2_2_features log_0_4_1_features mime_0_3_5_features percent_encoding_1_0_1_features relay_0_1_1_features time_0_1_39_features tokio_core_0_1_15_features tokio_io_0_1_6_features tokio_proto_0_1_1_features tokio_service_0_1_0_features unicase_2_1_0_features ];
  hyper_tls_0_1_2 = { features?(hyper_tls_0_1_2_features {}) }: hyper_tls_0_1_2_ {
    dependencies = mapFeatures features ([ futures_0_1_18 hyper_0_11_22 native_tls_0_1_5 tokio_core_0_1_15 tokio_io_0_1_6 tokio_service_0_1_0 tokio_tls_0_1_4 ]);
  };
  hyper_tls_0_1_2_features = f: updateFeatures f (rec {
    futures_0_1_18.default = true;
    hyper_0_11_22.default = true;
    hyper_tls_0_1_2.default = (f.hyper_tls_0_1_2.default or true);
    native_tls_0_1_5.default = true;
    tokio_core_0_1_15.default = true;
    tokio_io_0_1_6.default = true;
    tokio_service_0_1_0.default = true;
    tokio_tls_0_1_4.default = true;
  }) [ futures_0_1_18_features hyper_0_11_22_features native_tls_0_1_5_features tokio_core_0_1_15_features tokio_io_0_1_6_features tokio_service_0_1_0_features tokio_tls_0_1_4_features ];
  idna_0_1_4 = { features?(idna_0_1_4_features {}) }: idna_0_1_4_ {
    dependencies = mapFeatures features ([ matches_0_1_6 unicode_bidi_0_3_4 unicode_normalization_0_1_5 ]);
  };
  idna_0_1_4_features = f: updateFeatures f (rec {
    idna_0_1_4.default = (f.idna_0_1_4.default or true);
    matches_0_1_6.default = true;
    unicode_bidi_0_3_4.default = true;
    unicode_normalization_0_1_5.default = true;
  }) [ matches_0_1_6_features unicode_bidi_0_3_4_features unicode_normalization_0_1_5_features ];
  iovec_0_1_2 = { features?(iovec_0_1_2_features {}) }: iovec_0_1_2_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_39 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_2_8 ]) else []);
  };
  iovec_0_1_2_features = f: updateFeatures f (rec {
    iovec_0_1_2.default = (f.iovec_0_1_2.default or true);
    libc_0_2_39.default = true;
    winapi_0_2_8.default = true;
  }) [ libc_0_2_39_features winapi_0_2_8_features ];
  itoa_0_3_4 = { features?(itoa_0_3_4_features {}) }: itoa_0_3_4_ {
    features = mkFeatures (features.itoa_0_3_4 or {});
  };
  itoa_0_3_4_features = f: updateFeatures f (rec {
    itoa_0_3_4.default = (f.itoa_0_3_4.default or true);
  }) [];
  jsonwebtoken_4_0_0 = { features?(jsonwebtoken_4_0_0_features {}) }: jsonwebtoken_4_0_0_ {
    dependencies = mapFeatures features ([ base64_0_8_0 chrono_0_4_0 error_chain_0_11_0 ring_0_12_1 serde_1_0_32 serde_derive_1_0_32 serde_json_1_0_11 untrusted_0_5_1 ]);
  };
  jsonwebtoken_4_0_0_features = f: updateFeatures f (rec {
    base64_0_8_0.default = true;
    chrono_0_4_0.default = true;
    error_chain_0_11_0.default = (f.error_chain_0_11_0.default or false);
    jsonwebtoken_4_0_0.default = (f.jsonwebtoken_4_0_0.default or true);
    ring_0_12_1.default = true;
    ring_0_12_1.dev_urandom_fallback = true;
    ring_0_12_1.rsa_signing = true;
    serde_1_0_32.default = true;
    serde_derive_1_0_32.default = true;
    serde_json_1_0_11.default = true;
    untrusted_0_5_1.default = true;
  }) [ base64_0_8_0_features chrono_0_4_0_features error_chain_0_11_0_features ring_0_12_1_features serde_1_0_32_features serde_derive_1_0_32_features serde_json_1_0_11_features untrusted_0_5_1_features ];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  kuchiki_0_7_0 = { features?(kuchiki_0_7_0_features {}) }: kuchiki_0_7_0_ {
    dependencies = mapFeatures features ([ cssparser_0_23_2 html5ever_0_22_0 matches_0_1_6 selectors_0_19_0 ]);
  };
  kuchiki_0_7_0_features = f: updateFeatures f (rec {
    cssparser_0_23_2.default = true;
    html5ever_0_22_0.default = true;
    kuchiki_0_7_0.default = (f.kuchiki_0_7_0.default or true);
    matches_0_1_6.default = true;
    selectors_0_19_0.default = true;
  }) [ cssparser_0_23_2_features html5ever_0_22_0_features matches_0_1_6_features selectors_0_19_0_features ];
  language_tags_0_2_2 = { features?(language_tags_0_2_2_features {}) }: language_tags_0_2_2_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.language_tags_0_2_2 or {});
  };
  language_tags_0_2_2_features = f: updateFeatures f (rec {
    language_tags_0_2_2.default = (f.language_tags_0_2_2.default or true);
    language_tags_0_2_2.heapsize =
      (f.language_tags_0_2_2.heapsize or false) ||
      (f.language_tags_0_2_2.heap_size or false) ||
      (language_tags_0_2_2.heap_size or false);
    language_tags_0_2_2.heapsize_plugin =
      (f.language_tags_0_2_2.heapsize_plugin or false) ||
      (f.language_tags_0_2_2.heap_size or false) ||
      (language_tags_0_2_2.heap_size or false);
  }) [];
  lazy_static_0_2_11 = { features?(lazy_static_0_2_11_features {}) }: lazy_static_0_2_11_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_0_2_11 or {});
  };
  lazy_static_0_2_11_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.compiletest_rs =
      (f.lazy_static_0_2_11.compiletest_rs or false) ||
      (f.lazy_static_0_2_11.compiletest or false) ||
      (lazy_static_0_2_11.compiletest or false);
    lazy_static_0_2_11.default = (f.lazy_static_0_2_11.default or true);
    lazy_static_0_2_11.nightly =
      (f.lazy_static_0_2_11.nightly or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
    lazy_static_0_2_11.spin =
      (f.lazy_static_0_2_11.spin or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
  }) [];
  lazy_static_1_0_0 = { features?(lazy_static_1_0_0_features {}) }: lazy_static_1_0_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_1_0_0 or {});
  };
  lazy_static_1_0_0_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.compiletest_rs =
      (f.lazy_static_1_0_0.compiletest_rs or false) ||
      (f.lazy_static_1_0_0.compiletest or false) ||
      (lazy_static_1_0_0.compiletest or false);
    lazy_static_1_0_0.default = (f.lazy_static_1_0_0.default or true);
    lazy_static_1_0_0.nightly =
      (f.lazy_static_1_0_0.nightly or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
    lazy_static_1_0_0.spin =
      (f.lazy_static_1_0_0.spin or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
  }) [];
  lazycell_0_6_0 = { features?(lazycell_0_6_0_features {}) }: lazycell_0_6_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazycell_0_6_0 or {});
  };
  lazycell_0_6_0_features = f: updateFeatures f (rec {
    lazycell_0_6_0.clippy =
      (f.lazycell_0_6_0.clippy or false) ||
      (f.lazycell_0_6_0.nightly-testing or false) ||
      (lazycell_0_6_0.nightly-testing or false);
    lazycell_0_6_0.default = (f.lazycell_0_6_0.default or true);
    lazycell_0_6_0.nightly =
      (f.lazycell_0_6_0.nightly or false) ||
      (f.lazycell_0_6_0.nightly-testing or false) ||
      (lazycell_0_6_0.nightly-testing or false);
  }) [];
  libc_0_2_39 = { features?(libc_0_2_39_features {}) }: libc_0_2_39_ {
    features = mkFeatures (features.libc_0_2_39 or {});
  };
  libc_0_2_39_features = f: updateFeatures f (rec {
    libc_0_2_39.default = (f.libc_0_2_39.default or true);
    libc_0_2_39.use_std =
      (f.libc_0_2_39.use_std or false) ||
      (f.libc_0_2_39.default or false) ||
      (libc_0_2_39.default or false);
  }) [];
  libflate_0_1_14 = { features?(libflate_0_1_14_features {}) }: libflate_0_1_14_ {
    dependencies = mapFeatures features ([ adler32_1_0_2 byteorder_1_2_1 crc_1_7_0 ]);
  };
  libflate_0_1_14_features = f: updateFeatures f (rec {
    adler32_1_0_2.default = true;
    byteorder_1_2_1.default = true;
    crc_1_7_0.default = true;
    libflate_0_1_14.default = (f.libflate_0_1_14.default or true);
  }) [ adler32_1_0_2_features byteorder_1_2_1_features crc_1_7_0_features ];
  linked_hash_map_0_5_1 = { features?(linked_hash_map_0_5_1_features {}) }: linked_hash_map_0_5_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.linked_hash_map_0_5_1 or {});
  };
  linked_hash_map_0_5_1_features = f: updateFeatures f (rec {
    linked_hash_map_0_5_1.default = (f.linked_hash_map_0_5_1.default or true);
    linked_hash_map_0_5_1.heapsize =
      (f.linked_hash_map_0_5_1.heapsize or false) ||
      (f.linked_hash_map_0_5_1.heapsize_impl or false) ||
      (linked_hash_map_0_5_1.heapsize_impl or false);
    linked_hash_map_0_5_1.serde =
      (f.linked_hash_map_0_5_1.serde or false) ||
      (f.linked_hash_map_0_5_1.serde_impl or false) ||
      (linked_hash_map_0_5_1.serde_impl or false);
    linked_hash_map_0_5_1.serde_test =
      (f.linked_hash_map_0_5_1.serde_test or false) ||
      (f.linked_hash_map_0_5_1.serde_impl or false) ||
      (linked_hash_map_0_5_1.serde_impl or false);
  }) [];
  log_0_3_9 = { features?(log_0_3_9_features {}) }: log_0_3_9_ {
    dependencies = mapFeatures features ([ log_0_4_1 ]);
    features = mkFeatures (features.log_0_3_9 or {});
  };
  log_0_3_9_features = f: updateFeatures f (rec {
    log_0_3_9.default = (f.log_0_3_9.default or true);
    log_0_3_9.use_std =
      (f.log_0_3_9.use_std or false) ||
      (f.log_0_3_9.default or false) ||
      (log_0_3_9.default or false);
    log_0_4_1.default = true;
    log_0_4_1.max_level_debug =
      (f.log_0_4_1.max_level_debug or false) ||
      (log_0_3_9.max_level_debug or false) ||
      (f.log_0_3_9.max_level_debug or false);
    log_0_4_1.max_level_error =
      (f.log_0_4_1.max_level_error or false) ||
      (log_0_3_9.max_level_error or false) ||
      (f.log_0_3_9.max_level_error or false);
    log_0_4_1.max_level_info =
      (f.log_0_4_1.max_level_info or false) ||
      (log_0_3_9.max_level_info or false) ||
      (f.log_0_3_9.max_level_info or false);
    log_0_4_1.max_level_off =
      (f.log_0_4_1.max_level_off or false) ||
      (log_0_3_9.max_level_off or false) ||
      (f.log_0_3_9.max_level_off or false);
    log_0_4_1.max_level_trace =
      (f.log_0_4_1.max_level_trace or false) ||
      (log_0_3_9.max_level_trace or false) ||
      (f.log_0_3_9.max_level_trace or false);
    log_0_4_1.max_level_warn =
      (f.log_0_4_1.max_level_warn or false) ||
      (log_0_3_9.max_level_warn or false) ||
      (f.log_0_3_9.max_level_warn or false);
    log_0_4_1.release_max_level_debug =
      (f.log_0_4_1.release_max_level_debug or false) ||
      (log_0_3_9.release_max_level_debug or false) ||
      (f.log_0_3_9.release_max_level_debug or false);
    log_0_4_1.release_max_level_error =
      (f.log_0_4_1.release_max_level_error or false) ||
      (log_0_3_9.release_max_level_error or false) ||
      (f.log_0_3_9.release_max_level_error or false);
    log_0_4_1.release_max_level_info =
      (f.log_0_4_1.release_max_level_info or false) ||
      (log_0_3_9.release_max_level_info or false) ||
      (f.log_0_3_9.release_max_level_info or false);
    log_0_4_1.release_max_level_off =
      (f.log_0_4_1.release_max_level_off or false) ||
      (log_0_3_9.release_max_level_off or false) ||
      (f.log_0_3_9.release_max_level_off or false);
    log_0_4_1.release_max_level_trace =
      (f.log_0_4_1.release_max_level_trace or false) ||
      (log_0_3_9.release_max_level_trace or false) ||
      (f.log_0_3_9.release_max_level_trace or false);
    log_0_4_1.release_max_level_warn =
      (f.log_0_4_1.release_max_level_warn or false) ||
      (log_0_3_9.release_max_level_warn or false) ||
      (f.log_0_3_9.release_max_level_warn or false);
    log_0_4_1.std =
      (f.log_0_4_1.std or false) ||
      (log_0_3_9.use_std or false) ||
      (f.log_0_3_9.use_std or false);
  }) [ log_0_4_1_features ];
  log_0_4_1 = { features?(log_0_4_1_features {}) }: log_0_4_1_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ]
      ++ (if features.log_0_4_1.serde or false then [ serde_1_0_32 ] else []));
    features = mkFeatures (features.log_0_4_1 or {});
  };
  log_0_4_1_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    log_0_4_1.default = (f.log_0_4_1.default or true);
    serde_1_0_32.default = (f.serde_1_0_32.default or false);
  }) [ cfg_if_0_1_2_features serde_1_0_32_features ];
  log_mdc_0_1_0 = { features?(log_mdc_0_1_0_features {}) }: log_mdc_0_1_0_ {};
  log_mdc_0_1_0_features = f: updateFeatures f (rec {
    log_mdc_0_1_0.default = (f.log_mdc_0_1_0.default or true);
  }) [];
  log4rs_0_8_0 = { features?(log4rs_0_8_0_features {}) }: log4rs_0_8_0_ {
    dependencies = mapFeatures features ([ crossbeam_0_3_2 fnv_1_0_6 log_0_4_1 ]
      ++ (if features.log4rs_0_8_0.antidote or false then [ antidote_1_0_0 ] else [])
      ++ (if features.log4rs_0_8_0.chrono or false then [ chrono_0_4_0 ] else [])
      ++ (if features.log4rs_0_8_0.flate2 or false then [ flate2_1_0_1 ] else [])
      ++ (if features.log4rs_0_8_0.humantime or false then [ humantime_1_1_1 ] else [])
      ++ (if features.log4rs_0_8_0.log-mdc or false then [ log_mdc_0_1_0 ] else [])
      ++ (if features.log4rs_0_8_0.serde or false then [ serde_1_0_32 ] else [])
      ++ (if features.log4rs_0_8_0.serde-value or false then [ serde_value_0_5_1 ] else [])
      ++ (if features.log4rs_0_8_0.serde_derive or false then [ serde_derive_1_0_32 ] else [])
      ++ (if features.log4rs_0_8_0.serde_json or false then [ serde_json_1_0_11 ] else [])
      ++ (if features.log4rs_0_8_0.serde_yaml or false then [ serde_yaml_0_7_3 ] else [])
      ++ (if features.log4rs_0_8_0.typemap or false then [ typemap_0_3_3 ] else []))
      ++ (if !(kernel == "windows") then mapFeatures features ([ ]
      ++ (if features.log4rs_0_8_0.libc or false then [ libc_0_2_39 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.log4rs_0_8_0.winapi or false then [ winapi_0_3_4 ] else [])) else []);
    features = mkFeatures (features.log4rs_0_8_0 or {});
  };
  log4rs_0_8_0_features = f: updateFeatures f (rec {
    antidote_1_0_0.default = true;
    chrono_0_4_0.default = true;
    crossbeam_0_3_2.default = true;
    flate2_1_0_1.default = true;
    fnv_1_0_6.default = true;
    humantime_1_1_1.default = true;
    libc_0_2_39.default = true;
    log4rs_0_8_0.all_components =
      (f.log4rs_0_8_0.all_components or false) ||
      (f.log4rs_0_8_0.default or false) ||
      (log4rs_0_8_0.default or false);
    log4rs_0_8_0.ansi_writer =
      (f.log4rs_0_8_0.ansi_writer or false) ||
      (f.log4rs_0_8_0.console_writer or false) ||
      (log4rs_0_8_0.console_writer or false);
    log4rs_0_8_0.antidote =
      (f.log4rs_0_8_0.antidote or false) ||
      (f.log4rs_0_8_0.file_appender or false) ||
      (log4rs_0_8_0.file_appender or false) ||
      (f.log4rs_0_8_0.rolling_file_appender or false) ||
      (log4rs_0_8_0.rolling_file_appender or false);
    log4rs_0_8_0.chrono =
      (f.log4rs_0_8_0.chrono or false) ||
      (f.log4rs_0_8_0.json_encoder or false) ||
      (log4rs_0_8_0.json_encoder or false) ||
      (f.log4rs_0_8_0.pattern_encoder or false) ||
      (log4rs_0_8_0.pattern_encoder or false);
    log4rs_0_8_0.compound_policy =
      (f.log4rs_0_8_0.compound_policy or false) ||
      (f.log4rs_0_8_0.all_components or false) ||
      (log4rs_0_8_0.all_components or false);
    log4rs_0_8_0.console_appender =
      (f.log4rs_0_8_0.console_appender or false) ||
      (f.log4rs_0_8_0.all_components or false) ||
      (log4rs_0_8_0.all_components or false);
    log4rs_0_8_0.console_writer =
      (f.log4rs_0_8_0.console_writer or false) ||
      (f.log4rs_0_8_0.console_appender or false) ||
      (log4rs_0_8_0.console_appender or false);
    log4rs_0_8_0.default = (f.log4rs_0_8_0.default or true);
    log4rs_0_8_0.delete_roller =
      (f.log4rs_0_8_0.delete_roller or false) ||
      (f.log4rs_0_8_0.all_components or false) ||
      (log4rs_0_8_0.all_components or false);
    log4rs_0_8_0.file =
      (f.log4rs_0_8_0.file or false) ||
      (f.log4rs_0_8_0.default or false) ||
      (log4rs_0_8_0.default or false);
    log4rs_0_8_0.file_appender =
      (f.log4rs_0_8_0.file_appender or false) ||
      (f.log4rs_0_8_0.all_components or false) ||
      (log4rs_0_8_0.all_components or false);
    log4rs_0_8_0.fixed_window_roller =
      (f.log4rs_0_8_0.fixed_window_roller or false) ||
      (f.log4rs_0_8_0.all_components or false) ||
      (log4rs_0_8_0.all_components or false);
    log4rs_0_8_0.flate2 =
      (f.log4rs_0_8_0.flate2 or false) ||
      (f.log4rs_0_8_0.gzip or false) ||
      (log4rs_0_8_0.gzip or false);
    log4rs_0_8_0.gzip =
      (f.log4rs_0_8_0.gzip or false) ||
      (f.log4rs_0_8_0.default or false) ||
      (log4rs_0_8_0.default or false);
    log4rs_0_8_0.humantime =
      (f.log4rs_0_8_0.humantime or false) ||
      (f.log4rs_0_8_0.file or false) ||
      (log4rs_0_8_0.file or false);
    log4rs_0_8_0.json_encoder =
      (f.log4rs_0_8_0.json_encoder or false) ||
      (f.log4rs_0_8_0.all_components or false) ||
      (log4rs_0_8_0.all_components or false);
    log4rs_0_8_0.libc =
      (f.log4rs_0_8_0.libc or false) ||
      (f.log4rs_0_8_0.console_writer or false) ||
      (log4rs_0_8_0.console_writer or false);
    log4rs_0_8_0.log-mdc =
      (f.log4rs_0_8_0.log-mdc or false) ||
      (f.log4rs_0_8_0.json_encoder or false) ||
      (log4rs_0_8_0.json_encoder or false) ||
      (f.log4rs_0_8_0.pattern_encoder or false) ||
      (log4rs_0_8_0.pattern_encoder or false);
    log4rs_0_8_0.pattern_encoder =
      (f.log4rs_0_8_0.pattern_encoder or false) ||
      (f.log4rs_0_8_0.all_components or false) ||
      (log4rs_0_8_0.all_components or false) ||
      (f.log4rs_0_8_0.console_appender or false) ||
      (log4rs_0_8_0.console_appender or false) ||
      (f.log4rs_0_8_0.file_appender or false) ||
      (log4rs_0_8_0.file_appender or false) ||
      (f.log4rs_0_8_0.rolling_file_appender or false) ||
      (log4rs_0_8_0.rolling_file_appender or false);
    log4rs_0_8_0.rolling_file_appender =
      (f.log4rs_0_8_0.rolling_file_appender or false) ||
      (f.log4rs_0_8_0.all_components or false) ||
      (log4rs_0_8_0.all_components or false);
    log4rs_0_8_0.serde =
      (f.log4rs_0_8_0.serde or false) ||
      (f.log4rs_0_8_0.file or false) ||
      (log4rs_0_8_0.file or false) ||
      (f.log4rs_0_8_0.json_encoder or false) ||
      (log4rs_0_8_0.json_encoder or false);
    log4rs_0_8_0.serde-value =
      (f.log4rs_0_8_0.serde-value or false) ||
      (f.log4rs_0_8_0.file or false) ||
      (log4rs_0_8_0.file or false);
    log4rs_0_8_0.serde-xml-rs =
      (f.log4rs_0_8_0.serde-xml-rs or false) ||
      (f.log4rs_0_8_0.xml_format or false) ||
      (log4rs_0_8_0.xml_format or false);
    log4rs_0_8_0.serde_derive =
      (f.log4rs_0_8_0.serde_derive or false) ||
      (f.log4rs_0_8_0.file or false) ||
      (log4rs_0_8_0.file or false) ||
      (f.log4rs_0_8_0.json_encoder or false) ||
      (log4rs_0_8_0.json_encoder or false);
    log4rs_0_8_0.serde_json =
      (f.log4rs_0_8_0.serde_json or false) ||
      (f.log4rs_0_8_0.json_encoder or false) ||
      (log4rs_0_8_0.json_encoder or false) ||
      (f.log4rs_0_8_0.json_format or false) ||
      (log4rs_0_8_0.json_format or false);
    log4rs_0_8_0.serde_yaml =
      (f.log4rs_0_8_0.serde_yaml or false) ||
      (f.log4rs_0_8_0.yaml_format or false) ||
      (log4rs_0_8_0.yaml_format or false);
    log4rs_0_8_0.simple_writer =
      (f.log4rs_0_8_0.simple_writer or false) ||
      (f.log4rs_0_8_0.console_appender or false) ||
      (log4rs_0_8_0.console_appender or false) ||
      (f.log4rs_0_8_0.file_appender or false) ||
      (log4rs_0_8_0.file_appender or false) ||
      (f.log4rs_0_8_0.rolling_file_appender or false) ||
      (log4rs_0_8_0.rolling_file_appender or false);
    log4rs_0_8_0.size_trigger =
      (f.log4rs_0_8_0.size_trigger or false) ||
      (f.log4rs_0_8_0.all_components or false) ||
      (log4rs_0_8_0.all_components or false);
    log4rs_0_8_0.threshold_filter =
      (f.log4rs_0_8_0.threshold_filter or false) ||
      (f.log4rs_0_8_0.all_components or false) ||
      (log4rs_0_8_0.all_components or false);
    log4rs_0_8_0.toml =
      (f.log4rs_0_8_0.toml or false) ||
      (f.log4rs_0_8_0.toml_format or false) ||
      (log4rs_0_8_0.toml_format or false);
    log4rs_0_8_0.typemap =
      (f.log4rs_0_8_0.typemap or false) ||
      (f.log4rs_0_8_0.file or false) ||
      (log4rs_0_8_0.file or false);
    log4rs_0_8_0.winapi =
      (f.log4rs_0_8_0.winapi or false) ||
      (f.log4rs_0_8_0.console_writer or false) ||
      (log4rs_0_8_0.console_writer or false);
    log4rs_0_8_0.yaml_format =
      (f.log4rs_0_8_0.yaml_format or false) ||
      (f.log4rs_0_8_0.default or false) ||
      (log4rs_0_8_0.default or false);
    log_0_4_1.default = true;
    log_0_4_1.serde =
      (f.log_0_4_1.serde or false) ||
      (log4rs_0_8_0.file or false) ||
      (f.log4rs_0_8_0.file or false) ||
      (log4rs_0_8_0.json_encoder or false) ||
      (f.log4rs_0_8_0.json_encoder or false);
    log_0_4_1.std = true;
    log_mdc_0_1_0.default = true;
    serde_1_0_32.default = true;
    serde_derive_1_0_32.default = true;
    serde_json_1_0_11.default = true;
    serde_value_0_5_1.default = true;
    serde_yaml_0_7_3.default = true;
    typemap_0_3_3.default = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.handleapi = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.winbase = true;
    winapi_0_3_4.wincon = true;
  }) [ antidote_1_0_0_features chrono_0_4_0_features crossbeam_0_3_2_features flate2_1_0_1_features fnv_1_0_6_features humantime_1_1_1_features log_0_4_1_features log_mdc_0_1_0_features serde_1_0_32_features serde_value_0_5_1_features serde_derive_1_0_32_features serde_json_1_0_11_features serde_yaml_0_7_3_features typemap_0_3_3_features libc_0_2_39_features winapi_0_3_4_features ];
  mac_0_1_1 = { features?(mac_0_1_1_features {}) }: mac_0_1_1_ {};
  mac_0_1_1_features = f: updateFeatures f (rec {
    mac_0_1_1.default = (f.mac_0_1_1.default or true);
  }) [];
  markup5ever_0_7_2 = { features?(markup5ever_0_7_2_features {}) }: markup5ever_0_7_2_ {
    dependencies = mapFeatures features ([ phf_0_7_21 string_cache_0_7_1 tendril_0_4_0 ]);
    buildDependencies = mapFeatures features ([ phf_codegen_0_7_21 serde_1_0_32 serde_derive_1_0_32 serde_json_1_0_11 string_cache_codegen_0_4_0 ]);
  };
  markup5ever_0_7_2_features = f: updateFeatures f (rec {
    markup5ever_0_7_2.default = (f.markup5ever_0_7_2.default or true);
    phf_0_7_21.default = true;
    phf_codegen_0_7_21.default = true;
    serde_1_0_32.default = true;
    serde_derive_1_0_32.default = true;
    serde_json_1_0_11.default = true;
    string_cache_0_7_1.default = true;
    string_cache_codegen_0_4_0.default = true;
    tendril_0_4_0.default = true;
  }) [ phf_0_7_21_features string_cache_0_7_1_features tendril_0_4_0_features phf_codegen_0_7_21_features serde_1_0_32_features serde_derive_1_0_32_features serde_json_1_0_11_features string_cache_codegen_0_4_0_features ];
  matches_0_1_6 = { features?(matches_0_1_6_features {}) }: matches_0_1_6_ {};
  matches_0_1_6_features = f: updateFeatures f (rec {
    matches_0_1_6.default = (f.matches_0_1_6.default or true);
  }) [];
  md5_0_3_7 = { features?(md5_0_3_7_features {}) }: md5_0_3_7_ {};
  md5_0_3_7_features = f: updateFeatures f (rec {
    md5_0_3_7.default = (f.md5_0_3_7.default or true);
  }) [];
  memchr_1_0_2 = { features?(memchr_1_0_2_features {}) }: memchr_1_0_2_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_1_0_2.libc or false then [ libc_0_2_39 ] else []));
    features = mkFeatures (features.memchr_1_0_2 or {});
  };
  memchr_1_0_2_features = f: updateFeatures f (rec {
    libc_0_2_39.default = (f.libc_0_2_39.default or false);
    libc_0_2_39.use_std =
      (f.libc_0_2_39.use_std or false) ||
      (memchr_1_0_2.use_std or false) ||
      (f.memchr_1_0_2.use_std or false);
    memchr_1_0_2.default = (f.memchr_1_0_2.default or true);
    memchr_1_0_2.libc =
      (f.memchr_1_0_2.libc or false) ||
      (f.memchr_1_0_2.default or false) ||
      (memchr_1_0_2.default or false) ||
      (f.memchr_1_0_2.use_std or false) ||
      (memchr_1_0_2.use_std or false);
    memchr_1_0_2.use_std =
      (f.memchr_1_0_2.use_std or false) ||
      (f.memchr_1_0_2.default or false) ||
      (memchr_1_0_2.default or false);
  }) [ libc_0_2_39_features ];
  memchr_2_0_1 = { features?(memchr_2_0_1_features {}) }: memchr_2_0_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_2_0_1.libc or false then [ libc_0_2_39 ] else []));
    features = mkFeatures (features.memchr_2_0_1 or {});
  };
  memchr_2_0_1_features = f: updateFeatures f (rec {
    libc_0_2_39.default = (f.libc_0_2_39.default or false);
    libc_0_2_39.use_std =
      (f.libc_0_2_39.use_std or false) ||
      (memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.use_std or false);
    memchr_2_0_1.default = (f.memchr_2_0_1.default or true);
    memchr_2_0_1.libc =
      (f.memchr_2_0_1.libc or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false) ||
      (f.memchr_2_0_1.use_std or false) ||
      (memchr_2_0_1.use_std or false);
    memchr_2_0_1.use_std =
      (f.memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false);
  }) [ libc_0_2_39_features ];
  memoffset_0_2_1 = { features?(memoffset_0_2_1_features {}) }: memoffset_0_2_1_ {};
  memoffset_0_2_1_features = f: updateFeatures f (rec {
    memoffset_0_2_1.default = (f.memoffset_0_2_1.default or true);
  }) [];
  mime_0_3_5 = { features?(mime_0_3_5_features {}) }: mime_0_3_5_ {
    dependencies = mapFeatures features ([ unicase_2_1_0 ]);
  };
  mime_0_3_5_features = f: updateFeatures f (rec {
    mime_0_3_5.default = (f.mime_0_3_5.default or true);
    unicase_2_1_0.default = true;
  }) [ unicase_2_1_0_features ];
  mime_guess_2_0_0_alpha_4 = { features?(mime_guess_2_0_0_alpha_4_features {}) }: mime_guess_2_0_0_alpha_4_ {
    dependencies = mapFeatures features ([ mime_0_3_5 phf_0_7_21 unicase_1_4_2 ]);
    buildDependencies = mapFeatures features ([ phf_codegen_0_7_21 unicase_1_4_2 ]);
    features = mkFeatures (features.mime_guess_2_0_0_alpha_4 or {});
  };
  mime_guess_2_0_0_alpha_4_features = f: updateFeatures f (rec {
    mime_0_3_5.default = true;
    mime_guess_2_0_0_alpha_4.default = (f.mime_guess_2_0_0_alpha_4.default or true);
    phf_0_7_21.default = true;
    phf_0_7_21.unicase = true;
    phf_codegen_0_7_21.default = true;
    unicase_1_4_2.default = true;
  }) [ mime_0_3_5_features phf_0_7_21_features unicase_1_4_2_features phf_codegen_0_7_21_features unicase_1_4_2_features ];
  miniz_sys_0_1_10 = { features?(miniz_sys_0_1_10_features {}) }: miniz_sys_0_1_10_ {
    dependencies = mapFeatures features ([ libc_0_2_39 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_7 ]);
  };
  miniz_sys_0_1_10_features = f: updateFeatures f (rec {
    cc_1_0_7.default = true;
    libc_0_2_39.default = true;
    miniz_sys_0_1_10.default = (f.miniz_sys_0_1_10.default or true);
  }) [ libc_0_2_39_features cc_1_0_7_features ];
  mio_0_6_14 = { features?(mio_0_6_14_features {}) }: mio_0_6_14_ {
    dependencies = mapFeatures features ([ iovec_0_1_2 lazycell_0_6_0 log_0_4_1 net2_0_2_32 slab_0_4_0 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 fuchsia_zircon_sys_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_39 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 miow_0_2_1 winapi_0_2_8 ]) else []);
    features = mkFeatures (features.mio_0_6_14 or {});
  };
  mio_0_6_14_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    fuchsia_zircon_sys_0_3_3.default = true;
    iovec_0_1_2.default = true;
    kernel32_sys_0_2_2.default = true;
    lazycell_0_6_0.default = true;
    libc_0_2_39.default = true;
    log_0_4_1.default = true;
    mio_0_6_14.default = (f.mio_0_6_14.default or true);
    mio_0_6_14.with-deprecated =
      (f.mio_0_6_14.with-deprecated or false) ||
      (f.mio_0_6_14.default or false) ||
      (mio_0_6_14.default or false);
    miow_0_2_1.default = true;
    net2_0_2_32.default = true;
    slab_0_4_0.default = true;
    winapi_0_2_8.default = true;
  }) [ iovec_0_1_2_features lazycell_0_6_0_features log_0_4_1_features net2_0_2_32_features slab_0_4_0_features fuchsia_zircon_0_3_3_features fuchsia_zircon_sys_0_3_3_features libc_0_2_39_features kernel32_sys_0_2_2_features miow_0_2_1_features winapi_0_2_8_features ];
  mio_uds_0_6_4 = { features?(mio_uds_0_6_4_features {}) }: mio_uds_0_6_4_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_39 mio_0_6_14 ]) else []);
  };
  mio_uds_0_6_4_features = f: updateFeatures f (rec {
    libc_0_2_39.default = true;
    mio_0_6_14.default = true;
    mio_uds_0_6_4.default = (f.mio_uds_0_6_4.default or true);
  }) [ libc_0_2_39_features mio_0_6_14_features ];
  miow_0_2_1 = { features?(miow_0_2_1_features {}) }: miow_0_2_1_ {
    dependencies = mapFeatures features ([ kernel32_sys_0_2_2 net2_0_2_32 winapi_0_2_8 ws2_32_sys_0_2_1 ]);
  };
  miow_0_2_1_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    miow_0_2_1.default = (f.miow_0_2_1.default or true);
    net2_0_2_32.default = (f.net2_0_2_32.default or false);
    winapi_0_2_8.default = true;
    ws2_32_sys_0_2_1.default = true;
  }) [ kernel32_sys_0_2_2_features net2_0_2_32_features winapi_0_2_8_features ws2_32_sys_0_2_1_features ];
  native_tls_0_1_5 = { features?(native_tls_0_1_5_features {}) }: native_tls_0_1_5_ {
    dependencies = mapFeatures features ([ lazy_static_0_2_11 ])
      ++ (if kernel == "darwin" || kernel == "ios" then mapFeatures features ([ libc_0_2_39 security_framework_0_1_16 security_framework_sys_0_1_16 tempdir_0_3_6 ]) else [])
      ++ (if !(kernel == "windows" || kernel == "darwin" || kernel == "ios") then mapFeatures features ([ openssl_0_9_24 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ schannel_0_1_11 ]) else []);
  };
  native_tls_0_1_5_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.default = true;
    libc_0_2_39.default = true;
    native_tls_0_1_5.default = (f.native_tls_0_1_5.default or true);
    openssl_0_9_24.default = true;
    schannel_0_1_11.default = true;
    security_framework_0_1_16.OSX_10_8 = true;
    security_framework_0_1_16.default = true;
    security_framework_sys_0_1_16.default = true;
    tempdir_0_3_6.default = true;
  }) [ lazy_static_0_2_11_features libc_0_2_39_features security_framework_0_1_16_features security_framework_sys_0_1_16_features tempdir_0_3_6_features openssl_0_9_24_features schannel_0_1_11_features ];
  net2_0_2_32 = { features?(net2_0_2_32_features {}) }: net2_0_2_32_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_39 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else [])
      ++ (if kernel == "i686-apple-darwin" then mapFeatures features ([ libc_0_2_39 ]) else [])
      ++ (if kernel == "i686-unknown-linux-gnu" then mapFeatures features ([ libc_0_2_39 ]) else [])
      ++ (if kernel == "x86_64-apple-darwin" then mapFeatures features ([ libc_0_2_39 ]) else [])
      ++ (if kernel == "x86_64-unknown-linux-gnu" then mapFeatures features ([ libc_0_2_39 ]) else []);
    features = mkFeatures (features.net2_0_2_32 or {});
  };
  net2_0_2_32_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    libc_0_2_39.default = true;
    net2_0_2_32.default = (f.net2_0_2_32.default or true);
    net2_0_2_32.duration =
      (f.net2_0_2_32.duration or false) ||
      (f.net2_0_2_32.default or false) ||
      (net2_0_2_32.default or false);
    winapi_0_3_4.default = true;
    winapi_0_3_4.handleapi = true;
    winapi_0_3_4.winsock2 = true;
    winapi_0_3_4.ws2def = true;
    winapi_0_3_4.ws2ipdef = true;
    winapi_0_3_4.ws2tcpip = true;
  }) [ cfg_if_0_1_2_features libc_0_2_39_features winapi_0_3_4_features libc_0_2_39_features libc_0_2_39_features libc_0_2_39_features libc_0_2_39_features ];
  nodrop_0_1_12 = { features?(nodrop_0_1_12_features {}) }: nodrop_0_1_12_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.nodrop_0_1_12 or {});
  };
  nodrop_0_1_12_features = f: updateFeatures f (rec {
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or true);
    nodrop_0_1_12.nodrop-union =
      (f.nodrop_0_1_12.nodrop-union or false) ||
      (f.nodrop_0_1_12.use_union or false) ||
      (nodrop_0_1_12.use_union or false);
    nodrop_0_1_12.std =
      (f.nodrop_0_1_12.std or false) ||
      (f.nodrop_0_1_12.default or false) ||
      (nodrop_0_1_12.default or false);
  }) [];
  nom_3_2_1 = { features?(nom_3_2_1_features {}) }: nom_3_2_1_ {
    dependencies = mapFeatures features ([ memchr_1_0_2 ]);
    features = mkFeatures (features.nom_3_2_1 or {});
  };
  nom_3_2_1_features = f: updateFeatures f (rec {
    memchr_1_0_2.default = (f.memchr_1_0_2.default or false);
    memchr_1_0_2.use_std =
      (f.memchr_1_0_2.use_std or false) ||
      (nom_3_2_1.std or false) ||
      (f.nom_3_2_1.std or false);
    nom_3_2_1.compiler_error =
      (f.nom_3_2_1.compiler_error or false) ||
      (f.nom_3_2_1.nightly or false) ||
      (nom_3_2_1.nightly or false);
    nom_3_2_1.default = (f.nom_3_2_1.default or true);
    nom_3_2_1.lazy_static =
      (f.nom_3_2_1.lazy_static or false) ||
      (f.nom_3_2_1.regexp_macros or false) ||
      (nom_3_2_1.regexp_macros or false);
    nom_3_2_1.regex =
      (f.nom_3_2_1.regex or false) ||
      (f.nom_3_2_1.regexp or false) ||
      (nom_3_2_1.regexp or false);
    nom_3_2_1.regexp =
      (f.nom_3_2_1.regexp or false) ||
      (f.nom_3_2_1.regexp_macros or false) ||
      (nom_3_2_1.regexp_macros or false);
    nom_3_2_1.std =
      (f.nom_3_2_1.std or false) ||
      (f.nom_3_2_1.default or false) ||
      (nom_3_2_1.default or false);
    nom_3_2_1.stream =
      (f.nom_3_2_1.stream or false) ||
      (f.nom_3_2_1.default or false) ||
      (nom_3_2_1.default or false);
  }) [ memchr_1_0_2_features ];
  num_0_1_42 = { features?(num_0_1_42_features {}) }: num_0_1_42_ {
    dependencies = mapFeatures features ([ num_integer_0_1_36 num_iter_0_1_35 num_traits_0_2_1 ]);
    features = mkFeatures (features.num_0_1_42 or {});
  };
  num_0_1_42_features = f: updateFeatures f (rec {
    num_0_1_42.bigint =
      (f.num_0_1_42.bigint or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.complex =
      (f.num_0_1_42.complex or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.default = (f.num_0_1_42.default or true);
    num_0_1_42.num-bigint =
      (f.num_0_1_42.num-bigint or false) ||
      (f.num_0_1_42.bigint or false) ||
      (num_0_1_42.bigint or false);
    num_0_1_42.num-complex =
      (f.num_0_1_42.num-complex or false) ||
      (f.num_0_1_42.complex or false) ||
      (num_0_1_42.complex or false);
    num_0_1_42.num-rational =
      (f.num_0_1_42.num-rational or false) ||
      (f.num_0_1_42.rational or false) ||
      (num_0_1_42.rational or false);
    num_0_1_42.rational =
      (f.num_0_1_42.rational or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.rustc-serialize =
      (f.num_0_1_42.rustc-serialize or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_integer_0_1_36.default = true;
    num_iter_0_1_35.default = true;
    num_traits_0_2_1.default = true;
  }) [ num_integer_0_1_36_features num_iter_0_1_35_features num_traits_0_2_1_features ];
  num_integer_0_1_36 = { features?(num_integer_0_1_36_features {}) }: num_integer_0_1_36_ {
    dependencies = mapFeatures features ([ num_traits_0_2_1 ]);
    features = mkFeatures (features.num_integer_0_1_36 or {});
  };
  num_integer_0_1_36_features = f: updateFeatures f (rec {
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or true);
    num_integer_0_1_36.std =
      (f.num_integer_0_1_36.std or false) ||
      (f.num_integer_0_1_36.default or false) ||
      (num_integer_0_1_36.default or false);
    num_traits_0_2_1.default = (f.num_traits_0_2_1.default or false);
  }) [ num_traits_0_2_1_features ];
  num_iter_0_1_35 = { features?(num_iter_0_1_35_features {}) }: num_iter_0_1_35_ {
    dependencies = mapFeatures features ([ num_integer_0_1_36 num_traits_0_2_1 ]);
    features = mkFeatures (features.num_iter_0_1_35 or {});
  };
  num_iter_0_1_35_features = f: updateFeatures f (rec {
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or false);
    num_iter_0_1_35.default = (f.num_iter_0_1_35.default or true);
    num_iter_0_1_35.std =
      (f.num_iter_0_1_35.std or false) ||
      (f.num_iter_0_1_35.default or false) ||
      (num_iter_0_1_35.default or false);
    num_traits_0_2_1.default = (f.num_traits_0_2_1.default or false);
  }) [ num_integer_0_1_36_features num_traits_0_2_1_features ];
  num_traits_0_1_43 = { features?(num_traits_0_1_43_features {}) }: num_traits_0_1_43_ {
    dependencies = mapFeatures features ([ num_traits_0_2_1 ]);
  };
  num_traits_0_1_43_features = f: updateFeatures f (rec {
    num_traits_0_1_43.default = (f.num_traits_0_1_43.default or true);
    num_traits_0_2_1.default = true;
  }) [ num_traits_0_2_1_features ];
  num_traits_0_2_1 = { features?(num_traits_0_2_1_features {}) }: num_traits_0_2_1_ {
    features = mkFeatures (features.num_traits_0_2_1 or {});
  };
  num_traits_0_2_1_features = f: updateFeatures f (rec {
    num_traits_0_2_1.default = (f.num_traits_0_2_1.default or true);
    num_traits_0_2_1.std =
      (f.num_traits_0_2_1.std or false) ||
      (f.num_traits_0_2_1.default or false) ||
      (num_traits_0_2_1.default or false);
  }) [];
  num_cpus_1_8_0 = { features?(num_cpus_1_8_0_features {}) }: num_cpus_1_8_0_ {
    dependencies = mapFeatures features ([ libc_0_2_39 ]);
  };
  num_cpus_1_8_0_features = f: updateFeatures f (rec {
    libc_0_2_39.default = true;
    num_cpus_1_8_0.default = (f.num_cpus_1_8_0.default or true);
  }) [ libc_0_2_39_features ];
  openssl_0_9_24 = { features?(openssl_0_9_24_features {}) }: openssl_0_9_24_ {
    dependencies = mapFeatures features ([ bitflags_0_9_1 foreign_types_0_3_2 lazy_static_1_0_0 libc_0_2_39 openssl_sys_0_9_27 ]);
    features = mkFeatures (features.openssl_0_9_24 or {});
  };
  openssl_0_9_24_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = true;
    foreign_types_0_3_2.default = true;
    lazy_static_1_0_0.default = true;
    libc_0_2_39.default = true;
    openssl_0_9_24.default = (f.openssl_0_9_24.default or true);
    openssl_sys_0_9_27.default = true;
  }) [ bitflags_0_9_1_features foreign_types_0_3_2_features lazy_static_1_0_0_features libc_0_2_39_features openssl_sys_0_9_27_features ];
  openssl_sys_0_9_27 = { features?(openssl_sys_0_9_27_features {}) }: openssl_sys_0_9_27_ {
    dependencies = mapFeatures features ([ libc_0_2_39 ])
      ++ (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([ cc_1_0_7 pkg_config_0_3_9 ]);
  };
  openssl_sys_0_9_27_features = f: updateFeatures f (rec {
    cc_1_0_7.default = true;
    libc_0_2_39.default = true;
    openssl_sys_0_9_27.default = (f.openssl_sys_0_9_27.default or true);
    pkg_config_0_3_9.default = true;
  }) [ libc_0_2_39_features cc_1_0_7_features pkg_config_0_3_9_features ];
  ordered_float_0_5_0 = { features?(ordered_float_0_5_0_features {}) }: ordered_float_0_5_0_ {
    dependencies = mapFeatures features ([ num_traits_0_1_43 unreachable_0_1_1 ]);
  };
  ordered_float_0_5_0_features = f: updateFeatures f (rec {
    num_traits_0_1_43.default = true;
    ordered_float_0_5_0.default = (f.ordered_float_0_5_0.default or true);
    unreachable_0_1_1.default = true;
  }) [ num_traits_0_1_43_features unreachable_0_1_1_features ];
  percent_encoding_1_0_1 = { features?(percent_encoding_1_0_1_features {}) }: percent_encoding_1_0_1_ {};
  percent_encoding_1_0_1_features = f: updateFeatures f (rec {
    percent_encoding_1_0_1.default = (f.percent_encoding_1_0_1.default or true);
  }) [];
  phf_0_7_21 = { features?(phf_0_7_21_features {}) }: phf_0_7_21_ {
    dependencies = mapFeatures features ([ phf_shared_0_7_21 ]);
    features = mkFeatures (features.phf_0_7_21 or {});
  };
  phf_0_7_21_features = f: updateFeatures f (rec {
    phf_0_7_21.default = (f.phf_0_7_21.default or true);
    phf_shared_0_7_21.core =
      (f.phf_shared_0_7_21.core or false) ||
      (phf_0_7_21.core or false) ||
      (f.phf_0_7_21.core or false);
    phf_shared_0_7_21.default = true;
    phf_shared_0_7_21.unicase =
      (f.phf_shared_0_7_21.unicase or false) ||
      (phf_0_7_21.unicase or false) ||
      (f.phf_0_7_21.unicase or false);
  }) [ phf_shared_0_7_21_features ];
  phf_codegen_0_7_21 = { features?(phf_codegen_0_7_21_features {}) }: phf_codegen_0_7_21_ {
    dependencies = mapFeatures features ([ phf_generator_0_7_21 phf_shared_0_7_21 ]);
  };
  phf_codegen_0_7_21_features = f: updateFeatures f (rec {
    phf_codegen_0_7_21.default = (f.phf_codegen_0_7_21.default or true);
    phf_generator_0_7_21.default = true;
    phf_shared_0_7_21.default = true;
  }) [ phf_generator_0_7_21_features phf_shared_0_7_21_features ];
  phf_generator_0_7_21 = { features?(phf_generator_0_7_21_features {}) }: phf_generator_0_7_21_ {
    dependencies = mapFeatures features ([ phf_shared_0_7_21 rand_0_3_22 ]);
  };
  phf_generator_0_7_21_features = f: updateFeatures f (rec {
    phf_generator_0_7_21.default = (f.phf_generator_0_7_21.default or true);
    phf_shared_0_7_21.default = true;
    rand_0_3_22.default = true;
  }) [ phf_shared_0_7_21_features rand_0_3_22_features ];
  phf_shared_0_7_21 = { features?(phf_shared_0_7_21_features {}) }: phf_shared_0_7_21_ {
    dependencies = mapFeatures features ([ siphasher_0_2_2 ]
      ++ (if features.phf_shared_0_7_21.unicase or false then [ unicase_1_4_2 ] else []));
    features = mkFeatures (features.phf_shared_0_7_21 or {});
  };
  phf_shared_0_7_21_features = f: updateFeatures f (rec {
    phf_shared_0_7_21.default = (f.phf_shared_0_7_21.default or true);
    siphasher_0_2_2.default = true;
    unicase_1_4_2.default = true;
  }) [ siphasher_0_2_2_features unicase_1_4_2_features ];
  pkg_config_0_3_9 = { features?(pkg_config_0_3_9_features {}) }: pkg_config_0_3_9_ {};
  pkg_config_0_3_9_features = f: updateFeatures f (rec {
    pkg_config_0_3_9.default = (f.pkg_config_0_3_9.default or true);
  }) [];
  postgres_protocol_0_3_2 = { features?(postgres_protocol_0_3_2_features {}) }: postgres_protocol_0_3_2_ {
    dependencies = mapFeatures features ([ base64_0_6_0 byteorder_1_2_1 bytes_0_4_6 fallible_iterator_0_1_4 generic_array_0_9_0 hmac_0_5_0 md5_0_3_7 memchr_1_0_2 rand_0_3_22 sha2_0_7_0 stringprep_0_1_2 ]);
  };
  postgres_protocol_0_3_2_features = f: updateFeatures f (rec {
    base64_0_6_0.default = true;
    byteorder_1_2_1.default = true;
    bytes_0_4_6.default = true;
    fallible_iterator_0_1_4.default = true;
    generic_array_0_9_0.default = true;
    hmac_0_5_0.default = true;
    md5_0_3_7.default = true;
    memchr_1_0_2.default = true;
    postgres_protocol_0_3_2.default = (f.postgres_protocol_0_3_2.default or true);
    rand_0_3_22.default = true;
    sha2_0_7_0.default = true;
    stringprep_0_1_2.default = true;
  }) [ base64_0_6_0_features byteorder_1_2_1_features bytes_0_4_6_features fallible_iterator_0_1_4_features generic_array_0_9_0_features hmac_0_5_0_features md5_0_3_7_features memchr_1_0_2_features rand_0_3_22_features sha2_0_7_0_features stringprep_0_1_2_features ];
  postgres_shared_0_4_1 = { features?(postgres_shared_0_4_1_features {}) }: postgres_shared_0_4_1_ {
    dependencies = mapFeatures features ([ fallible_iterator_0_1_4 hex_0_2_0 phf_0_7_21 postgres_protocol_0_3_2 ]);
    features = mkFeatures (features.postgres_shared_0_4_1 or {});
  };
  postgres_shared_0_4_1_features = f: updateFeatures f (rec {
    fallible_iterator_0_1_4.default = true;
    hex_0_2_0.default = true;
    phf_0_7_21.default = true;
    postgres_protocol_0_3_2.default = true;
    postgres_shared_0_4_1.bit-vec =
      (f.postgres_shared_0_4_1.bit-vec or false) ||
      (f.postgres_shared_0_4_1.with-bit-vec or false) ||
      (postgres_shared_0_4_1.with-bit-vec or false);
    postgres_shared_0_4_1.chrono =
      (f.postgres_shared_0_4_1.chrono or false) ||
      (f.postgres_shared_0_4_1.with-chrono or false) ||
      (postgres_shared_0_4_1.with-chrono or false);
    postgres_shared_0_4_1.default = (f.postgres_shared_0_4_1.default or true);
    postgres_shared_0_4_1.eui48 =
      (f.postgres_shared_0_4_1.eui48 or false) ||
      (f.postgres_shared_0_4_1.with-eui48 or false) ||
      (postgres_shared_0_4_1.with-eui48 or false);
    postgres_shared_0_4_1.geo =
      (f.postgres_shared_0_4_1.geo or false) ||
      (f.postgres_shared_0_4_1.with-geo or false) ||
      (postgres_shared_0_4_1.with-geo or false);
    postgres_shared_0_4_1.rustc-serialize =
      (f.postgres_shared_0_4_1.rustc-serialize or false) ||
      (f.postgres_shared_0_4_1.with-rustc-serialize or false) ||
      (postgres_shared_0_4_1.with-rustc-serialize or false);
    postgres_shared_0_4_1.serde_json =
      (f.postgres_shared_0_4_1.serde_json or false) ||
      (f.postgres_shared_0_4_1.with-serde_json or false) ||
      (postgres_shared_0_4_1.with-serde_json or false);
    postgres_shared_0_4_1.time =
      (f.postgres_shared_0_4_1.time or false) ||
      (f.postgres_shared_0_4_1.with-time or false) ||
      (postgres_shared_0_4_1.with-time or false);
    postgres_shared_0_4_1.uuid =
      (f.postgres_shared_0_4_1.uuid or false) ||
      (f.postgres_shared_0_4_1.with-uuid or false) ||
      (postgres_shared_0_4_1.with-uuid or false);
  }) [ fallible_iterator_0_1_4_features hex_0_2_0_features phf_0_7_21_features postgres_protocol_0_3_2_features ];
  pq_sys_0_4_4 = { features?(pq_sys_0_4_4_features {}) }: pq_sys_0_4_4_ {
    dependencies = (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([]);
  };
  pq_sys_0_4_4_features = f: updateFeatures f (rec {
    pq_sys_0_4_4.default = (f.pq_sys_0_4_4.default or true);
  }) [];
  precomputed_hash_0_1_1 = { features?(precomputed_hash_0_1_1_features {}) }: precomputed_hash_0_1_1_ {};
  precomputed_hash_0_1_1_features = f: updateFeatures f (rec {
    precomputed_hash_0_1_1.default = (f.precomputed_hash_0_1_1.default or true);
  }) [];
  proc_macro2_0_2_3 = { features?(proc_macro2_0_2_3_features {}) }: proc_macro2_0_2_3_ {
    dependencies = mapFeatures features ([ unicode_xid_0_1_0 ]);
    features = mkFeatures (features.proc_macro2_0_2_3 or {});
  };
  proc_macro2_0_2_3_features = f: updateFeatures f (rec {
    proc_macro2_0_2_3.default = (f.proc_macro2_0_2_3.default or true);
    proc_macro2_0_2_3.proc-macro =
      (f.proc_macro2_0_2_3.proc-macro or false) ||
      (f.proc_macro2_0_2_3.default or false) ||
      (proc_macro2_0_2_3.default or false) ||
      (f.proc_macro2_0_2_3.nightly or false) ||
      (proc_macro2_0_2_3.nightly or false);
    unicode_xid_0_1_0.default = true;
  }) [ unicode_xid_0_1_0_features ];
  procedural_masquerade_0_1_5 = { features?(procedural_masquerade_0_1_5_features {}) }: procedural_masquerade_0_1_5_ {};
  procedural_masquerade_0_1_5_features = f: updateFeatures f (rec {
    procedural_masquerade_0_1_5.default = (f.procedural_masquerade_0_1_5.default or true);
  }) [];
  quick_error_1_2_1 = { features?(quick_error_1_2_1_features {}) }: quick_error_1_2_1_ {};
  quick_error_1_2_1_features = f: updateFeatures f (rec {
    quick_error_1_2_1.default = (f.quick_error_1_2_1.default or true);
  }) [];
  quote_0_3_15 = { features?(quote_0_3_15_features {}) }: quote_0_3_15_ {};
  quote_0_3_15_features = f: updateFeatures f (rec {
    quote_0_3_15.default = (f.quote_0_3_15.default or true);
  }) [];
  quote_0_4_2 = { features?(quote_0_4_2_features {}) }: quote_0_4_2_ {
    dependencies = mapFeatures features ([ proc_macro2_0_2_3 ]);
  };
  quote_0_4_2_features = f: updateFeatures f (rec {
    proc_macro2_0_2_3.default = true;
    quote_0_4_2.default = (f.quote_0_4_2.default or true);
  }) [ proc_macro2_0_2_3_features ];
  r2d2_0_8_2 = { features?(r2d2_0_8_2_features {}) }: r2d2_0_8_2_ {
    dependencies = mapFeatures features ([ antidote_1_0_0 log_0_4_1 scheduled_thread_pool_0_2_0 ]);
  };
  r2d2_0_8_2_features = f: updateFeatures f (rec {
    antidote_1_0_0.default = true;
    log_0_4_1.default = true;
    r2d2_0_8_2.default = (f.r2d2_0_8_2.default or true);
    scheduled_thread_pool_0_2_0.default = true;
  }) [ antidote_1_0_0_features log_0_4_1_features scheduled_thread_pool_0_2_0_features ];
  r2d2_diesel_1_0_0 = { features?(r2d2_diesel_1_0_0_features {}) }: r2d2_diesel_1_0_0_ {
    dependencies = mapFeatures features ([ diesel_1_1_1 r2d2_0_8_2 ]);
  };
  r2d2_diesel_1_0_0_features = f: updateFeatures f (rec {
    diesel_1_1_1.default = true;
    r2d2_0_8_2.default = true;
    r2d2_diesel_1_0_0.default = (f.r2d2_diesel_1_0_0.default or true);
  }) [ diesel_1_1_1_features r2d2_0_8_2_features ];
  rand_0_3_22 = { features?(rand_0_3_22_features {}) }: rand_0_3_22_ {
    dependencies = mapFeatures features ([ libc_0_2_39 rand_0_4_2 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else []);
    features = mkFeatures (features.rand_0_3_22 or {});
  };
  rand_0_3_22_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_39.default = true;
    rand_0_3_22.default = (f.rand_0_3_22.default or true);
    rand_0_3_22.i128_support =
      (f.rand_0_3_22.i128_support or false) ||
      (f.rand_0_3_22.nightly or false) ||
      (rand_0_3_22.nightly or false);
    rand_0_4_2.default = true;
  }) [ libc_0_2_39_features rand_0_4_2_features fuchsia_zircon_0_3_3_features ];
  rand_0_4_2 = { features?(rand_0_4_2_features {}) }: rand_0_4_2_ {
    dependencies = (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.rand_0_4_2.libc or false then [ libc_0_2_39 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
    features = mkFeatures (features.rand_0_4_2 or {});
  };
  rand_0_4_2_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_39.default = true;
    rand_0_4_2.default = (f.rand_0_4_2.default or true);
    rand_0_4_2.i128_support =
      (f.rand_0_4_2.i128_support or false) ||
      (f.rand_0_4_2.nightly or false) ||
      (rand_0_4_2.nightly or false);
    rand_0_4_2.libc =
      (f.rand_0_4_2.libc or false) ||
      (f.rand_0_4_2.std or false) ||
      (rand_0_4_2.std or false);
    rand_0_4_2.std =
      (f.rand_0_4_2.std or false) ||
      (f.rand_0_4_2.default or false) ||
      (rand_0_4_2.default or false);
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.ntsecapi = true;
    winapi_0_3_4.profileapi = true;
    winapi_0_3_4.winnt = true;
  }) [ fuchsia_zircon_0_3_3_features libc_0_2_39_features winapi_0_3_4_features ];
  rayon_0_8_2 = { features?(rayon_0_8_2_features {}) }: rayon_0_8_2_ {
    dependencies = mapFeatures features ([ rayon_core_1_4_0 ]);
  };
  rayon_0_8_2_features = f: updateFeatures f (rec {
    rayon_0_8_2.default = (f.rayon_0_8_2.default or true);
    rayon_core_1_4_0.default = true;
  }) [ rayon_core_1_4_0_features ];
  rayon_core_1_4_0 = { features?(rayon_core_1_4_0_features {}) }: rayon_core_1_4_0_ {
    dependencies = mapFeatures features ([ crossbeam_deque_0_2_0 lazy_static_1_0_0 libc_0_2_39 num_cpus_1_8_0 rand_0_4_2 ]);
  };
  rayon_core_1_4_0_features = f: updateFeatures f (rec {
    crossbeam_deque_0_2_0.default = true;
    lazy_static_1_0_0.default = true;
    libc_0_2_39.default = true;
    num_cpus_1_8_0.default = true;
    rand_0_4_2.default = true;
    rayon_core_1_4_0.default = (f.rayon_core_1_4_0.default or true);
  }) [ crossbeam_deque_0_2_0_features lazy_static_1_0_0_features libc_0_2_39_features num_cpus_1_8_0_features rand_0_4_2_features ];
  redox_syscall_0_1_37 = { features?(redox_syscall_0_1_37_features {}) }: redox_syscall_0_1_37_ {};
  redox_syscall_0_1_37_features = f: updateFeatures f (rec {
    redox_syscall_0_1_37.default = (f.redox_syscall_0_1_37.default or true);
  }) [];
  regex_0_2_9 = { features?(regex_0_2_9_features {}) }: regex_0_2_9_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_4 memchr_2_0_1 regex_syntax_0_5_2 thread_local_0_3_5 utf8_ranges_1_0_0 ]);
    features = mkFeatures (features.regex_0_2_9 or {});
  };
  regex_0_2_9_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = true;
    memchr_2_0_1.default = true;
    regex_0_2_9.default = (f.regex_0_2_9.default or true);
    regex_0_2_9.pattern =
      (f.regex_0_2_9.pattern or false) ||
      (f.regex_0_2_9.unstable or false) ||
      (regex_0_2_9.unstable or false);
    regex_syntax_0_5_2.default = true;
    thread_local_0_3_5.default = true;
    utf8_ranges_1_0_0.default = true;
  }) [ aho_corasick_0_6_4_features memchr_2_0_1_features regex_syntax_0_5_2_features thread_local_0_3_5_features utf8_ranges_1_0_0_features ];
  regex_syntax_0_5_2 = { features?(regex_syntax_0_5_2_features {}) }: regex_syntax_0_5_2_ {
    dependencies = mapFeatures features ([ ucd_util_0_1_1 ]);
  };
  regex_syntax_0_5_2_features = f: updateFeatures f (rec {
    regex_syntax_0_5_2.default = (f.regex_syntax_0_5_2.default or true);
    ucd_util_0_1_1.default = true;
  }) [ ucd_util_0_1_1_features ];
  relay_0_1_1 = { features?(relay_0_1_1_features {}) }: relay_0_1_1_ {
    dependencies = mapFeatures features ([ futures_0_1_18 ]);
  };
  relay_0_1_1_features = f: updateFeatures f (rec {
    futures_0_1_18.default = true;
    relay_0_1_1.default = (f.relay_0_1_1.default or true);
  }) [ futures_0_1_18_features ];
  remove_dir_all_0_3_0 = { features?(remove_dir_all_0_3_0_features {}) }: remove_dir_all_0_3_0_ {
    dependencies = mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]);
  };
  remove_dir_all_0_3_0_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    remove_dir_all_0_3_0.default = (f.remove_dir_all_0_3_0.default or true);
    winapi_0_2_8.default = true;
  }) [ kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  reqwest_0_8_5 = { features?(reqwest_0_8_5_features {}) }: reqwest_0_8_5_ {
    dependencies = mapFeatures features ([ bytes_0_4_6 encoding_rs_0_7_2 futures_0_1_18 hyper_0_11_22 hyper_tls_0_1_2 libflate_0_1_14 log_0_4_1 mime_guess_2_0_0_alpha_4 native_tls_0_1_5 serde_1_0_32 serde_json_1_0_11 serde_urlencoded_0_5_1 tokio_core_0_1_15 tokio_io_0_1_6 tokio_tls_0_1_4 url_1_7_0 uuid_0_5_1 ]);
    features = mkFeatures (features.reqwest_0_8_5 or {});
  };
  reqwest_0_8_5_features = f: updateFeatures f (rec {
    bytes_0_4_6.default = true;
    encoding_rs_0_7_2.default = true;
    futures_0_1_18.default = true;
    hyper_0_11_22.default = true;
    hyper_tls_0_1_2.default = true;
    libflate_0_1_14.default = true;
    log_0_4_1.default = true;
    mime_guess_2_0_0_alpha_4.default = true;
    native_tls_0_1_5.default = true;
    reqwest_0_8_5.default = (f.reqwest_0_8_5.default or true);
    serde_1_0_32.default = true;
    serde_json_1_0_11.default = true;
    serde_urlencoded_0_5_1.default = true;
    tokio_core_0_1_15.default = true;
    tokio_io_0_1_6.default = true;
    tokio_tls_0_1_4.default = true;
    url_1_7_0.default = true;
    uuid_0_5_1.default = true;
    uuid_0_5_1.v4 = true;
  }) [ bytes_0_4_6_features encoding_rs_0_7_2_features futures_0_1_18_features hyper_0_11_22_features hyper_tls_0_1_2_features libflate_0_1_14_features log_0_4_1_features mime_guess_2_0_0_alpha_4_features native_tls_0_1_5_features serde_1_0_32_features serde_json_1_0_11_features serde_urlencoded_0_5_1_features tokio_core_0_1_15_features tokio_io_0_1_6_features tokio_tls_0_1_4_features url_1_7_0_features uuid_0_5_1_features ];
  ring_0_12_1 = { features?(ring_0_12_1_features {}) }: ring_0_12_1_ {
    dependencies = mapFeatures features ([ libc_0_2_39 untrusted_0_5_1 ])
      ++ (if kernel == "redox" || (kernel == "linux" || kernel == "darwin") && !(kernel == "darwin" || kernel == "ios") then mapFeatures features ([ lazy_static_0_2_11 ]) else []);
    buildDependencies = mapFeatures features ([ gcc_0_3_54 rayon_0_8_2 ]);
    features = mkFeatures (features.ring_0_12_1 or {});
  };
  ring_0_12_1_features = f: updateFeatures f (rec {
    gcc_0_3_54.default = true;
    lazy_static_0_2_11.default = true;
    libc_0_2_39.default = true;
    rayon_0_8_2.default = true;
    ring_0_12_1.default = (f.ring_0_12_1.default or true);
    ring_0_12_1.dev_urandom_fallback =
      (f.ring_0_12_1.dev_urandom_fallback or false) ||
      (f.ring_0_12_1.default or false) ||
      (ring_0_12_1.default or false);
    ring_0_12_1.use_heap =
      (f.ring_0_12_1.use_heap or false) ||
      (f.ring_0_12_1.default or false) ||
      (ring_0_12_1.default or false) ||
      (f.ring_0_12_1.rsa_signing or false) ||
      (ring_0_12_1.rsa_signing or false);
    untrusted_0_5_1.default = true;
  }) [ libc_0_2_39_features untrusted_0_5_1_features gcc_0_3_54_features rayon_0_8_2_features lazy_static_0_2_11_features ];
  rusoto_core_0_32_0 = { features?(rusoto_core_0_32_0_features {}) }: rusoto_core_0_32_0_ {
    dependencies = mapFeatures features ([ base64_0_9_0 futures_0_1_18 hex_0_3_1 hmac_0_5_0 hyper_0_11_22 hyper_tls_0_1_2 lazy_static_1_0_0 log_0_4_1 rusoto_credential_0_11_0 serde_1_0_32 sha2_0_7_0 time_0_1_39 tokio_core_0_1_15 url_1_7_0 xml_rs_0_7_0 ]);
    buildDependencies = mapFeatures features ([ rustc_version_0_2_2 ]);
    features = mkFeatures (features.rusoto_core_0_32_0 or {});
  };
  rusoto_core_0_32_0_features = f: updateFeatures f (rec {
    base64_0_9_0.default = true;
    futures_0_1_18.default = true;
    hex_0_3_1.default = true;
    hmac_0_5_0.default = true;
    hyper_0_11_22.default = true;
    hyper_tls_0_1_2.default = true;
    lazy_static_1_0_0.default = true;
    log_0_4_1.default = true;
    rusoto_core_0_32_0.clippy =
      (f.rusoto_core_0_32_0.clippy or false) ||
      (f.rusoto_core_0_32_0.nightly-testing or false) ||
      (rusoto_core_0_32_0.nightly-testing or false);
    rusoto_core_0_32_0.default = (f.rusoto_core_0_32_0.default or true);
    rusoto_credential_0_11_0.default = true;
    rusoto_credential_0_11_0.nightly-testing =
      (f.rusoto_credential_0_11_0.nightly-testing or false) ||
      (rusoto_core_0_32_0.nightly-testing or false) ||
      (f.rusoto_core_0_32_0.nightly-testing or false);
    rustc_version_0_2_2.default = true;
    serde_1_0_32.default = true;
    sha2_0_7_0.default = true;
    time_0_1_39.default = true;
    tokio_core_0_1_15.default = true;
    url_1_7_0.default = true;
    xml_rs_0_7_0.default = true;
  }) [ base64_0_9_0_features futures_0_1_18_features hex_0_3_1_features hmac_0_5_0_features hyper_0_11_22_features hyper_tls_0_1_2_features lazy_static_1_0_0_features log_0_4_1_features rusoto_credential_0_11_0_features serde_1_0_32_features sha2_0_7_0_features time_0_1_39_features tokio_core_0_1_15_features url_1_7_0_features xml_rs_0_7_0_features rustc_version_0_2_2_features ];
  rusoto_credential_0_11_0 = { features?(rusoto_credential_0_11_0_features {}) }: rusoto_credential_0_11_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_0 futures_0_1_18 hyper_0_11_22 hyper_tls_0_1_2 regex_0_2_9 serde_json_1_0_11 tokio_core_0_1_15 ]);
    features = mkFeatures (features.rusoto_credential_0_11_0 or {});
  };
  rusoto_credential_0_11_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = true;
    futures_0_1_18.default = true;
    hyper_0_11_22.default = true;
    hyper_tls_0_1_2.default = true;
    regex_0_2_9.default = true;
    rusoto_credential_0_11_0.clippy =
      (f.rusoto_credential_0_11_0.clippy or false) ||
      (f.rusoto_credential_0_11_0.nightly-testing or false) ||
      (rusoto_credential_0_11_0.nightly-testing or false);
    rusoto_credential_0_11_0.default = (f.rusoto_credential_0_11_0.default or true);
    serde_json_1_0_11.default = true;
    tokio_core_0_1_15.default = true;
  }) [ chrono_0_4_0_features futures_0_1_18_features hyper_0_11_22_features hyper_tls_0_1_2_features regex_0_2_9_features serde_json_1_0_11_features tokio_core_0_1_15_features ];
  rusoto_s3_0_32_0 = { features?(rusoto_s3_0_32_0_features {}) }: rusoto_s3_0_32_0_ {
    dependencies = mapFeatures features ([ base64_0_9_0 futures_0_1_18 hex_0_3_1 hyper_0_11_22 md5_0_3_7 rusoto_core_0_32_0 tokio_core_0_1_15 xml_rs_0_7_0 ]);
  };
  rusoto_s3_0_32_0_features = f: updateFeatures f (rec {
    base64_0_9_0.default = true;
    futures_0_1_18.default = true;
    hex_0_3_1.default = true;
    hyper_0_11_22.default = true;
    md5_0_3_7.default = true;
    rusoto_core_0_32_0.default = true;
    rusoto_s3_0_32_0.default = (f.rusoto_s3_0_32_0.default or true);
    tokio_core_0_1_15.default = true;
    xml_rs_0_7_0.default = true;
  }) [ base64_0_9_0_features futures_0_1_18_features hex_0_3_1_features hyper_0_11_22_features md5_0_3_7_features rusoto_core_0_32_0_features tokio_core_0_1_15_features xml_rs_0_7_0_features ];
  rustc_demangle_0_1_7 = { features?(rustc_demangle_0_1_7_features {}) }: rustc_demangle_0_1_7_ {};
  rustc_demangle_0_1_7_features = f: updateFeatures f (rec {
    rustc_demangle_0_1_7.default = (f.rustc_demangle_0_1_7.default or true);
  }) [];
  rustc_version_0_2_2 = { features?(rustc_version_0_2_2_features {}) }: rustc_version_0_2_2_ {
    dependencies = mapFeatures features ([ semver_0_9_0 ]);
  };
  rustc_version_0_2_2_features = f: updateFeatures f (rec {
    rustc_version_0_2_2.default = (f.rustc_version_0_2_2.default or true);
    semver_0_9_0.default = true;
  }) [ semver_0_9_0_features ];
  safemem_0_2_0 = { features?(safemem_0_2_0_features {}) }: safemem_0_2_0_ {};
  safemem_0_2_0_features = f: updateFeatures f (rec {
    safemem_0_2_0.default = (f.safemem_0_2_0.default or true);
  }) [];
  schannel_0_1_11 = { features?(schannel_0_1_11_features {}) }: schannel_0_1_11_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_0 winapi_0_3_4 ]);
  };
  schannel_0_1_11_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.default = true;
    schannel_0_1_11.default = (f.schannel_0_1_11.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.lmcons = true;
    winapi_0_3_4.minschannel = true;
    winapi_0_3_4.schannel = true;
    winapi_0_3_4.securitybaseapi = true;
    winapi_0_3_4.sysinfoapi = true;
    winapi_0_3_4.timezoneapi = true;
    winapi_0_3_4.winbase = true;
    winapi_0_3_4.wincrypt = true;
    winapi_0_3_4.winerror = true;
  }) [ lazy_static_1_0_0_features winapi_0_3_4_features ];
  scheduled_thread_pool_0_2_0 = { features?(scheduled_thread_pool_0_2_0_features {}) }: scheduled_thread_pool_0_2_0_ {
    dependencies = mapFeatures features ([ antidote_1_0_0 ]);
  };
  scheduled_thread_pool_0_2_0_features = f: updateFeatures f (rec {
    antidote_1_0_0.default = true;
    scheduled_thread_pool_0_2_0.default = (f.scheduled_thread_pool_0_2_0.default or true);
  }) [ antidote_1_0_0_features ];
  scoped_tls_0_1_1 = { features?(scoped_tls_0_1_1_features {}) }: scoped_tls_0_1_1_ {
    features = mkFeatures (features.scoped_tls_0_1_1 or {});
  };
  scoped_tls_0_1_1_features = f: updateFeatures f (rec {
    scoped_tls_0_1_1.default = (f.scoped_tls_0_1_1.default or true);
  }) [];
  scopeguard_0_3_3 = { features?(scopeguard_0_3_3_features {}) }: scopeguard_0_3_3_ {
    features = mkFeatures (features.scopeguard_0_3_3 or {});
  };
  scopeguard_0_3_3_features = f: updateFeatures f (rec {
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or true);
    scopeguard_0_3_3.use_std =
      (f.scopeguard_0_3_3.use_std or false) ||
      (f.scopeguard_0_3_3.default or false) ||
      (scopeguard_0_3_3.default or false);
  }) [];
  security_framework_0_1_16 = { features?(security_framework_0_1_16_features {}) }: security_framework_0_1_16_ {
    dependencies = mapFeatures features ([ core_foundation_0_2_3 core_foundation_sys_0_2_3 libc_0_2_39 security_framework_sys_0_1_16 ]);
    features = mkFeatures (features.security_framework_0_1_16 or {});
  };
  security_framework_0_1_16_features = f: updateFeatures f (rec {
    core_foundation_0_2_3.default = true;
    core_foundation_sys_0_2_3.default = true;
    libc_0_2_39.default = true;
    security_framework_0_1_16.OSX_10_10 =
      (f.security_framework_0_1_16.OSX_10_10 or false) ||
      (f.security_framework_0_1_16.OSX_10_11 or false) ||
      (security_framework_0_1_16.OSX_10_11 or false);
    security_framework_0_1_16.OSX_10_11 =
      (f.security_framework_0_1_16.OSX_10_11 or false) ||
      (f.security_framework_0_1_16.OSX_10_12 or false) ||
      (security_framework_0_1_16.OSX_10_12 or false);
    security_framework_0_1_16.OSX_10_8 =
      (f.security_framework_0_1_16.OSX_10_8 or false) ||
      (f.security_framework_0_1_16.OSX_10_9 or false) ||
      (security_framework_0_1_16.OSX_10_9 or false);
    security_framework_0_1_16.OSX_10_9 =
      (f.security_framework_0_1_16.OSX_10_9 or false) ||
      (f.security_framework_0_1_16.OSX_10_10 or false) ||
      (security_framework_0_1_16.OSX_10_10 or false);
    security_framework_0_1_16.default = (f.security_framework_0_1_16.default or true);
    security_framework_sys_0_1_16.OSX_10_10 =
      (f.security_framework_sys_0_1_16.OSX_10_10 or false) ||
      (security_framework_0_1_16.OSX_10_10 or false) ||
      (f.security_framework_0_1_16.OSX_10_10 or false);
    security_framework_sys_0_1_16.OSX_10_11 =
      (f.security_framework_sys_0_1_16.OSX_10_11 or false) ||
      (security_framework_0_1_16.OSX_10_11 or false) ||
      (f.security_framework_0_1_16.OSX_10_11 or false) ||
      (security_framework_0_1_16.OSX_10_12 or false) ||
      (f.security_framework_0_1_16.OSX_10_12 or false);
    security_framework_sys_0_1_16.OSX_10_8 =
      (f.security_framework_sys_0_1_16.OSX_10_8 or false) ||
      (security_framework_0_1_16.OSX_10_8 or false) ||
      (f.security_framework_0_1_16.OSX_10_8 or false);
    security_framework_sys_0_1_16.OSX_10_9 =
      (f.security_framework_sys_0_1_16.OSX_10_9 or false) ||
      (security_framework_0_1_16.OSX_10_9 or false) ||
      (f.security_framework_0_1_16.OSX_10_9 or false);
    security_framework_sys_0_1_16.default = true;
  }) [ core_foundation_0_2_3_features core_foundation_sys_0_2_3_features libc_0_2_39_features security_framework_sys_0_1_16_features ];
  security_framework_sys_0_1_16 = { features?(security_framework_sys_0_1_16_features {}) }: security_framework_sys_0_1_16_ {
    dependencies = mapFeatures features ([ core_foundation_sys_0_2_3 libc_0_2_39 ]);
    features = mkFeatures (features.security_framework_sys_0_1_16 or {});
  };
  security_framework_sys_0_1_16_features = f: updateFeatures f (rec {
    core_foundation_sys_0_2_3.default = true;
    libc_0_2_39.default = true;
    security_framework_sys_0_1_16.OSX_10_10 =
      (f.security_framework_sys_0_1_16.OSX_10_10 or false) ||
      (f.security_framework_sys_0_1_16.OSX_10_11 or false) ||
      (security_framework_sys_0_1_16.OSX_10_11 or false);
    security_framework_sys_0_1_16.OSX_10_11 =
      (f.security_framework_sys_0_1_16.OSX_10_11 or false) ||
      (f.security_framework_sys_0_1_16.OSX_10_12 or false) ||
      (security_framework_sys_0_1_16.OSX_10_12 or false);
    security_framework_sys_0_1_16.OSX_10_8 =
      (f.security_framework_sys_0_1_16.OSX_10_8 or false) ||
      (f.security_framework_sys_0_1_16.OSX_10_9 or false) ||
      (security_framework_sys_0_1_16.OSX_10_9 or false);
    security_framework_sys_0_1_16.OSX_10_9 =
      (f.security_framework_sys_0_1_16.OSX_10_9 or false) ||
      (f.security_framework_sys_0_1_16.OSX_10_10 or false) ||
      (security_framework_sys_0_1_16.OSX_10_10 or false);
    security_framework_sys_0_1_16.default = (f.security_framework_sys_0_1_16.default or true);
  }) [ core_foundation_sys_0_2_3_features libc_0_2_39_features ];
  selectors_0_19_0 = { features?(selectors_0_19_0_features {}) }: selectors_0_19_0_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 cssparser_0_23_2 fnv_1_0_6 log_0_3_9 matches_0_1_6 phf_0_7_21 precomputed_hash_0_1_1 servo_arc_0_1_1 smallvec_0_6_0 ]);
    buildDependencies = mapFeatures features ([ phf_codegen_0_7_21 ]);
    features = mkFeatures (features.selectors_0_19_0 or {});
  };
  selectors_0_19_0_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = true;
    cssparser_0_23_2.default = true;
    fnv_1_0_6.default = true;
    log_0_3_9.default = true;
    matches_0_1_6.default = true;
    phf_0_7_21.default = true;
    phf_codegen_0_7_21.default = true;
    precomputed_hash_0_1_1.default = true;
    selectors_0_19_0.default = (f.selectors_0_19_0.default or true);
    servo_arc_0_1_1.default = true;
    smallvec_0_6_0.default = true;
  }) [ bitflags_1_0_1_features cssparser_0_23_2_features fnv_1_0_6_features log_0_3_9_features matches_0_1_6_features phf_0_7_21_features precomputed_hash_0_1_1_features servo_arc_0_1_1_features smallvec_0_6_0_features phf_codegen_0_7_21_features ];
  semver_0_9_0 = { features?(semver_0_9_0_features {}) }: semver_0_9_0_ {
    dependencies = mapFeatures features ([ semver_parser_0_7_0 ]);
    features = mkFeatures (features.semver_0_9_0 or {});
  };
  semver_0_9_0_features = f: updateFeatures f (rec {
    semver_0_9_0.default = (f.semver_0_9_0.default or true);
    semver_0_9_0.serde =
      (f.semver_0_9_0.serde or false) ||
      (f.semver_0_9_0.ci or false) ||
      (semver_0_9_0.ci or false);
    semver_parser_0_7_0.default = true;
  }) [ semver_parser_0_7_0_features ];
  semver_parser_0_7_0 = { features?(semver_parser_0_7_0_features {}) }: semver_parser_0_7_0_ {};
  semver_parser_0_7_0_features = f: updateFeatures f (rec {
    semver_parser_0_7_0.default = (f.semver_parser_0_7_0.default or true);
  }) [];
  serde_1_0_32 = { features?(serde_1_0_32_features {}) }: serde_1_0_32_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.serde_1_0_32 or {});
  };
  serde_1_0_32_features = f: updateFeatures f (rec {
    serde_1_0_32.default = (f.serde_1_0_32.default or true);
    serde_1_0_32.serde_derive =
      (f.serde_1_0_32.serde_derive or false) ||
      (f.serde_1_0_32.derive or false) ||
      (serde_1_0_32.derive or false) ||
      (f.serde_1_0_32.playground or false) ||
      (serde_1_0_32.playground or false);
    serde_1_0_32.std =
      (f.serde_1_0_32.std or false) ||
      (f.serde_1_0_32.default or false) ||
      (serde_1_0_32.default or false);
    serde_1_0_32.unstable =
      (f.serde_1_0_32.unstable or false) ||
      (f.serde_1_0_32.alloc or false) ||
      (serde_1_0_32.alloc or false);
  }) [];
  serde_value_0_5_1 = { features?(serde_value_0_5_1_features {}) }: serde_value_0_5_1_ {
    dependencies = mapFeatures features ([ ordered_float_0_5_0 serde_1_0_32 ]);
  };
  serde_value_0_5_1_features = f: updateFeatures f (rec {
    ordered_float_0_5_0.default = true;
    serde_1_0_32.default = true;
    serde_value_0_5_1.default = (f.serde_value_0_5_1.default or true);
  }) [ ordered_float_0_5_0_features serde_1_0_32_features ];
  serde_derive_1_0_32 = { features?(serde_derive_1_0_32_features {}) }: serde_derive_1_0_32_ {
    dependencies = mapFeatures features ([ proc_macro2_0_2_3 quote_0_4_2 serde_derive_internals_0_20_1 syn_0_12_14 ]);
    features = mkFeatures (features.serde_derive_1_0_32 or {});
  };
  serde_derive_1_0_32_features = f: updateFeatures f (rec {
    proc_macro2_0_2_3.default = true;
    quote_0_4_2.default = true;
    serde_derive_1_0_32.default = (f.serde_derive_1_0_32.default or true);
    serde_derive_internals_0_20_1.default = (f.serde_derive_internals_0_20_1.default or false);
    syn_0_12_14.default = true;
    syn_0_12_14.visit = true;
  }) [ proc_macro2_0_2_3_features quote_0_4_2_features serde_derive_internals_0_20_1_features syn_0_12_14_features ];
  serde_derive_internals_0_20_1 = { features?(serde_derive_internals_0_20_1_features {}) }: serde_derive_internals_0_20_1_ {
    dependencies = mapFeatures features ([ proc_macro2_0_2_3 syn_0_12_14 ]);
  };
  serde_derive_internals_0_20_1_features = f: updateFeatures f (rec {
    proc_macro2_0_2_3.default = true;
    serde_derive_internals_0_20_1.default = (f.serde_derive_internals_0_20_1.default or true);
    syn_0_12_14.clone-impls = true;
    syn_0_12_14.default = (f.syn_0_12_14.default or false);
    syn_0_12_14.derive = true;
    syn_0_12_14.parsing = true;
  }) [ proc_macro2_0_2_3_features syn_0_12_14_features ];
  serde_json_1_0_11 = { features?(serde_json_1_0_11_features {}) }: serde_json_1_0_11_ {
    dependencies = mapFeatures features ([ dtoa_0_4_2 itoa_0_3_4 num_traits_0_2_1 serde_1_0_32 ]);
    features = mkFeatures (features.serde_json_1_0_11 or {});
  };
  serde_json_1_0_11_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = true;
    itoa_0_3_4.default = true;
    num_traits_0_2_1.default = (f.num_traits_0_2_1.default or false);
    serde_1_0_32.default = true;
    serde_json_1_0_11.default = (f.serde_json_1_0_11.default or true);
    serde_json_1_0_11.linked-hash-map =
      (f.serde_json_1_0_11.linked-hash-map or false) ||
      (f.serde_json_1_0_11.preserve_order or false) ||
      (serde_json_1_0_11.preserve_order or false);
  }) [ dtoa_0_4_2_features itoa_0_3_4_features num_traits_0_2_1_features serde_1_0_32_features ];
  serde_urlencoded_0_5_1 = { features?(serde_urlencoded_0_5_1_features {}) }: serde_urlencoded_0_5_1_ {
    dependencies = mapFeatures features ([ dtoa_0_4_2 itoa_0_3_4 serde_1_0_32 url_1_7_0 ]);
  };
  serde_urlencoded_0_5_1_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = true;
    itoa_0_3_4.default = true;
    serde_1_0_32.default = true;
    serde_urlencoded_0_5_1.default = (f.serde_urlencoded_0_5_1.default or true);
    url_1_7_0.default = true;
  }) [ dtoa_0_4_2_features itoa_0_3_4_features serde_1_0_32_features url_1_7_0_features ];
  serde_yaml_0_7_3 = { features?(serde_yaml_0_7_3_features {}) }: serde_yaml_0_7_3_ {
    dependencies = mapFeatures features ([ linked_hash_map_0_5_1 num_traits_0_1_43 serde_1_0_32 yaml_rust_0_4_0 ]);
  };
  serde_yaml_0_7_3_features = f: updateFeatures f (rec {
    linked_hash_map_0_5_1.default = true;
    num_traits_0_1_43.default = true;
    serde_1_0_32.default = true;
    serde_yaml_0_7_3.default = (f.serde_yaml_0_7_3.default or true);
    yaml_rust_0_4_0.default = true;
  }) [ linked_hash_map_0_5_1_features num_traits_0_1_43_features serde_1_0_32_features yaml_rust_0_4_0_features ];
  server_0_1_0 = { features?(server_0_1_0_features {}) }: server_0_1_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_0 diesel_1_1_1 diesel_full_text_search_1_0_0 dotenv_0_11_0 error_chain_0_11_0 futures_0_1_18 futures_cpupool_0_1_8 hyper_0_11_22 hyper_tls_0_1_2 jsonwebtoken_4_0_0 kuchiki_0_7_0 log_0_4_1 log4rs_0_8_0 nom_3_2_1 r2d2_0_8_2 r2d2_diesel_1_0_0 rand_0_4_2 regex_0_2_9 rusoto_core_0_32_0 rusoto_credential_0_11_0 rusoto_s3_0_32_0 serde_1_0_32 serde_derive_1_0_32 serde_json_1_0_11 tokio_core_0_1_15 tokio_postgres_0_3_0 tokio_timer_0_1_2 unicase_2_1_0 url_1_7_0 ]);
  };
  server_0_1_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = true;
    chrono_0_4_0.serde = true;
    diesel_1_1_1.chrono = true;
    diesel_1_1_1.default = true;
    diesel_1_1_1.large-tables = true;
    diesel_1_1_1.postgres = true;
    diesel_1_1_1.r2d2 = true;
    diesel_1_1_1.serde_json = true;
    diesel_full_text_search_1_0_0.default = true;
    dotenv_0_11_0.default = true;
    error_chain_0_11_0.default = true;
    futures_0_1_18.default = true;
    futures_cpupool_0_1_8.default = true;
    hyper_0_11_22.default = true;
    hyper_tls_0_1_2.default = true;
    jsonwebtoken_4_0_0.default = true;
    kuchiki_0_7_0.default = true;
    log4rs_0_8_0.default = true;
    log_0_4_1.default = true;
    nom_3_2_1.default = true;
    r2d2_0_8_2.default = true;
    r2d2_diesel_1_0_0.default = true;
    rand_0_4_2.default = true;
    regex_0_2_9.default = true;
    rusoto_core_0_32_0.default = true;
    rusoto_credential_0_11_0.default = true;
    rusoto_s3_0_32_0.default = true;
    serde_1_0_32.default = true;
    serde_derive_1_0_32.default = true;
    serde_json_1_0_11.default = true;
    server_0_1_0.default = (f.server_0_1_0.default or true);
    tokio_core_0_1_15.default = true;
    tokio_postgres_0_3_0.default = true;
    tokio_timer_0_1_2.default = true;
    unicase_2_1_0.default = true;
    url_1_7_0.default = true;
  }) [ chrono_0_4_0_features diesel_1_1_1_features diesel_full_text_search_1_0_0_features dotenv_0_11_0_features error_chain_0_11_0_features futures_0_1_18_features futures_cpupool_0_1_8_features hyper_0_11_22_features hyper_tls_0_1_2_features jsonwebtoken_4_0_0_features kuchiki_0_7_0_features log_0_4_1_features log4rs_0_8_0_features nom_3_2_1_features r2d2_0_8_2_features r2d2_diesel_1_0_0_features rand_0_4_2_features regex_0_2_9_features rusoto_core_0_32_0_features rusoto_credential_0_11_0_features rusoto_s3_0_32_0_features serde_1_0_32_features serde_derive_1_0_32_features serde_json_1_0_11_features tokio_core_0_1_15_features tokio_postgres_0_3_0_features tokio_timer_0_1_2_features unicase_2_1_0_features url_1_7_0_features ];
  servo_arc_0_1_1 = { features?(servo_arc_0_1_1_features {}) }: servo_arc_0_1_1_ {
    dependencies = mapFeatures features ([ nodrop_0_1_12 stable_deref_trait_1_0_0 ]);
    features = mkFeatures (features.servo_arc_0_1_1 or {});
  };
  servo_arc_0_1_1_features = f: updateFeatures f (rec {
    nodrop_0_1_12.default = true;
    servo_arc_0_1_1.default = (f.servo_arc_0_1_1.default or true);
    servo_arc_0_1_1.serde =
      (f.servo_arc_0_1_1.serde or false) ||
      (f.servo_arc_0_1_1.servo or false) ||
      (servo_arc_0_1_1.servo or false);
    stable_deref_trait_1_0_0.default = true;
  }) [ nodrop_0_1_12_features stable_deref_trait_1_0_0_features ];
  sha2_0_7_0 = { features?(sha2_0_7_0_features {}) }: sha2_0_7_0_ {
    dependencies = mapFeatures features ([ block_buffer_0_3_3 byte_tools_0_2_0 digest_0_7_2 fake_simd_0_1_2 ]);
    features = mkFeatures (features.sha2_0_7_0 or {});
  };
  sha2_0_7_0_features = f: updateFeatures f (rec {
    block_buffer_0_3_3.default = true;
    byte_tools_0_2_0.default = true;
    digest_0_7_2.default = true;
    fake_simd_0_1_2.default = true;
    sha2_0_7_0.default = (f.sha2_0_7_0.default or true);
    sha2_0_7_0.sha2-asm =
      (f.sha2_0_7_0.sha2-asm or false) ||
      (f.sha2_0_7_0.asm or false) ||
      (sha2_0_7_0.asm or false);
  }) [ block_buffer_0_3_3_features byte_tools_0_2_0_features digest_0_7_2_features fake_simd_0_1_2_features ];
  siphasher_0_2_2 = { features?(siphasher_0_2_2_features {}) }: siphasher_0_2_2_ {
    dependencies = mapFeatures features ([]);
  };
  siphasher_0_2_2_features = f: updateFeatures f (rec {
    siphasher_0_2_2.default = (f.siphasher_0_2_2.default or true);
  }) [];
  slab_0_3_0 = { features?(slab_0_3_0_features {}) }: slab_0_3_0_ {};
  slab_0_3_0_features = f: updateFeatures f (rec {
    slab_0_3_0.default = (f.slab_0_3_0.default or true);
  }) [];
  slab_0_4_0 = { features?(slab_0_4_0_features {}) }: slab_0_4_0_ {};
  slab_0_4_0_features = f: updateFeatures f (rec {
    slab_0_4_0.default = (f.slab_0_4_0.default or true);
  }) [];
  smallvec_0_2_1 = { features?(smallvec_0_2_1_features {}) }: smallvec_0_2_1_ {};
  smallvec_0_2_1_features = f: updateFeatures f (rec {
    smallvec_0_2_1.default = (f.smallvec_0_2_1.default or true);
  }) [];
  smallvec_0_6_0 = { features?(smallvec_0_6_0_features {}) }: smallvec_0_6_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.smallvec_0_6_0 or {});
  };
  smallvec_0_6_0_features = f: updateFeatures f (rec {
    smallvec_0_6_0.default = (f.smallvec_0_6_0.default or true);
    smallvec_0_6_0.std =
      (f.smallvec_0_6_0.std or false) ||
      (f.smallvec_0_6_0.default or false) ||
      (smallvec_0_6_0.default or false);
  }) [];
  stable_deref_trait_1_0_0 = { features?(stable_deref_trait_1_0_0_features {}) }: stable_deref_trait_1_0_0_ {
    features = mkFeatures (features.stable_deref_trait_1_0_0 or {});
  };
  stable_deref_trait_1_0_0_features = f: updateFeatures f (rec {
    stable_deref_trait_1_0_0.default = (f.stable_deref_trait_1_0_0.default or true);
    stable_deref_trait_1_0_0.std =
      (f.stable_deref_trait_1_0_0.std or false) ||
      (f.stable_deref_trait_1_0_0.default or false) ||
      (stable_deref_trait_1_0_0.default or false);
  }) [];
  string_cache_0_7_1 = { features?(string_cache_0_7_1_features {}) }: string_cache_0_7_1_ {
    dependencies = mapFeatures features ([ debug_unreachable_0_1_1 lazy_static_1_0_0 phf_shared_0_7_21 precomputed_hash_0_1_1 serde_1_0_32 string_cache_shared_0_3_0 ]);
    buildDependencies = mapFeatures features ([ string_cache_codegen_0_4_0 ]);
    features = mkFeatures (features.string_cache_0_7_1 or {});
  };
  string_cache_0_7_1_features = f: updateFeatures f (rec {
    debug_unreachable_0_1_1.default = true;
    lazy_static_1_0_0.default = true;
    phf_shared_0_7_21.default = true;
    precomputed_hash_0_1_1.default = true;
    serde_1_0_32.default = true;
    string_cache_0_7_1.default = (f.string_cache_0_7_1.default or true);
    string_cache_codegen_0_4_0.default = true;
    string_cache_shared_0_3_0.default = true;
  }) [ debug_unreachable_0_1_1_features lazy_static_1_0_0_features phf_shared_0_7_21_features precomputed_hash_0_1_1_features serde_1_0_32_features string_cache_shared_0_3_0_features string_cache_codegen_0_4_0_features ];
  string_cache_codegen_0_4_0 = { features?(string_cache_codegen_0_4_0_features {}) }: string_cache_codegen_0_4_0_ {
    dependencies = mapFeatures features ([ phf_generator_0_7_21 phf_shared_0_7_21 quote_0_3_15 string_cache_shared_0_3_0 ]);
  };
  string_cache_codegen_0_4_0_features = f: updateFeatures f (rec {
    phf_generator_0_7_21.default = true;
    phf_shared_0_7_21.default = true;
    quote_0_3_15.default = true;
    string_cache_codegen_0_4_0.default = (f.string_cache_codegen_0_4_0.default or true);
    string_cache_shared_0_3_0.default = true;
  }) [ phf_generator_0_7_21_features phf_shared_0_7_21_features quote_0_3_15_features string_cache_shared_0_3_0_features ];
  string_cache_shared_0_3_0 = { features?(string_cache_shared_0_3_0_features {}) }: string_cache_shared_0_3_0_ {};
  string_cache_shared_0_3_0_features = f: updateFeatures f (rec {
    string_cache_shared_0_3_0.default = (f.string_cache_shared_0_3_0.default or true);
  }) [];
  stringprep_0_1_2 = { features?(stringprep_0_1_2_features {}) }: stringprep_0_1_2_ {
    dependencies = mapFeatures features ([ unicode_bidi_0_3_4 unicode_normalization_0_1_5 ]);
  };
  stringprep_0_1_2_features = f: updateFeatures f (rec {
    stringprep_0_1_2.default = (f.stringprep_0_1_2.default or true);
    unicode_bidi_0_3_4.default = true;
    unicode_normalization_0_1_5.default = true;
  }) [ unicode_bidi_0_3_4_features unicode_normalization_0_1_5_features ];
  strsim_0_6_0 = { features?(strsim_0_6_0_features {}) }: strsim_0_6_0_ {};
  strsim_0_6_0_features = f: updateFeatures f (rec {
    strsim_0_6_0.default = (f.strsim_0_6_0.default or true);
  }) [];
  syn_0_11_11 = { features?(syn_0_11_11_features {}) }: syn_0_11_11_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.syn_0_11_11.quote or false then [ quote_0_3_15 ] else [])
      ++ (if features.syn_0_11_11.synom or false then [ synom_0_11_3 ] else [])
      ++ (if features.syn_0_11_11.unicode-xid or false then [ unicode_xid_0_0_4 ] else []));
    features = mkFeatures (features.syn_0_11_11 or {});
  };
  syn_0_11_11_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    syn_0_11_11.default = (f.syn_0_11_11.default or true);
    syn_0_11_11.parsing =
      (f.syn_0_11_11.parsing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.printing =
      (f.syn_0_11_11.printing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.quote =
      (f.syn_0_11_11.quote or false) ||
      (f.syn_0_11_11.printing or false) ||
      (syn_0_11_11.printing or false);
    syn_0_11_11.synom =
      (f.syn_0_11_11.synom or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    syn_0_11_11.unicode-xid =
      (f.syn_0_11_11.unicode-xid or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    synom_0_11_3.default = true;
    unicode_xid_0_0_4.default = true;
  }) [ quote_0_3_15_features synom_0_11_3_features unicode_xid_0_0_4_features ];
  syn_0_12_14 = { features?(syn_0_12_14_features {}) }: syn_0_12_14_ {
    dependencies = mapFeatures features ([ proc_macro2_0_2_3 unicode_xid_0_1_0 ]
      ++ (if features.syn_0_12_14.quote or false then [ quote_0_4_2 ] else []));
    features = mkFeatures (features.syn_0_12_14 or {});
  };
  syn_0_12_14_features = f: updateFeatures f (rec {
    proc_macro2_0_2_3.default = true;
    quote_0_4_2.default = true;
    syn_0_12_14.clone-impls =
      (f.syn_0_12_14.clone-impls or false) ||
      (f.syn_0_12_14.default or false) ||
      (syn_0_12_14.default or false);
    syn_0_12_14.default = (f.syn_0_12_14.default or true);
    syn_0_12_14.derive =
      (f.syn_0_12_14.derive or false) ||
      (f.syn_0_12_14.default or false) ||
      (syn_0_12_14.default or false);
    syn_0_12_14.parsing =
      (f.syn_0_12_14.parsing or false) ||
      (f.syn_0_12_14.default or false) ||
      (syn_0_12_14.default or false);
    syn_0_12_14.printing =
      (f.syn_0_12_14.printing or false) ||
      (f.syn_0_12_14.default or false) ||
      (syn_0_12_14.default or false);
    syn_0_12_14.quote =
      (f.syn_0_12_14.quote or false) ||
      (f.syn_0_12_14.printing or false) ||
      (syn_0_12_14.printing or false);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_2_3_features quote_0_4_2_features unicode_xid_0_1_0_features ];
  synom_0_11_3 = { features?(synom_0_11_3_features {}) }: synom_0_11_3_ {
    dependencies = mapFeatures features ([ unicode_xid_0_0_4 ]);
  };
  synom_0_11_3_features = f: updateFeatures f (rec {
    synom_0_11_3.default = (f.synom_0_11_3.default or true);
    unicode_xid_0_0_4.default = true;
  }) [ unicode_xid_0_0_4_features ];
  take_0_1_0 = { features?(take_0_1_0_features {}) }: take_0_1_0_ {};
  take_0_1_0_features = f: updateFeatures f (rec {
    take_0_1_0.default = (f.take_0_1_0.default or true);
  }) [];
  tempdir_0_3_6 = { features?(tempdir_0_3_6_features {}) }: tempdir_0_3_6_ {
    dependencies = mapFeatures features ([ rand_0_4_2 remove_dir_all_0_3_0 ]);
  };
  tempdir_0_3_6_features = f: updateFeatures f (rec {
    rand_0_4_2.default = true;
    remove_dir_all_0_3_0.default = true;
    tempdir_0_3_6.default = (f.tempdir_0_3_6.default or true);
  }) [ rand_0_4_2_features remove_dir_all_0_3_0_features ];
  tendril_0_4_0 = { features?(tendril_0_4_0_features {}) }: tendril_0_4_0_ {
    dependencies = mapFeatures features ([ futf_0_1_3 mac_0_1_1 utf_8_0_7_2 ]);
    features = mkFeatures (features.tendril_0_4_0 or {});
  };
  tendril_0_4_0_features = f: updateFeatures f (rec {
    futf_0_1_3.default = true;
    mac_0_1_1.default = true;
    tendril_0_4_0.default = (f.tendril_0_4_0.default or true);
    utf_8_0_7_2.default = true;
  }) [ futf_0_1_3_features mac_0_1_1_features utf_8_0_7_2_features ];
  thread_local_0_3_5 = { features?(thread_local_0_3_5_features {}) }: thread_local_0_3_5_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_0 unreachable_1_0_0 ]);
  };
  thread_local_0_3_5_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.default = true;
    thread_local_0_3_5.default = (f.thread_local_0_3_5.default or true);
    unreachable_1_0_0.default = true;
  }) [ lazy_static_1_0_0_features unreachable_1_0_0_features ];
  time_0_1_39 = { features?(time_0_1_39_features {}) }: time_0_1_39_ {
    dependencies = mapFeatures features ([ libc_0_2_39 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  time_0_1_39_features = f: updateFeatures f (rec {
    libc_0_2_39.default = true;
    redox_syscall_0_1_37.default = true;
    time_0_1_39.default = (f.time_0_1_39.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwinbase = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.ntdef = true;
    winapi_0_3_4.profileapi = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.sysinfoapi = true;
    winapi_0_3_4.timezoneapi = true;
  }) [ libc_0_2_39_features redox_syscall_0_1_37_features winapi_0_3_4_features ];
  tokio_0_1_3 = { features?(tokio_0_1_3_features {}) }: tokio_0_1_3_ {
    dependencies = mapFeatures features ([ bytes_0_4_6 futures_0_1_18 iovec_0_1_2 log_0_4_1 mio_0_6_14 slab_0_4_0 tokio_executor_0_1_0 tokio_io_0_1_6 tokio_reactor_0_1_0 tokio_threadpool_0_1_0 ]);
  };
  tokio_0_1_3_features = f: updateFeatures f (rec {
    bytes_0_4_6.default = true;
    futures_0_1_18.default = true;
    iovec_0_1_2.default = true;
    log_0_4_1.default = true;
    mio_0_6_14.default = true;
    slab_0_4_0.default = true;
    tokio_0_1_3.default = (f.tokio_0_1_3.default or true);
    tokio_executor_0_1_0.default = true;
    tokio_io_0_1_6.default = true;
    tokio_reactor_0_1_0.default = true;
    tokio_threadpool_0_1_0.default = true;
  }) [ bytes_0_4_6_features futures_0_1_18_features iovec_0_1_2_features log_0_4_1_features mio_0_6_14_features slab_0_4_0_features tokio_executor_0_1_0_features tokio_io_0_1_6_features tokio_reactor_0_1_0_features tokio_threadpool_0_1_0_features ];
  tokio_core_0_1_15 = { features?(tokio_core_0_1_15_features {}) }: tokio_core_0_1_15_ {
    dependencies = mapFeatures features ([ bytes_0_4_6 futures_0_1_18 iovec_0_1_2 log_0_4_1 mio_0_6_14 scoped_tls_0_1_1 slab_0_4_0 tokio_0_1_3 tokio_executor_0_1_0 tokio_io_0_1_6 tokio_reactor_0_1_0 ]);
  };
  tokio_core_0_1_15_features = f: updateFeatures f (rec {
    bytes_0_4_6.default = true;
    futures_0_1_18.default = true;
    iovec_0_1_2.default = true;
    log_0_4_1.default = true;
    mio_0_6_14.default = true;
    scoped_tls_0_1_1.default = true;
    slab_0_4_0.default = true;
    tokio_0_1_3.default = true;
    tokio_core_0_1_15.default = (f.tokio_core_0_1_15.default or true);
    tokio_executor_0_1_0.default = true;
    tokio_io_0_1_6.default = true;
    tokio_reactor_0_1_0.default = true;
  }) [ bytes_0_4_6_features futures_0_1_18_features iovec_0_1_2_features log_0_4_1_features mio_0_6_14_features scoped_tls_0_1_1_features slab_0_4_0_features tokio_0_1_3_features tokio_executor_0_1_0_features tokio_io_0_1_6_features tokio_reactor_0_1_0_features ];
  tokio_dns_unofficial_0_1_1 = { features?(tokio_dns_unofficial_0_1_1_features {}) }: tokio_dns_unofficial_0_1_1_ {
    dependencies = mapFeatures features ([ futures_0_1_18 futures_cpupool_0_1_8 lazy_static_0_2_11 tokio_core_0_1_15 ]);
  };
  tokio_dns_unofficial_0_1_1_features = f: updateFeatures f (rec {
    futures_0_1_18.default = true;
    futures_cpupool_0_1_8.default = true;
    lazy_static_0_2_11.default = true;
    tokio_core_0_1_15.default = true;
    tokio_dns_unofficial_0_1_1.default = (f.tokio_dns_unofficial_0_1_1.default or true);
  }) [ futures_0_1_18_features futures_cpupool_0_1_8_features lazy_static_0_2_11_features tokio_core_0_1_15_features ];
  tokio_executor_0_1_0 = { features?(tokio_executor_0_1_0_features {}) }: tokio_executor_0_1_0_ {
    dependencies = mapFeatures features ([ futures_0_1_18 ]);
  };
  tokio_executor_0_1_0_features = f: updateFeatures f (rec {
    futures_0_1_18.default = true;
    tokio_executor_0_1_0.default = (f.tokio_executor_0_1_0.default or true);
  }) [ futures_0_1_18_features ];
  tokio_io_0_1_6 = { features?(tokio_io_0_1_6_features {}) }: tokio_io_0_1_6_ {
    dependencies = mapFeatures features ([ bytes_0_4_6 futures_0_1_18 log_0_4_1 ]);
  };
  tokio_io_0_1_6_features = f: updateFeatures f (rec {
    bytes_0_4_6.default = true;
    futures_0_1_18.default = true;
    log_0_4_1.default = true;
    tokio_io_0_1_6.default = (f.tokio_io_0_1_6.default or true);
  }) [ bytes_0_4_6_features futures_0_1_18_features log_0_4_1_features ];
  tokio_postgres_0_3_0 = { features?(tokio_postgres_0_3_0_features {}) }: tokio_postgres_0_3_0_ {
    dependencies = mapFeatures features ([ bytes_0_4_6 fallible_iterator_0_1_4 futures_0_1_18 futures_state_stream_0_2_0 postgres_protocol_0_3_2 postgres_shared_0_4_1 tokio_core_0_1_15 tokio_dns_unofficial_0_1_1 tokio_io_0_1_6 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ tokio_uds_0_1_7 ]) else []);
    features = mkFeatures (features.tokio_postgres_0_3_0 or {});
  };
  tokio_postgres_0_3_0_features = f: updateFeatures f (rec {
    bytes_0_4_6.default = true;
    fallible_iterator_0_1_4.default = true;
    futures_0_1_18.default = true;
    futures_state_stream_0_2_0.default = true;
    postgres_protocol_0_3_2.default = true;
    postgres_shared_0_4_1.default = true;
    postgres_shared_0_4_1.with-bit-vec =
      (f.postgres_shared_0_4_1.with-bit-vec or false) ||
      (tokio_postgres_0_3_0.with-bit-vec or false) ||
      (f.tokio_postgres_0_3_0.with-bit-vec or false);
    postgres_shared_0_4_1.with-chrono =
      (f.postgres_shared_0_4_1.with-chrono or false) ||
      (tokio_postgres_0_3_0.with-chrono or false) ||
      (f.tokio_postgres_0_3_0.with-chrono or false);
    postgres_shared_0_4_1.with-eui48 =
      (f.postgres_shared_0_4_1.with-eui48 or false) ||
      (tokio_postgres_0_3_0.with-eui48 or false) ||
      (f.tokio_postgres_0_3_0.with-eui48 or false);
    postgres_shared_0_4_1.with-geo =
      (f.postgres_shared_0_4_1.with-geo or false) ||
      (tokio_postgres_0_3_0.with-geo or false) ||
      (f.tokio_postgres_0_3_0.with-geo or false);
    postgres_shared_0_4_1.with-rustc-serialize =
      (f.postgres_shared_0_4_1.with-rustc-serialize or false) ||
      (tokio_postgres_0_3_0.with-rustc-serialize or false) ||
      (f.tokio_postgres_0_3_0.with-rustc-serialize or false);
    postgres_shared_0_4_1.with-serde_json =
      (f.postgres_shared_0_4_1.with-serde_json or false) ||
      (tokio_postgres_0_3_0.with-serde_json or false) ||
      (f.tokio_postgres_0_3_0.with-serde_json or false);
    postgres_shared_0_4_1.with-time =
      (f.postgres_shared_0_4_1.with-time or false) ||
      (tokio_postgres_0_3_0.with-time or false) ||
      (f.tokio_postgres_0_3_0.with-time or false);
    postgres_shared_0_4_1.with-uuid =
      (f.postgres_shared_0_4_1.with-uuid or false) ||
      (tokio_postgres_0_3_0.with-uuid or false) ||
      (f.tokio_postgres_0_3_0.with-uuid or false);
    tokio_core_0_1_15.default = true;
    tokio_dns_unofficial_0_1_1.default = true;
    tokio_io_0_1_6.default = true;
    tokio_postgres_0_3_0.default = (f.tokio_postgres_0_3_0.default or true);
    tokio_postgres_0_3_0.openssl =
      (f.tokio_postgres_0_3_0.openssl or false) ||
      (f.tokio_postgres_0_3_0.with-openssl or false) ||
      (tokio_postgres_0_3_0.with-openssl or false);
    tokio_postgres_0_3_0.tokio-openssl =
      (f.tokio_postgres_0_3_0.tokio-openssl or false) ||
      (f.tokio_postgres_0_3_0.with-openssl or false) ||
      (tokio_postgres_0_3_0.with-openssl or false);
    tokio_uds_0_1_7.default = true;
  }) [ bytes_0_4_6_features fallible_iterator_0_1_4_features futures_0_1_18_features futures_state_stream_0_2_0_features postgres_protocol_0_3_2_features postgres_shared_0_4_1_features tokio_core_0_1_15_features tokio_dns_unofficial_0_1_1_features tokio_io_0_1_6_features tokio_uds_0_1_7_features ];
  tokio_proto_0_1_1 = { features?(tokio_proto_0_1_1_features {}) }: tokio_proto_0_1_1_ {
    dependencies = mapFeatures features ([ futures_0_1_18 log_0_3_9 net2_0_2_32 rand_0_3_22 slab_0_3_0 smallvec_0_2_1 take_0_1_0 tokio_core_0_1_15 tokio_io_0_1_6 tokio_service_0_1_0 ]);
  };
  tokio_proto_0_1_1_features = f: updateFeatures f (rec {
    futures_0_1_18.default = true;
    log_0_3_9.default = true;
    net2_0_2_32.default = true;
    rand_0_3_22.default = true;
    slab_0_3_0.default = true;
    smallvec_0_2_1.default = true;
    take_0_1_0.default = true;
    tokio_core_0_1_15.default = true;
    tokio_io_0_1_6.default = true;
    tokio_proto_0_1_1.default = (f.tokio_proto_0_1_1.default or true);
    tokio_service_0_1_0.default = true;
  }) [ futures_0_1_18_features log_0_3_9_features net2_0_2_32_features rand_0_3_22_features slab_0_3_0_features smallvec_0_2_1_features take_0_1_0_features tokio_core_0_1_15_features tokio_io_0_1_6_features tokio_service_0_1_0_features ];
  tokio_reactor_0_1_0 = { features?(tokio_reactor_0_1_0_features {}) }: tokio_reactor_0_1_0_ {
    dependencies = mapFeatures features ([ futures_0_1_18 log_0_4_1 mio_0_6_14 slab_0_4_0 tokio_executor_0_1_0 tokio_io_0_1_6 ]);
  };
  tokio_reactor_0_1_0_features = f: updateFeatures f (rec {
    futures_0_1_18.default = true;
    log_0_4_1.default = true;
    mio_0_6_14.default = true;
    slab_0_4_0.default = true;
    tokio_executor_0_1_0.default = true;
    tokio_io_0_1_6.default = true;
    tokio_reactor_0_1_0.default = (f.tokio_reactor_0_1_0.default or true);
  }) [ futures_0_1_18_features log_0_4_1_features mio_0_6_14_features slab_0_4_0_features tokio_executor_0_1_0_features tokio_io_0_1_6_features ];
  tokio_service_0_1_0 = { features?(tokio_service_0_1_0_features {}) }: tokio_service_0_1_0_ {
    dependencies = mapFeatures features ([ futures_0_1_18 ]);
  };
  tokio_service_0_1_0_features = f: updateFeatures f (rec {
    futures_0_1_18.default = true;
    tokio_service_0_1_0.default = (f.tokio_service_0_1_0.default or true);
  }) [ futures_0_1_18_features ];
  tokio_threadpool_0_1_0 = { features?(tokio_threadpool_0_1_0_features {}) }: tokio_threadpool_0_1_0_ {
    dependencies = mapFeatures features ([ crossbeam_deque_0_3_0 futures_0_1_18 log_0_3_9 num_cpus_1_8_0 rand_0_3_22 tokio_executor_0_1_0 ]);
  };
  tokio_threadpool_0_1_0_features = f: updateFeatures f (rec {
    crossbeam_deque_0_3_0.default = true;
    futures_0_1_18.default = true;
    log_0_3_9.default = true;
    num_cpus_1_8_0.default = true;
    rand_0_3_22.default = true;
    tokio_executor_0_1_0.default = true;
    tokio_threadpool_0_1_0.default = (f.tokio_threadpool_0_1_0.default or true);
  }) [ crossbeam_deque_0_3_0_features futures_0_1_18_features log_0_3_9_features num_cpus_1_8_0_features rand_0_3_22_features tokio_executor_0_1_0_features ];
  tokio_timer_0_1_2 = { features?(tokio_timer_0_1_2_features {}) }: tokio_timer_0_1_2_ {
    dependencies = mapFeatures features ([ futures_0_1_18 slab_0_3_0 ]);
  };
  tokio_timer_0_1_2_features = f: updateFeatures f (rec {
    futures_0_1_18.default = true;
    slab_0_3_0.default = true;
    tokio_timer_0_1_2.default = (f.tokio_timer_0_1_2.default or true);
  }) [ futures_0_1_18_features slab_0_3_0_features ];
  tokio_tls_0_1_4 = { features?(tokio_tls_0_1_4_features {}) }: tokio_tls_0_1_4_ {
    dependencies = mapFeatures features ([ futures_0_1_18 native_tls_0_1_5 tokio_core_0_1_15 tokio_io_0_1_6 ])
      ++ (if !(kernel == "darwin") && !(kernel == "windows") && !(kernel == "ios") then mapFeatures features ([]) else [])
      ++ (if kernel == "darwin" || kernel == "ios" then mapFeatures features ([]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([]) else []);
  };
  tokio_tls_0_1_4_features = f: updateFeatures f (rec {
    futures_0_1_18.default = true;
    native_tls_0_1_5.default = true;
    tokio_core_0_1_15.default = true;
    tokio_io_0_1_6.default = true;
    tokio_tls_0_1_4.default = (f.tokio_tls_0_1_4.default or true);
  }) [ futures_0_1_18_features native_tls_0_1_5_features tokio_core_0_1_15_features tokio_io_0_1_6_features ];
  tokio_uds_0_1_7 = { features?(tokio_uds_0_1_7_features {}) }: tokio_uds_0_1_7_ {
    dependencies = mapFeatures features ([ bytes_0_4_6 futures_0_1_18 iovec_0_1_2 libc_0_2_39 log_0_3_9 mio_0_6_14 mio_uds_0_6_4 tokio_core_0_1_15 tokio_io_0_1_6 ]);
  };
  tokio_uds_0_1_7_features = f: updateFeatures f (rec {
    bytes_0_4_6.default = true;
    futures_0_1_18.default = true;
    iovec_0_1_2.default = true;
    libc_0_2_39.default = true;
    log_0_3_9.default = true;
    mio_0_6_14.default = true;
    mio_uds_0_6_4.default = true;
    tokio_core_0_1_15.default = true;
    tokio_io_0_1_6.default = true;
    tokio_uds_0_1_7.default = (f.tokio_uds_0_1_7.default or true);
  }) [ bytes_0_4_6_features futures_0_1_18_features iovec_0_1_2_features libc_0_2_39_features log_0_3_9_features mio_0_6_14_features mio_uds_0_6_4_features tokio_core_0_1_15_features tokio_io_0_1_6_features ];
  tools_0_1_0 = { features?(tools_0_1_0_features {}) }: tools_0_1_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_0 csv_1_0_0_beta_5 diesel_1_1_1 docopt_0_8_3 dotenv_0_11_0 futures_0_1_18 futures_cpupool_0_1_8 hyper_0_11_22 hyper_tls_0_1_2 kuchiki_0_7_0 r2d2_0_8_2 rusoto_core_0_32_0 rusoto_credential_0_11_0 rusoto_s3_0_32_0 serde_1_0_32 serde_derive_1_0_32 serde_json_1_0_11 server_0_1_0 tokio_core_0_1_15 url_1_7_0 ]);
  };
  tools_0_1_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = true;
    chrono_0_4_0.serde = true;
    csv_1_0_0_beta_5.default = true;
    diesel_1_1_1.default = true;
    diesel_1_1_1.postgres = true;
    diesel_1_1_1.r2d2 = true;
    docopt_0_8_3.default = true;
    dotenv_0_11_0.default = true;
    futures_0_1_18.default = true;
    futures_cpupool_0_1_8.default = true;
    hyper_0_11_22.default = true;
    hyper_tls_0_1_2.default = true;
    kuchiki_0_7_0.default = true;
    r2d2_0_8_2.default = true;
    rusoto_core_0_32_0.default = true;
    rusoto_credential_0_11_0.default = true;
    rusoto_s3_0_32_0.default = true;
    serde_1_0_32.default = true;
    serde_derive_1_0_32.default = true;
    serde_json_1_0_11.default = true;
    server_0_1_0.default = true;
    tokio_core_0_1_15.default = true;
    tools_0_1_0.default = (f.tools_0_1_0.default or true);
    url_1_7_0.default = true;
  }) [ chrono_0_4_0_features csv_1_0_0_beta_5_features diesel_1_1_1_features docopt_0_8_3_features dotenv_0_11_0_features futures_0_1_18_features futures_cpupool_0_1_8_features hyper_0_11_22_features hyper_tls_0_1_2_features kuchiki_0_7_0_features r2d2_0_8_2_features rusoto_core_0_32_0_features rusoto_credential_0_11_0_features rusoto_s3_0_32_0_features serde_1_0_32_features serde_derive_1_0_32_features serde_json_1_0_11_features server_0_1_0_features tokio_core_0_1_15_features url_1_7_0_features ];
  traitobject_0_1_0 = { features?(traitobject_0_1_0_features {}) }: traitobject_0_1_0_ {};
  traitobject_0_1_0_features = f: updateFeatures f (rec {
    traitobject_0_1_0.default = (f.traitobject_0_1_0.default or true);
  }) [];
  typemap_0_3_3 = { features?(typemap_0_3_3_features {}) }: typemap_0_3_3_ {
    dependencies = mapFeatures features ([ unsafe_any_0_4_2 ]);
  };
  typemap_0_3_3_features = f: updateFeatures f (rec {
    typemap_0_3_3.default = (f.typemap_0_3_3.default or true);
    unsafe_any_0_4_2.default = true;
  }) [ unsafe_any_0_4_2_features ];
  typenum_1_10_0 = { features?(typenum_1_10_0_features {}) }: typenum_1_10_0_ {
    features = mkFeatures (features.typenum_1_10_0 or {});
  };
  typenum_1_10_0_features = f: updateFeatures f (rec {
    typenum_1_10_0.default = (f.typenum_1_10_0.default or true);
  }) [];
  ucd_util_0_1_1 = { features?(ucd_util_0_1_1_features {}) }: ucd_util_0_1_1_ {};
  ucd_util_0_1_1_features = f: updateFeatures f (rec {
    ucd_util_0_1_1.default = (f.ucd_util_0_1_1.default or true);
  }) [];
  unicase_1_4_2 = { features?(unicase_1_4_2_features {}) }: unicase_1_4_2_ {
    dependencies = mapFeatures features ([]);
    buildDependencies = mapFeatures features ([ version_check_0_1_3 ]);
    features = mkFeatures (features.unicase_1_4_2 or {});
  };
  unicase_1_4_2_features = f: updateFeatures f (rec {
    unicase_1_4_2.default = (f.unicase_1_4_2.default or true);
    unicase_1_4_2.heapsize =
      (f.unicase_1_4_2.heapsize or false) ||
      (f.unicase_1_4_2.heap_size or false) ||
      (unicase_1_4_2.heap_size or false);
    unicase_1_4_2.heapsize_plugin =
      (f.unicase_1_4_2.heapsize_plugin or false) ||
      (f.unicase_1_4_2.heap_size or false) ||
      (unicase_1_4_2.heap_size or false);
    version_check_0_1_3.default = true;
  }) [ version_check_0_1_3_features ];
  unicase_2_1_0 = { features?(unicase_2_1_0_features {}) }: unicase_2_1_0_ {
    buildDependencies = mapFeatures features ([ version_check_0_1_3 ]);
    features = mkFeatures (features.unicase_2_1_0 or {});
  };
  unicase_2_1_0_features = f: updateFeatures f (rec {
    unicase_2_1_0.default = (f.unicase_2_1_0.default or true);
    version_check_0_1_3.default = true;
  }) [ version_check_0_1_3_features ];
  unicode_bidi_0_3_4 = { features?(unicode_bidi_0_3_4_features {}) }: unicode_bidi_0_3_4_ {
    dependencies = mapFeatures features ([ matches_0_1_6 ]);
    features = mkFeatures (features.unicode_bidi_0_3_4 or {});
  };
  unicode_bidi_0_3_4_features = f: updateFeatures f (rec {
    matches_0_1_6.default = true;
    unicode_bidi_0_3_4.default = (f.unicode_bidi_0_3_4.default or true);
    unicode_bidi_0_3_4.flame =
      (f.unicode_bidi_0_3_4.flame or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.flamer =
      (f.unicode_bidi_0_3_4.flamer or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.serde =
      (f.unicode_bidi_0_3_4.serde or false) ||
      (f.unicode_bidi_0_3_4.with_serde or false) ||
      (unicode_bidi_0_3_4.with_serde or false);
  }) [ matches_0_1_6_features ];
  unicode_normalization_0_1_5 = { features?(unicode_normalization_0_1_5_features {}) }: unicode_normalization_0_1_5_ {};
  unicode_normalization_0_1_5_features = f: updateFeatures f (rec {
    unicode_normalization_0_1_5.default = (f.unicode_normalization_0_1_5.default or true);
  }) [];
  unicode_xid_0_0_4 = { features?(unicode_xid_0_0_4_features {}) }: unicode_xid_0_0_4_ {
    features = mkFeatures (features.unicode_xid_0_0_4 or {});
  };
  unicode_xid_0_0_4_features = f: updateFeatures f (rec {
    unicode_xid_0_0_4.default = (f.unicode_xid_0_0_4.default or true);
  }) [];
  unicode_xid_0_1_0 = { features?(unicode_xid_0_1_0_features {}) }: unicode_xid_0_1_0_ {
    features = mkFeatures (features.unicode_xid_0_1_0 or {});
  };
  unicode_xid_0_1_0_features = f: updateFeatures f (rec {
    unicode_xid_0_1_0.default = (f.unicode_xid_0_1_0.default or true);
  }) [];
  unreachable_0_1_1 = { features?(unreachable_0_1_1_features {}) }: unreachable_0_1_1_ {
    dependencies = mapFeatures features ([ void_1_0_2 ]);
  };
  unreachable_0_1_1_features = f: updateFeatures f (rec {
    unreachable_0_1_1.default = (f.unreachable_0_1_1.default or true);
    void_1_0_2.default = (f.void_1_0_2.default or false);
  }) [ void_1_0_2_features ];
  unreachable_1_0_0 = { features?(unreachable_1_0_0_features {}) }: unreachable_1_0_0_ {
    dependencies = mapFeatures features ([ void_1_0_2 ]);
  };
  unreachable_1_0_0_features = f: updateFeatures f (rec {
    unreachable_1_0_0.default = (f.unreachable_1_0_0.default or true);
    void_1_0_2.default = (f.void_1_0_2.default or false);
  }) [ void_1_0_2_features ];
  unsafe_any_0_4_2 = { features?(unsafe_any_0_4_2_features {}) }: unsafe_any_0_4_2_ {
    dependencies = mapFeatures features ([ traitobject_0_1_0 ]);
  };
  unsafe_any_0_4_2_features = f: updateFeatures f (rec {
    traitobject_0_1_0.default = true;
    unsafe_any_0_4_2.default = (f.unsafe_any_0_4_2.default or true);
  }) [ traitobject_0_1_0_features ];
  untrusted_0_5_1 = { features?(untrusted_0_5_1_features {}) }: untrusted_0_5_1_ {};
  untrusted_0_5_1_features = f: updateFeatures f (rec {
    untrusted_0_5_1.default = (f.untrusted_0_5_1.default or true);
  }) [];
  url_1_7_0 = { features?(url_1_7_0_features {}) }: url_1_7_0_ {
    dependencies = mapFeatures features ([ idna_0_1_4 matches_0_1_6 percent_encoding_1_0_1 ]);
    features = mkFeatures (features.url_1_7_0 or {});
  };
  url_1_7_0_features = f: updateFeatures f (rec {
    idna_0_1_4.default = true;
    matches_0_1_6.default = true;
    percent_encoding_1_0_1.default = true;
    url_1_7_0.default = (f.url_1_7_0.default or true);
    url_1_7_0.encoding =
      (f.url_1_7_0.encoding or false) ||
      (f.url_1_7_0.query_encoding or false) ||
      (url_1_7_0.query_encoding or false);
    url_1_7_0.heapsize =
      (f.url_1_7_0.heapsize or false) ||
      (f.url_1_7_0.heap_size or false) ||
      (url_1_7_0.heap_size or false);
  }) [ idna_0_1_4_features matches_0_1_6_features percent_encoding_1_0_1_features ];
  utf_8_0_7_2 = { features?(utf_8_0_7_2_features {}) }: utf_8_0_7_2_ {};
  utf_8_0_7_2_features = f: updateFeatures f (rec {
    utf_8_0_7_2.default = (f.utf_8_0_7_2.default or true);
  }) [];
  utf8_ranges_1_0_0 = { features?(utf8_ranges_1_0_0_features {}) }: utf8_ranges_1_0_0_ {};
  utf8_ranges_1_0_0_features = f: updateFeatures f (rec {
    utf8_ranges_1_0_0.default = (f.utf8_ranges_1_0_0.default or true);
  }) [];
  uuid_0_5_1 = { features?(uuid_0_5_1_features {}) }: uuid_0_5_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.uuid_0_5_1.rand or false then [ rand_0_3_22 ] else []));
    features = mkFeatures (features.uuid_0_5_1 or {});
  };
  uuid_0_5_1_features = f: updateFeatures f (rec {
    rand_0_3_22.default = true;
    uuid_0_5_1.default = (f.uuid_0_5_1.default or true);
    uuid_0_5_1.md5 =
      (f.uuid_0_5_1.md5 or false) ||
      (f.uuid_0_5_1.v3 or false) ||
      (uuid_0_5_1.v3 or false);
    uuid_0_5_1.rand =
      (f.uuid_0_5_1.rand or false) ||
      (f.uuid_0_5_1.v1 or false) ||
      (uuid_0_5_1.v1 or false) ||
      (f.uuid_0_5_1.v4 or false) ||
      (uuid_0_5_1.v4 or false);
    uuid_0_5_1.sha1 =
      (f.uuid_0_5_1.sha1 or false) ||
      (f.uuid_0_5_1.v5 or false) ||
      (uuid_0_5_1.v5 or false);
  }) [ rand_0_3_22_features ];
  vcpkg_0_2_2 = { features?(vcpkg_0_2_2_features {}) }: vcpkg_0_2_2_ {};
  vcpkg_0_2_2_features = f: updateFeatures f (rec {
    vcpkg_0_2_2.default = (f.vcpkg_0_2_2.default or true);
  }) [];
  version_check_0_1_3 = { features?(version_check_0_1_3_features {}) }: version_check_0_1_3_ {};
  version_check_0_1_3_features = f: updateFeatures f (rec {
    version_check_0_1_3.default = (f.version_check_0_1_3.default or true);
  }) [];
  void_1_0_2 = { features?(void_1_0_2_features {}) }: void_1_0_2_ {
    features = mkFeatures (features.void_1_0_2 or {});
  };
  void_1_0_2_features = f: updateFeatures f (rec {
    void_1_0_2.default = (f.void_1_0_2.default or true);
    void_1_0_2.std =
      (f.void_1_0_2.std or false) ||
      (f.void_1_0_2.default or false) ||
      (void_1_0_2.default or false);
  }) [];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_0_3_4 = { features?(winapi_0_3_4_features {}) }: winapi_0_3_4_ {
    dependencies = (if kernel == "i686-pc-windows-gnu" then mapFeatures features ([ winapi_i686_pc_windows_gnu_0_4_0 ]) else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then mapFeatures features ([ winapi_x86_64_pc_windows_gnu_0_4_0 ]) else []);
    features = mkFeatures (features.winapi_0_3_4 or {});
  };
  winapi_0_3_4_features = f: updateFeatures f (rec {
    winapi_0_3_4.default = (f.winapi_0_3_4.default or true);
    winapi_i686_pc_windows_gnu_0_4_0.default = true;
    winapi_x86_64_pc_windows_gnu_0_4_0.default = true;
  }) [ winapi_i686_pc_windows_gnu_0_4_0_features winapi_x86_64_pc_windows_gnu_0_4_0_features ];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f (rec {
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
  winapi_i686_pc_windows_gnu_0_4_0 = { features?(winapi_i686_pc_windows_gnu_0_4_0_features {}) }: winapi_i686_pc_windows_gnu_0_4_0_ {};
  winapi_i686_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_i686_pc_windows_gnu_0_4_0.default = (f.winapi_i686_pc_windows_gnu_0_4_0.default or true);
  }) [];
  winapi_x86_64_pc_windows_gnu_0_4_0 = { features?(winapi_x86_64_pc_windows_gnu_0_4_0_features {}) }: winapi_x86_64_pc_windows_gnu_0_4_0_ {};
  winapi_x86_64_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_x86_64_pc_windows_gnu_0_4_0.default = (f.winapi_x86_64_pc_windows_gnu_0_4_0.default or true);
  }) [];
  ws2_32_sys_0_2_1 = { features?(ws2_32_sys_0_2_1_features {}) }: ws2_32_sys_0_2_1_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  ws2_32_sys_0_2_1_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
    ws2_32_sys_0_2_1.default = (f.ws2_32_sys_0_2_1.default or true);
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  xml_rs_0_7_0 = { features?(xml_rs_0_7_0_features {}) }: xml_rs_0_7_0_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 ]);
  };
  xml_rs_0_7_0_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = true;
    xml_rs_0_7_0.default = (f.xml_rs_0_7_0.default or true);
  }) [ bitflags_1_0_1_features ];
  yaml_rust_0_4_0 = { features?(yaml_rust_0_4_0_features {}) }: yaml_rust_0_4_0_ {
    dependencies = mapFeatures features ([ linked_hash_map_0_5_1 ]);
  };
  yaml_rust_0_4_0_features = f: updateFeatures f (rec {
    linked_hash_map_0_5_1.default = true;
    yaml_rust_0_4_0.default = (f.yaml_rust_0_4_0.default or true);
  }) [ linked_hash_map_0_5_1_features ];
}
